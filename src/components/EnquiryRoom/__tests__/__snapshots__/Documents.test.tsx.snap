// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders docs 1`] = `
<Documents>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "KtFsv",
            "rules": Array [],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat KtFsv"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "eAruFg",
                  "rules": Array [
                    "
  padding: 15px 15px 17px 15px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bxivhb eAruFg"
            >
              <Styled(styled.h2)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "jZVdYP",
                        "rules": Array [
                          "
  color: #404042;
  font-size: 28px;
  font-weight: 400;
",
                          "
  display: inline-block;
  margin: 0;
",
                        ],
                      },
                      "displayName": "Styled(styled.h2)",
                      "foldedComponentIds": Array [
                        "sc-bwzfXH",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h2",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h2
                    className="sc-bwzfXH sc-bZQynM jZVdYP"
                  >
                    ENQUIRY_DOCUMENTS_TITLE
                  </h2>
                </StyledComponent>
              </Styled(styled.h2)>
              <Styled(FileUpload)
                accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                addFile={[Function]}
              >
                <StyledComponent
                  accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                  addFile={[Function]}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "jsKGHJ",
                        "rules": Array [
                          "
  display: inline-block;
  float: right;
",
                        ],
                      },
                      "displayName": "Styled(FileUpload)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <FileUpload
                    accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                    addFile={[Function]}
                    className="sc-ifAKCX jsKGHJ"
                  >
                    <div
                      className="sc-ifAKCX jsKGHJ"
                    >
                      <div
                        className=""
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDragLeave={[Function]}
                        onDragOver={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        tabIndex={0}
                      >
                        <input
                          accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                          autoComplete="off"
                          multiple={true}
                          onChange={[Function]}
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          tabIndex={-1}
                          type="file"
                        />
                        <Styled(styled.button)>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-EHOje",
                                  "isStatic": false,
                                  "lastClassName": "gJKHaH",
                                  "rules": Array [
                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                    "
  color: white;
  min-width: 90px;
",
                                  ],
                                },
                                "displayName": "Styled(styled.button)",
                                "foldedComponentIds": Array [
                                  "sc-bdVaJa",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-EHOje",
                                "target": "button",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <button
                              className="sc-bdVaJa sc-EHOje gJKHaH"
                            >
                              <Styled(Plus)
                                color="white"
                                size="1.1em"
                              >
                                <StyledComponent
                                  color="white"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "byciYd",
                                        "rules": Array [
                                          "
  margin: -2px;
",
                                        ],
                                      },
                                      "displayName": "Styled(Plus)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  size="1.1em"
                                >
                                  <Plus
                                    className="sc-htoDjs byciYd"
                                    color="white"
                                    size="1.1em"
                                  >
                                    <svg
                                      className="sc-htoDjs byciYd"
                                      color="white"
                                      height="1.1em"
                                      size="1.1em"
                                      viewBox="0 0 18 17"
                                      width="1.1em"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                        stroke="white"
                                        strokeLinecap="round"
                                        strokeWidth={2}
                                      >
                                        <path
                                          d="M9 1.6v13.8M1.64 8.5h14.72"
                                        />
                                      </g>
                                    </svg>
                                  </Plus>
                                </StyledComponent>
                              </Styled(Plus)>
                              <styled.span>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-gzVnrw",
                                        "isStatic": false,
                                        "lastClassName": "ggkkOy",
                                        "rules": Array [
                                          "
  padding-left: 5px;
",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-gzVnrw",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="sc-gzVnrw ggkkOy"
                                  >
                                    ENQUIRY_DOCUMENTS_ADD
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </button>
                          </StyledComponent>
                        </Styled(styled.button)>
                      </div>
                    </div>
                  </FileUpload>
                </StyledComponent>
              </Styled(FileUpload)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "lastClassName": "ivCeJB",
                  "rules": Array [
                    "
  padding: 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-gqjmRU ivCeJB"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-VigVT",
                        "isStatic": false,
                        "lastClassName": "jvQSWH",
                        "rules": Array [
                          "
  width: 100%;
  opacity: 0.98;
  background-color: #f4f4f4;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  box-sizing: border-box;
  font-weight: 500;
  font-size: 16px;
  line-height: 21px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-VigVT",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-VigVT jvQSWH"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                        >
                          ENQUIRY_DOCUMENTS_ATTACHMENT
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          ENQUIRY_DOCUMENTS_DETAIL
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="1"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Documents>
`;

exports[`Renders empty docs 1`] = `
<Documents>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "KtFsv",
            "rules": Array [],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat KtFsv"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "eAruFg",
                  "rules": Array [
                    "
  padding: 15px 15px 17px 15px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bxivhb eAruFg"
            >
              <Styled(styled.h2)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "jZVdYP",
                        "rules": Array [
                          "
  color: #404042;
  font-size: 28px;
  font-weight: 400;
",
                          "
  display: inline-block;
  margin: 0;
",
                        ],
                      },
                      "displayName": "Styled(styled.h2)",
                      "foldedComponentIds": Array [
                        "sc-bwzfXH",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h2",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h2
                    className="sc-bwzfXH sc-bZQynM jZVdYP"
                  >
                    ENQUIRY_DOCUMENTS_TITLE
                  </h2>
                </StyledComponent>
              </Styled(styled.h2)>
              <Styled(FileUpload)
                accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                addFile={[Function]}
              >
                <StyledComponent
                  accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                  addFile={[Function]}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "jsKGHJ",
                        "rules": Array [
                          "
  display: inline-block;
  float: right;
",
                        ],
                      },
                      "displayName": "Styled(FileUpload)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <FileUpload
                    accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                    addFile={[Function]}
                    className="sc-ifAKCX jsKGHJ"
                  >
                    <div
                      className="sc-ifAKCX jsKGHJ"
                    >
                      <div
                        className=""
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDragLeave={[Function]}
                        onDragOver={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        tabIndex={0}
                      >
                        <input
                          accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                          autoComplete="off"
                          multiple={true}
                          onChange={[Function]}
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          tabIndex={-1}
                          type="file"
                        />
                        <Styled(styled.button)>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-EHOje",
                                  "isStatic": false,
                                  "lastClassName": "gJKHaH",
                                  "rules": Array [
                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                    "
  color: white;
  min-width: 90px;
",
                                  ],
                                },
                                "displayName": "Styled(styled.button)",
                                "foldedComponentIds": Array [
                                  "sc-bdVaJa",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-EHOje",
                                "target": "button",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <button
                              className="sc-bdVaJa sc-EHOje gJKHaH"
                            >
                              <Styled(Plus)
                                color="white"
                                size="1.1em"
                              >
                                <StyledComponent
                                  color="white"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "byciYd",
                                        "rules": Array [
                                          "
  margin: -2px;
",
                                        ],
                                      },
                                      "displayName": "Styled(Plus)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  size="1.1em"
                                >
                                  <Plus
                                    className="sc-htoDjs byciYd"
                                    color="white"
                                    size="1.1em"
                                  >
                                    <svg
                                      className="sc-htoDjs byciYd"
                                      color="white"
                                      height="1.1em"
                                      size="1.1em"
                                      viewBox="0 0 18 17"
                                      width="1.1em"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                        stroke="white"
                                        strokeLinecap="round"
                                        strokeWidth={2}
                                      >
                                        <path
                                          d="M9 1.6v13.8M1.64 8.5h14.72"
                                        />
                                      </g>
                                    </svg>
                                  </Plus>
                                </StyledComponent>
                              </Styled(Plus)>
                              <styled.span>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-gzVnrw",
                                        "isStatic": false,
                                        "lastClassName": "ggkkOy",
                                        "rules": Array [
                                          "
  padding-left: 5px;
",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-gzVnrw",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="sc-gzVnrw ggkkOy"
                                  >
                                    ENQUIRY_DOCUMENTS_ADD
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </button>
                          </StyledComponent>
                        </Styled(styled.button)>
                      </div>
                    </div>
                  </FileUpload>
                </StyledComponent>
              </Styled(FileUpload)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": false,
                  "lastClassName": "efjHJE",
                  "rules": Array [
                    "
  padding: 20px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 16px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-gZMcBi efjHJE"
            >
              ENQUIRY_DOCUMENTS_EMPTY
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Documents>
`;

exports[`Renders view all docs 1`] = `
<Documents>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "KtFsv",
            "rules": Array [],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat KtFsv"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "eAruFg",
                  "rules": Array [
                    "
  padding: 15px 15px 17px 15px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bxivhb eAruFg"
            >
              <Styled(styled.h2)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "jZVdYP",
                        "rules": Array [
                          "
  color: #404042;
  font-size: 28px;
  font-weight: 400;
",
                          "
  display: inline-block;
  margin: 0;
",
                        ],
                      },
                      "displayName": "Styled(styled.h2)",
                      "foldedComponentIds": Array [
                        "sc-bwzfXH",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h2",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h2
                    className="sc-bwzfXH sc-bZQynM jZVdYP"
                  >
                    ENQUIRY_DOCUMENTS_TITLE
                  </h2>
                </StyledComponent>
              </Styled(styled.h2)>
              <Styled(FileUpload)
                accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                addFile={[Function]}
              >
                <StyledComponent
                  accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                  addFile={[Function]}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "jsKGHJ",
                        "rules": Array [
                          "
  display: inline-block;
  float: right;
",
                        ],
                      },
                      "displayName": "Styled(FileUpload)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <FileUpload
                    accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                    addFile={[Function]}
                    className="sc-ifAKCX jsKGHJ"
                  >
                    <div
                      className="sc-ifAKCX jsKGHJ"
                    >
                      <div
                        className=""
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDragLeave={[Function]}
                        onDragOver={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        tabIndex={0}
                      >
                        <input
                          accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                          autoComplete="off"
                          multiple={true}
                          onChange={[Function]}
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          tabIndex={-1}
                          type="file"
                        />
                        <Styled(styled.button)>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-EHOje",
                                  "isStatic": false,
                                  "lastClassName": "gJKHaH",
                                  "rules": Array [
                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                    "
  color: white;
  min-width: 90px;
",
                                  ],
                                },
                                "displayName": "Styled(styled.button)",
                                "foldedComponentIds": Array [
                                  "sc-bdVaJa",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-EHOje",
                                "target": "button",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <button
                              className="sc-bdVaJa sc-EHOje gJKHaH"
                            >
                              <Styled(Plus)
                                color="white"
                                size="1.1em"
                              >
                                <StyledComponent
                                  color="white"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "byciYd",
                                        "rules": Array [
                                          "
  margin: -2px;
",
                                        ],
                                      },
                                      "displayName": "Styled(Plus)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  size="1.1em"
                                >
                                  <Plus
                                    className="sc-htoDjs byciYd"
                                    color="white"
                                    size="1.1em"
                                  >
                                    <svg
                                      className="sc-htoDjs byciYd"
                                      color="white"
                                      height="1.1em"
                                      size="1.1em"
                                      viewBox="0 0 18 17"
                                      width="1.1em"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                        stroke="white"
                                        strokeLinecap="round"
                                        strokeWidth={2}
                                      >
                                        <path
                                          d="M9 1.6v13.8M1.64 8.5h14.72"
                                        />
                                      </g>
                                    </svg>
                                  </Plus>
                                </StyledComponent>
                              </Styled(Plus)>
                              <styled.span>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-gzVnrw",
                                        "isStatic": false,
                                        "lastClassName": "ggkkOy",
                                        "rules": Array [
                                          "
  padding-left: 5px;
",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-gzVnrw",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="sc-gzVnrw ggkkOy"
                                  >
                                    ENQUIRY_DOCUMENTS_ADD
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </button>
                          </StyledComponent>
                        </Styled(styled.button)>
                      </div>
                    </div>
                  </FileUpload>
                </StyledComponent>
              </Styled(FileUpload)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "lastClassName": "ivCeJB",
                  "rules": Array [
                    "
  padding: 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-gqjmRU ivCeJB"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-VigVT",
                        "isStatic": false,
                        "lastClassName": "jvQSWH",
                        "rules": Array [
                          "
  width: 100%;
  opacity: 0.98;
  background-color: #f4f4f4;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  box-sizing: border-box;
  font-weight: 500;
  font-size: 16px;
  line-height: 21px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-VigVT",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-VigVT jvQSWH"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                        >
                          ENQUIRY_DOCUMENTS_ATTACHMENT
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          ENQUIRY_DOCUMENTS_DETAIL
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="1"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="2"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="3"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.button
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-chPdSV",
                        "isStatic": false,
                        "lastClassName": "vKAMN",
                        "rules": Array [
                          "
  border: none;
  color: #6cb9d5;
  font-size: 16px;
  font-weight: 400;
  cursor: pointer;
  margin: 5px 0;
  float: right;
",
                        ],
                      },
                      "displayName": "styled.button",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-chPdSV",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="sc-chPdSV vKAMN"
                    onClick={[Function]}
                  >
                    View all (
                    5
                    )
                  </button>
                </StyledComponent>
              </styled.button>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Documents>
`;

exports[`Renders view all docs 2`] = `
<Documents>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "KtFsv",
            "rules": Array [],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat KtFsv"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "eAruFg",
                  "rules": Array [
                    "
  padding: 15px 15px 17px 15px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bxivhb eAruFg"
            >
              <Styled(styled.h2)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "jZVdYP",
                        "rules": Array [
                          "
  color: #404042;
  font-size: 28px;
  font-weight: 400;
",
                          "
  display: inline-block;
  margin: 0;
",
                        ],
                      },
                      "displayName": "Styled(styled.h2)",
                      "foldedComponentIds": Array [
                        "sc-bwzfXH",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h2",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h2
                    className="sc-bwzfXH sc-bZQynM jZVdYP"
                  >
                    ENQUIRY_DOCUMENTS_TITLE
                  </h2>
                </StyledComponent>
              </Styled(styled.h2)>
              <Styled(FileUpload)
                accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                addFile={[Function]}
              >
                <StyledComponent
                  accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                  addFile={[Function]}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "jsKGHJ",
                        "rules": Array [
                          "
  display: inline-block;
  float: right;
",
                        ],
                      },
                      "displayName": "Styled(FileUpload)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <FileUpload
                    accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                    addFile={[Function]}
                    className="sc-ifAKCX jsKGHJ"
                  >
                    <div
                      className="sc-ifAKCX jsKGHJ"
                    >
                      <div
                        className=""
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDragLeave={[Function]}
                        onDragOver={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        tabIndex={0}
                      >
                        <input
                          accept="application/pdf,.doc,.docx,.png,.jpg,.gif,.bmp,.txt,.xlsx,.pptx,.mp4,.mov"
                          autoComplete="off"
                          multiple={true}
                          onChange={[Function]}
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          tabIndex={-1}
                          type="file"
                        />
                        <Styled(styled.button)>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-EHOje",
                                  "isStatic": false,
                                  "lastClassName": "gJKHaH",
                                  "rules": Array [
                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                    "
  color: white;
  min-width: 90px;
",
                                  ],
                                },
                                "displayName": "Styled(styled.button)",
                                "foldedComponentIds": Array [
                                  "sc-bdVaJa",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-EHOje",
                                "target": "button",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <button
                              className="sc-bdVaJa sc-EHOje gJKHaH"
                            >
                              <Styled(Plus)
                                color="white"
                                size="1.1em"
                              >
                                <StyledComponent
                                  color="white"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "byciYd",
                                        "rules": Array [
                                          "
  margin: -2px;
",
                                        ],
                                      },
                                      "displayName": "Styled(Plus)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  size="1.1em"
                                >
                                  <Plus
                                    className="sc-htoDjs byciYd"
                                    color="white"
                                    size="1.1em"
                                  >
                                    <svg
                                      className="sc-htoDjs byciYd"
                                      color="white"
                                      height="1.1em"
                                      size="1.1em"
                                      viewBox="0 0 18 17"
                                      width="1.1em"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                        stroke="white"
                                        strokeLinecap="round"
                                        strokeWidth={2}
                                      >
                                        <path
                                          d="M9 1.6v13.8M1.64 8.5h14.72"
                                        />
                                      </g>
                                    </svg>
                                  </Plus>
                                </StyledComponent>
                              </Styled(Plus)>
                              <styled.span>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-gzVnrw",
                                        "isStatic": false,
                                        "lastClassName": "ggkkOy",
                                        "rules": Array [
                                          "
  padding-left: 5px;
",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-gzVnrw",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="sc-gzVnrw ggkkOy"
                                  >
                                    ENQUIRY_DOCUMENTS_ADD
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </button>
                          </StyledComponent>
                        </Styled(styled.button)>
                      </div>
                    </div>
                  </FileUpload>
                </StyledComponent>
              </Styled(FileUpload)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "lastClassName": "ivCeJB",
                  "rules": Array [
                    "
  padding: 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-gqjmRU ivCeJB"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-VigVT",
                        "isStatic": false,
                        "lastClassName": "jvQSWH",
                        "rules": Array [
                          "
  width: 100%;
  opacity: 0.98;
  background-color: #f4f4f4;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  box-sizing: border-box;
  font-weight: 500;
  font-size: 16px;
  line-height: 21px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-VigVT",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-VigVT jvQSWH"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                        >
                          ENQUIRY_DOCUMENTS_ATTACHMENT
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          ENQUIRY_DOCUMENTS_DETAIL
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="1"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="2"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="3"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="4"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                key="5"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "hrQifn",
                        "rules": Array [
                          "
  width: 100%;
  box-sizing: border-box;
  display: flex;
  padding: 10px 7px;
  padding-left: 12px;
  color: #6d6c6c;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  border-bottom: 2px solid #f4f4f4;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jTzLTM hrQifn"
                  >
                    <styled.div
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "HXwcd",
                              "rules": Array [
                                "
  display: flex;
  width: 283px;
  flex: 0 0 auto;
  cursor: pointer;
  padding-right: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <div
                          className="sc-fjdhpX HXwcd"
                          onClick={[Function]}
                        >
                          <styled.img
                            alt="pdf"
                            height="32px"
                            src="file.svg"
                          >
                            <StyledComponent
                              alt="pdf"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-iwsKbI",
                                    "isStatic": false,
                                    "lastClassName": "cKHDOq",
                                    "rules": Array [
                                      "
  padding-right: 10px;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-iwsKbI",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="32px"
                              src="file.svg"
                            >
                              <img
                                alt="pdf"
                                className="sc-iwsKbI cKHDOq"
                                height="32px"
                                src="file.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jzJRlG",
                                    "isStatic": false,
                                    "lastClassName": "cMgkjI",
                                    "rules": Array [
                                      "
  padding-top: 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jzJRlG",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-jzJRlG cMgkjI"
                              >
                                filename1
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": false,
                              "lastClassName": "sTofU",
                              "rules": Array [
                                "
  width: 40%;
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-cSHVUG sTofU"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": false,
                                    "lastClassName": "fdPMXB",
                                    "rules": Array [
                                      "
  color: #6d6c6c;
  width: 80%;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  padding-top: 8px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-kAzzGY fdPMXB"
                              >
                                2020-01-01
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.img
                            alt="trash"
                            data-testid="delete-document"
                            height="25px"
                            onClick={[Function]}
                            src="trash.svg"
                          >
                            <StyledComponent
                              alt="trash"
                              data-testid="delete-document"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-dnqmqq",
                                    "isStatic": false,
                                    "lastClassName": "cAIGUc",
                                    "rules": Array [
                                      "
  padding: 4px;
  margin-left: 6px;
  cursor: pointer;
",
                                    ],
                                  },
                                  "displayName": "styled.img",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-dnqmqq",
                                  "target": "img",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              height="25px"
                              onClick={[Function]}
                              src="trash.svg"
                            >
                              <img
                                alt="trash"
                                className="sc-dnqmqq cAIGUc"
                                data-testid="delete-document"
                                height="25px"
                                onClick={[Function]}
                                src="trash.svg"
                              />
                            </StyledComponent>
                          </styled.img>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Documents>
`;
