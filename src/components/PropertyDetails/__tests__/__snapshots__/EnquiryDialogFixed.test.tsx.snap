// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
<EnquiryDialogFixed
  open={true}
  setOpen={[MockFunction]}
>
  <WithStyles(ForwardRef(Dialog))
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "defaultProps": undefined,
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                            role="dialog"
                          >
                            <Styled(WithStyles(ForwardRef(DialogTitle)))>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disableTypography": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htoDjs",
                                      "isStatic": false,
                                      "lastClassName": "erIOud",
                                      "rules": Array [
                                        "
  padding-bottom: 0;
  h2 {
    font-size: 25px;
    font-weight: 500;
  }
  svg {
    position: absolute;
    right: 25px;
    top: 10px;
    cursor: pointer;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(WithStyles(ForwardRef(DialogTitle)))",
                                    "foldedComponentIds": Array [],
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiDialogTitle",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-htoDjs",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "Naked": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disableTypography": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "defaultProps": undefined,
                                      "displayName": "WithStyles(ForwardRef(DialogTitle))",
                                      "options": Object {
                                        "defaultTheme": Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        },
                                        "name": "MuiDialogTitle",
                                      },
                                      "propTypes": Object {
                                        "classes": [Function],
                                        "innerRef": [Function],
                                      },
                                      "render": [Function],
                                      "useStyles": [Function],
                                    },
                                    "toString": [Function],
                                    "useStyles": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <WithStyles(ForwardRef(DialogTitle))
                                  className="sc-htoDjs erIOud"
                                >
                                  <ForwardRef(DialogTitle)
                                    className="sc-htoDjs erIOud"
                                    classes={
                                      Object {
                                        "root": "MuiDialogTitle-root",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDialogTitle-root sc-htoDjs erIOud"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        component="h2"
                                        variant="h6"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="h2"
                                          variant="h6"
                                        >
                                          <h2
                                            className="MuiTypography-root MuiTypography-h6"
                                          >
                                            ENQUIRY_DIALOG_TITLE
                                            <ForwardRef
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    onClick={[Function]}
                                                    role="presentation"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </h2>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </ForwardRef(DialogTitle)>
                                </WithStyles(ForwardRef(DialogTitle))>
                              </StyledComponent>
                            </Styled(WithStyles(ForwardRef(DialogTitle)))>
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <p>
                                    ENQUIRY_DIALOG_REGISTERED
                                    <styled.button
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-chPdSV",
                                              "isStatic": false,
                                              "lastClassName": "cZsvMS",
                                              "rules": Array [
                                                "
  color: #f35c2b;
  font-size: 16px;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  margin-left: 5px;
",
                                              ],
                                            },
                                            "displayName": "styled.button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-chPdSV",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="sc-chPdSV cZsvMS"
                                          onClick={[Function]}
                                        >
                                          ENQUIRY_DIALOG_SIGNIN
                                        </button>
                                      </StyledComponent>
                                    </styled.button>
                                  </p>
                                  <styled.h2>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": false,
                                            "lastClassName": "ImXDR",
                                            "rules": Array [
                                              "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                            ],
                                          },
                                          "displayName": "styled.h2",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="sc-iwsKbI ImXDR"
                                      >
                                        ENQUIRY_DIALOG_SUBTITLE
                                      </h2>
                                    </StyledComponent>
                                  </styled.h2>
                                  <form>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "dFJNyi",
                                              "rules": Array [
                                                "
  min-height: 120px;
  border-radius: 2px;
  background-color: #f4f4f4;
  display: flex;
  flex-direction: row;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-VigVT dFJNyi"
                                        >
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-fjdhpX",
                                                    "isStatic": false,
                                                    "lastClassName": "gYXLcz",
                                                    "rules": Array [
                                                      "
  flex: 1 1 auto;
  max-width: 140px;
  margin: 10px 5px;
  padding: 5px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-fjdhpX",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-fjdhpX gYXLcz"
                                              >
                                                <Input
                                                  id="length"
                                                  label="NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)"
                                                  min="1"
                                                  onChange={[Function]}
                                                  type="number"
                                                  value={12}
                                                >
                                                  <styled.div>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bdVaJa",
                                                            "isStatic": false,
                                                            "lastClassName": "dlaMlh",
                                                            "rules": Array [
                                                              "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                            ],
                                                          },
                                                          "displayName": "styled.div",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bdVaJa",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="sc-bdVaJa dlaMlh"
                                                      >
                                                        <label
                                                          htmlFor="length"
                                                        >
                                                          NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                        </label>
                                                        <styled.input
                                                          id="length"
                                                          min="1"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="number"
                                                          value={12}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jHsaxX",
                                                                  "rules": Array [
                                                                    "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                    [Function],
                                                                    ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                    [Function],
                                                                    ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                    [Function],
                                                                    ";
    border: 1px solid ",
                                                                    [Function],
                                                                    ";
  }
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.input",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "input",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="length"
                                                            min="1"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="number"
                                                            value={12}
                                                          >
                                                            <input
                                                              className="sc-bwzfXH jHsaxX"
                                                              id="length"
                                                              min="1"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="number"
                                                              value={12}
                                                            />
                                                          </StyledComponent>
                                                        </styled.input>
                                                        <styled.div>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "gctktF",
                                                                  "rules": Array [
                                                                    "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="sc-htpNat gctktF"
                                                            />
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </div>
                                                    </StyledComponent>
                                                  </styled.div>
                                                </Input>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jzJRlG",
                                                    "isStatic": false,
                                                    "lastClassName": "ewZsZY",
                                                    "rules": Array [
                                                      "
  border-left: 1px solid #dddddd;
  flex: 1 1 auto;
  margin: 10px 5px 10px 0;
  padding: 5px 5px 5px 10px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jzJRlG",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-jzJRlG ewZsZY"
                                              >
                                                <Styled(Component)
                                                  disablePast={true}
                                                  id="start"
                                                  label="NEGOTIATE_MOVE_IN_BY"
                                                  onChange={[Function]}
                                                  value={2099-01-01T00:00:00.000Z}
                                                >
                                                  <StyledComponent
                                                    disablePast={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "gRKhFU",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    color: #404042;
    display: block;
    font-size: 16px;
    font-weight: 400;
    padding-left: 6px;
    padding-bottom: 2px;
    transition: none;
    transform: none;
  }
  .MuiFormControl-root {
    width: 100%;
  }
  .MuiOutlinedInput-adornedEnd {
    border: 1px solid ",
                                                            [Function],
                                                            ";
    border-radius: 3px;
    padding-right: 0;
    background-color: white;
  }
  .MuiInputAdornment-positionEnd {
    margin-left: 0px;
  }
  .MuiIconButton-root {
    padding-left: 2px;
    :hover {
      background-color: initial;
    }
  }
  input {
    font-size: 16px;
    padding: 6px 6px;
    width: 100%;
    height: 21px;
  }
  fieldset {
    border: none;
  }
  .MuiFormHelperText-root.MuiFormHelperText-contained.Mui-error {
    margin: 2px 0;
    font-size: 14px;
    font-weight: 500;
    color: #db4437;
  }
  .MuiTouchRipple-root {
    display: none;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="start"
                                                    label="NEGOTIATE_MOVE_IN_BY"
                                                    onChange={[Function]}
                                                    value={2099-01-01T00:00:00.000Z}
                                                  >
                                                    <Component
                                                      className="sc-ifAKCX gRKhFU"
                                                      disablePast={true}
                                                      id="start"
                                                      label="NEGOTIATE_MOVE_IN_BY"
                                                      onChange={[Function]}
                                                      value={2099-01-01T00:00:00.000Z}
                                                    >
                                                      <styled.div
                                                        className="sc-ifAKCX gRKhFU"
                                                        focusOn={false}
                                                      >
                                                        <StyledComponent
                                                          className="sc-ifAKCX gRKhFU"
                                                          focusOn={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bxivhb",
                                                                "isStatic": false,
                                                                "lastClassName": "fuvWwV",
                                                                "rules": Array [
                                                                  "
  && .MuiOutlinedInput-adornedEnd {
    ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bxivhb",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                          >
                                                            <label>
                                                              NEGOTIATE_MOVE_IN_BY
                                                            </label>
                                                            <MuiPickersUtilsProvider
                                                              locale={
                                                                Object {
                                                                  "code": "en-GB",
                                                                  "formatDistance": [Function],
                                                                  "formatLong": Object {
                                                                    "date": [Function],
                                                                    "dateTime": [Function],
                                                                    "time": [Function],
                                                                  },
                                                                  "formatRelative": [Function],
                                                                  "localize": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "match": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "options": Object {
                                                                    "firstWeekContainsDate": 4,
                                                                    "weekStartsOn": 1,
                                                                  },
                                                                }
                                                              }
                                                              utils={[Function]}
                                                            >
                                                              <PickerWithState
                                                                InputLabelProps={
                                                                  Object {
                                                                    "error": false,
                                                                    "shrink": false,
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                autoOk={true}
                                                                disablePast={true}
                                                                disableToolbar={true}
                                                                format="yyyy-MM-dd"
                                                                id="start"
                                                                inputVariant="outlined"
                                                                invalidDateMessage="Invalid Date Format"
                                                                keyboardIcon={
                                                                  <img
                                                                    alt="open calendar"
                                                                    src="calendar.svg"
                                                                  />
                                                                }
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Date should not be before minimal date"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                openTo="date"
                                                                value={2099-01-01T00:00:00.000Z}
                                                                variant="inline"
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "2099-01-01",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  InputLabelProps={
                                                                    Object {
                                                                      "error": false,
                                                                      "shrink": false,
                                                                    }
                                                                  }
                                                                  format="yyyy-MM-dd"
                                                                  id="start"
                                                                  inputVariant="outlined"
                                                                  keyboardIcon={
                                                                    <img
                                                                      alt="open calendar"
                                                                      src="calendar.svg"
                                                                    />
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onBlur={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onFocus={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  variant="inline"
                                                                >
                                                                  <InlineWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "2099-01-01",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    InputLabelProps={
                                                                      Object {
                                                                        "error": false,
                                                                        "shrink": false,
                                                                      }
                                                                    }
                                                                    format="yyyy-MM-dd"
                                                                    id="start"
                                                                    inputVariant="outlined"
                                                                    keyboardIcon={
                                                                      <img
                                                                        alt="open calendar"
                                                                        src="calendar.svg"
                                                                      />
                                                                    }
                                                                    onAccept={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onFocus={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <KeyboardDateInput
                                                                      InputLabelProps={
                                                                        Object {
                                                                          "error": false,
                                                                          "shrink": false,
                                                                        }
                                                                      }
                                                                      format="yyyy-MM-dd"
                                                                      id="start"
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />,
                                                                        }
                                                                      }
                                                                      inputValue="2099-01-01"
                                                                      inputVariant="outlined"
                                                                      keyboardIcon={
                                                                        <img
                                                                          alt="open calendar"
                                                                          src="calendar.svg"
                                                                        />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      openPicker={[Function]}
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value="2099-01-01"
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputLabelProps={
                                                                            Object {
                                                                              "error": false,
                                                                              "shrink": false,
                                                                            }
                                                                          }
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <img
                                                                                    alt="open calendar"
                                                                                    src="calendar.svg"
                                                                                  />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          error={false}
                                                                          helperText=""
                                                                          id="start"
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-invalid="false"
                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                id="start"
                                                                                type="text"
                                                                                value="2099-01-01"
                                                                              />,
                                                                            }
                                                                          }
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="2099-01-01"
                                                                          variant="outlined"
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputLabelProps={
                                                                              Object {
                                                                                "error": false,
                                                                                "shrink": false,
                                                                              }
                                                                            }
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <img
                                                                                      alt="open calendar"
                                                                                      src="calendar.svg"
                                                                                    />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            error={false}
                                                                            helperText=""
                                                                            id="start"
                                                                            inputRef={
                                                                              Object {
                                                                                "current": <input
                                                                                  aria-invalid="false"
                                                                                  class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                  id="start"
                                                                                  type="text"
                                                                                  value="2099-01-01"
                                                                                />,
                                                                              }
                                                                            }
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            value="2099-01-01"
                                                                            variant="outlined"
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="primary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="outlined"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="primary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="outlined"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(OutlinedInput))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <img
                                                                                            alt="open calendar"
                                                                                            src="calendar.svg"
                                                                                          />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    id="start"
                                                                                    inputRef={
                                                                                      Object {
                                                                                        "current": <input
                                                                                          aria-invalid="false"
                                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                          id="start"
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        />,
                                                                                      }
                                                                                    }
                                                                                    labelWidth={0}
                                                                                    multiline={false}
                                                                                    notched={false}
                                                                                    onBlur={[Function]}
                                                                                    onChange={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    value="2099-01-01"
                                                                                  >
                                                                                    <ForwardRef(OutlinedInput)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "input": "MuiOutlinedInput-input",
                                                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                                                          "multiline": "MuiOutlinedInput-multiline",
                                                                                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                                          "root": "MuiOutlinedInput-root",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <img
                                                                                              alt="open calendar"
                                                                                              src="calendar.svg"
                                                                                            />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      id="start"
                                                                                      inputRef={
                                                                                        Object {
                                                                                          "current": <input
                                                                                            aria-invalid="false"
                                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                            id="start"
                                                                                            type="text"
                                                                                            value="2099-01-01"
                                                                                          />,
                                                                                        }
                                                                                      }
                                                                                      labelWidth={0}
                                                                                      multiline={false}
                                                                                      notched={false}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      value="2099-01-01"
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "input": "MuiOutlinedInput-input",
                                                                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                            "marginDense": "MuiOutlinedInput-marginDense",
                                                                                            "multiline": "MuiOutlinedInput-multiline",
                                                                                            "notchedOutline": null,
                                                                                            "root": "MuiOutlinedInput-root",
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                            >
                                                                                              <img
                                                                                                alt="open calendar"
                                                                                                src="calendar.svg"
                                                                                              />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        id="start"
                                                                                        inputComponent="input"
                                                                                        inputRef={
                                                                                          Object {
                                                                                            "current": <input
                                                                                              aria-invalid="false"
                                                                                              class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              id="start"
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />,
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onBlur={[Function]}
                                                                                        onChange={[Function]}
                                                                                        onFocus={[Function]}
                                                                                        renderSuffix={[Function]}
                                                                                        type="text"
                                                                                        value="2099-01-01"
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <img
                                                                                                  alt="open calendar"
                                                                                                  src="calendar.svg"
                                                                                                />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          id="start"
                                                                                          inputComponent="input"
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-invalid="false"
                                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                id="start"
                                                                                                type="text"
                                                                                                value="2099-01-01"
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          renderSuffix={[Function]}
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              id="start"
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <img
                                                                                                                alt="open calendar"
                                                                                                                src="calendar.svg"
                                                                                                              />
                                                                                                            </span>
                                                                                                            <NoSsr>
                                                                                                              <WithStyles(undefined)
                                                                                                                center={true}
                                                                                                              >
                                                                                                                <ForwardRef(TouchRipple)
                                                                                                                  center={true}
                                                                                                                  classes={
                                                                                                                    Object {
                                                                                                                      "child": "MuiTouchRipple-child",
                                                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                      "root": "MuiTouchRipple-root",
                                                                                                                    }
                                                                                                                  }
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="MuiTouchRipple-root"
                                                                                                                  >
                                                                                                                    <TransitionGroup
                                                                                                                      childFactory={[Function]}
                                                                                                                      component={null}
                                                                                                                      exit={true}
                                                                                                                    />
                                                                                                                  </span>
                                                                                                                </ForwardRef(TouchRipple)>
                                                                                                              </WithStyles(undefined)>
                                                                                                            </NoSsr>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                            <WithStyles(ForwardRef(NotchedOutline))
                                                                                              className="MuiOutlinedInput-notchedOutline"
                                                                                              labelWidth={0}
                                                                                              notched={false}
                                                                                            >
                                                                                              <ForwardRef(NotchedOutline)
                                                                                                className="MuiOutlinedInput-notchedOutline"
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "legend": "PrivateNotchedOutline-legend-147",
                                                                                                    "root": "PrivateNotchedOutline-root-146",
                                                                                                  }
                                                                                                }
                                                                                                labelWidth={0}
                                                                                                notched={false}
                                                                                              >
                                                                                                <fieldset
                                                                                                  aria-hidden={true}
                                                                                                  className="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                  style={
                                                                                                    Object {
                                                                                                      "paddingLeft": 8,
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <legend
                                                                                                    className="PrivateNotchedOutline-legend-147"
                                                                                                    style={
                                                                                                      Object {
                                                                                                        "width": 0.01,
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <span
                                                                                                      dangerouslySetInnerHTML={
                                                                                                        Object {
                                                                                                          "__html": "&#8203;",
                                                                                                        }
                                                                                                      }
                                                                                                    />
                                                                                                  </legend>
                                                                                                </fieldset>
                                                                                              </ForwardRef(NotchedOutline)>
                                                                                            </WithStyles(ForwardRef(NotchedOutline))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(OutlinedInput)>
                                                                                  </WithStyles(ForwardRef(OutlinedInput))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ForwardRef(Popover))
                                                                      anchorEl={
                                                                        <input
                                                                          aria-invalid="false"
                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                          id="start"
                                                                          type="text"
                                                                          value="2099-01-01"
                                                                        />
                                                                      }
                                                                      anchorOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "bottom",
                                                                        }
                                                                      }
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                      transformOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "top",
                                                                        }
                                                                      }
                                                                    >
                                                                      <ForwardRef(Popover)
                                                                        anchorEl={
                                                                          <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "bottom",
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "paper": "MuiPopover-paper",
                                                                            "root": "MuiPopover-root",
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(Modal)
                                                                          BackdropProps={
                                                                            Object {
                                                                              "invisible": true,
                                                                            }
                                                                          }
                                                                          className="MuiPopover-root"
                                                                          container={
                                                                            <body
                                                                              style="padding-right: 0px; overflow: hidden;"
                                                                            >
                                                                              <div
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                            </body>
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        />
                                                                      </ForwardRef(Popover)>
                                                                    </WithStyles(ForwardRef(Popover))>
                                                                  </InlineWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                            </MuiPickersUtilsProvider>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                                <Styled(Component)
                                                  checked={true}
                                                  onChange={[Function]}
                                                >
                                                  <StyledComponent
                                                    checked={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-EHOje",
                                                          "isStatic": false,
                                                          "lastClassName": "gkKQZC",
                                                          "rules": Array [
                                                            "
  display: block;
  position: relative;
  cursor: pointer;
  padding-left: 25px;
  margin: 10px 0;
  input {
    position: absolute;
    opacity 0;
    cursor: pointer;
    width: 0;
    height: 0
  }
  span {
    position: absolute;
    top: 0;
    left: 0;
    height: 15px;
    width: 15px;
    border: 2px solid #B3DBE9;
    margin-top: 1px;
  }
  input:checked ~ span {
    background-color: transparent;
  }

  span:after {
    content: \\" \\";
    position: absolute;
    display: none;
  }

  input:checked ~ span:after {
    display: block;
  }

  span:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 8px;
    border: solid black;
    border-width: 0 1px 2px 0;
    transform: rotate(45deg);
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-EHOje",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onChange={[Function]}
                                                  >
                                                    <Component
                                                      checked={true}
                                                      className="sc-EHOje gkKQZC"
                                                      onChange={[Function]}
                                                    >
                                                      <label
                                                        className="sc-EHOje gkKQZC"
                                                      >
                                                        NEGOTIATE_FLEXIBLE
                                                        <input
                                                          checked={true}
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                        <span />
                                                      </label>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(styled.h2)>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "bWCtRd",
                                              "rules": Array [
                                                "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                                "
  padding-top: 25px;
",
                                              ],
                                            },
                                            "displayName": "Styled(styled.h2)",
                                            "foldedComponentIds": Array [
                                              "sc-iwsKbI",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": "h2",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <h2
                                          className="sc-iwsKbI sc-gZMcBi bWCtRd"
                                        >
                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                        </h2>
                                      </StyledComponent>
                                    </Styled(styled.h2)>
                                    <Styled(Input)
                                      id="enquiry_your_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_NAME"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_your_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_NAME"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_your_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_NAME"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_your_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_NAME"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_your_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_NAME"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_your_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_NAME"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-jTzLTM",
                                              "isStatic": false,
                                              "lastClassName": "cvVqEf",
                                              "rules": Array [
                                                "
  border-radius: 2px;
  display: flex;
  flex-direction: row;
  div:first-child {
    margin-right: 10px;
  }
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-jTzLTM",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-jTzLTM cvVqEf"
                                        >
                                          <Styled(Input)
                                            id="enquiry_email"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                          <Styled(Input)
                                            id="enquiry_email2"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email2"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email2"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email2"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email2"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email2"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(Input)
                                      id="enquiry_company_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_company_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_COMPANY"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_company_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_COMPANY"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_company_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_COMPANY"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_company_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_COMPANY"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_company_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_PASSWORD
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <Styled(Input)
                                      id="enquiry_password"
                                      onChange={[Function]}
                                      placeholder="password"
                                      type="password"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_password"
                                        onChange={[Function]}
                                        placeholder="password"
                                        type="password"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_password"
                                          onChange={[Function]}
                                          placeholder="password"
                                          type="password"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_password"
                                                  onChange={[Function]}
                                                  placeholder="password"
                                                  type="password"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_password"
                                                    onChange={[Function]}
                                                    placeholder="password"
                                                    type="password"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_password"
                                                      onChange={[Function]}
                                                      placeholder="password"
                                                      type="password"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_MESSAGE
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <styled.textarea
                                      onChange={[Function]}
                                      value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "bnqIJS",
                                              "rules": Array [
                                                "
  margin-top: 8px;
  min-height: 120px;
  width: 100%;
  box-sizing: border-box;
  outline: none;
  resize: none;
  font-size: 16px;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 98%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.textarea",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "textarea",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onChange={[Function]}
                                        value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                      >
                                        <textarea
                                          className="sc-gqjmRU bnqIJS"
                                          onChange={[Function]}
                                          value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                        />
                                      </StyledComponent>
                                    </styled.textarea>
                                  </form>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                            <WithStyles(ForwardRef(DialogActions))>
                              <ForwardRef(DialogActions)
                                classes={
                                  Object {
                                    "root": "MuiDialogActions-root",
                                    "spacing": "MuiDialogActions-spacing",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <styled.p>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kgoBCf",
                                            "isStatic": false,
                                            "lastClassName": "kTmjno",
                                            "rules": Array [
                                              "
  margin-left: 14px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
  a {
    color: #f35c2b;
    text-decoration: none;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.p",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kgoBCf",
                                          "target": "p",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <p
                                        className="sc-kgoBCf kTmjno"
                                      >
                                        ENQUIRY_DIALOG_NOTICE
                                         
                                        <Link
                                          to="/en-no/terms"
                                        />
                                         
                                        ENQUIRY_DIALOG_NOTICE_AND
                                         
                                        <Link
                                          to="/en-no/privacy"
                                        />
                                      </p>
                                    </StyledComponent>
                                  </styled.p>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-gzVnrw",
                                            "isStatic": false,
                                            "lastClassName": "eSYWWv",
                                            "rules": Array [
                                              "
  margin: 10px 15px;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-gzVnrw",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-gzVnrw eSYWWv"
                                      >
                                        <Styled(styled.button)
                                          autoFocus={true}
                                          color="primary"
                                          data-auto="submit-enquiry-dialog-fixed"
                                          data-testid="submit-enquiry-dialog-ok"
                                          id="dialogOK"
                                          onClick={[Function]}
                                        >
                                          <StyledComponent
                                            autoFocus={true}
                                            color="primary"
                                            data-auto="submit-enquiry-dialog-fixed"
                                            data-testid="submit-enquiry-dialog-ok"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "ieMtwM",
                                                  "rules": Array [
                                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                                    "
  background-color: #404042;
  color: #fffff0;
  outline: none;
  text-align: center;
  margin-left: 24px;
",
                                                  ],
                                                },
                                                "displayName": "Styled(styled.button)",
                                                "foldedComponentIds": Array [
                                                  "sc-bZQynM",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="dialogOK"
                                            onClick={[Function]}
                                          >
                                            <button
                                              autoFocus={true}
                                              className="sc-bZQynM sc-dnqmqq ieMtwM"
                                              color="primary"
                                              data-auto="submit-enquiry-dialog-fixed"
                                              data-testid="submit-enquiry-dialog-ok"
                                              id="dialogOK"
                                              onClick={[Function]}
                                            >
                                              ENQUIRY_DIALOG_BUTTON
                                            </button>
                                          </StyledComponent>
                                        </Styled(styled.button)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </ForwardRef(DialogActions)>
                            </WithStyles(ForwardRef(DialogActions))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</EnquiryDialogFixed>
`;

exports[`renders without terms 1`] = `
<EnquiryDialogFixed
  open={true}
  setOpen={[MockFunction]}
>
  <WithStyles(ForwardRef(Dialog))
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "defaultProps": undefined,
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH gOazGM"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              >
                                VAL_INVALID
                              </div>
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH gOazGM"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              >
                                VAL_INVALID
                              </div>
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                            role="dialog"
                          >
                            <Styled(WithStyles(ForwardRef(DialogTitle)))>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disableTypography": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htoDjs",
                                      "isStatic": false,
                                      "lastClassName": "erIOud",
                                      "rules": Array [
                                        "
  padding-bottom: 0;
  h2 {
    font-size: 25px;
    font-weight: 500;
  }
  svg {
    position: absolute;
    right: 25px;
    top: 10px;
    cursor: pointer;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(WithStyles(ForwardRef(DialogTitle)))",
                                    "foldedComponentIds": Array [],
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiDialogTitle",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-htoDjs",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "Naked": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disableTypography": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "defaultProps": undefined,
                                      "displayName": "WithStyles(ForwardRef(DialogTitle))",
                                      "options": Object {
                                        "defaultTheme": Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        },
                                        "name": "MuiDialogTitle",
                                      },
                                      "propTypes": Object {
                                        "classes": [Function],
                                        "innerRef": [Function],
                                      },
                                      "render": [Function],
                                      "useStyles": [Function],
                                    },
                                    "toString": [Function],
                                    "useStyles": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <WithStyles(ForwardRef(DialogTitle))
                                  className="sc-htoDjs erIOud"
                                >
                                  <ForwardRef(DialogTitle)
                                    className="sc-htoDjs erIOud"
                                    classes={
                                      Object {
                                        "root": "MuiDialogTitle-root",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDialogTitle-root sc-htoDjs erIOud"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        component="h2"
                                        variant="h6"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="h2"
                                          variant="h6"
                                        >
                                          <h2
                                            className="MuiTypography-root MuiTypography-h6"
                                          >
                                            ENQUIRY_DIALOG_TITLE
                                            <ForwardRef
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    onClick={[Function]}
                                                    role="presentation"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </h2>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </ForwardRef(DialogTitle)>
                                </WithStyles(ForwardRef(DialogTitle))>
                              </StyledComponent>
                            </Styled(WithStyles(ForwardRef(DialogTitle)))>
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <p>
                                    ENQUIRY_DIALOG_REGISTERED
                                    <styled.button
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-chPdSV",
                                              "isStatic": false,
                                              "lastClassName": "cZsvMS",
                                              "rules": Array [
                                                "
  color: #f35c2b;
  font-size: 16px;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  margin-left: 5px;
",
                                              ],
                                            },
                                            "displayName": "styled.button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-chPdSV",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="sc-chPdSV cZsvMS"
                                          onClick={[Function]}
                                        >
                                          ENQUIRY_DIALOG_SIGNIN
                                        </button>
                                      </StyledComponent>
                                    </styled.button>
                                  </p>
                                  <styled.h2>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": false,
                                            "lastClassName": "ImXDR",
                                            "rules": Array [
                                              "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                            ],
                                          },
                                          "displayName": "styled.h2",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="sc-iwsKbI ImXDR"
                                      >
                                        ENQUIRY_DIALOG_SUBTITLE
                                      </h2>
                                    </StyledComponent>
                                  </styled.h2>
                                  <form>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "dFJNyi",
                                              "rules": Array [
                                                "
  min-height: 120px;
  border-radius: 2px;
  background-color: #f4f4f4;
  display: flex;
  flex-direction: row;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-VigVT dFJNyi"
                                        >
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-fjdhpX",
                                                    "isStatic": false,
                                                    "lastClassName": "gYXLcz",
                                                    "rules": Array [
                                                      "
  flex: 1 1 auto;
  max-width: 140px;
  margin: 10px 5px;
  padding: 5px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-fjdhpX",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-fjdhpX gYXLcz"
                                              >
                                                <Input
                                                  id="length"
                                                  label="NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)"
                                                  min="1"
                                                  onChange={[Function]}
                                                  type="number"
                                                  value={12}
                                                >
                                                  <styled.div>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bdVaJa",
                                                            "isStatic": false,
                                                            "lastClassName": "dlaMlh",
                                                            "rules": Array [
                                                              "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                            ],
                                                          },
                                                          "displayName": "styled.div",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bdVaJa",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="sc-bdVaJa dlaMlh"
                                                      >
                                                        <label
                                                          htmlFor="length"
                                                        >
                                                          NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                        </label>
                                                        <styled.input
                                                          id="length"
                                                          min="1"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="number"
                                                          value={12}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jHsaxX",
                                                                  "rules": Array [
                                                                    "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                    [Function],
                                                                    ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                    [Function],
                                                                    ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                    [Function],
                                                                    ";
    border: 1px solid ",
                                                                    [Function],
                                                                    ";
  }
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.input",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "input",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="length"
                                                            min="1"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="number"
                                                            value={12}
                                                          >
                                                            <input
                                                              className="sc-bwzfXH jHsaxX"
                                                              id="length"
                                                              min="1"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="number"
                                                              value={12}
                                                            />
                                                          </StyledComponent>
                                                        </styled.input>
                                                        <styled.div>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "gctktF",
                                                                  "rules": Array [
                                                                    "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="sc-htpNat gctktF"
                                                            />
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </div>
                                                    </StyledComponent>
                                                  </styled.div>
                                                </Input>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jzJRlG",
                                                    "isStatic": false,
                                                    "lastClassName": "ewZsZY",
                                                    "rules": Array [
                                                      "
  border-left: 1px solid #dddddd;
  flex: 1 1 auto;
  margin: 10px 5px 10px 0;
  padding: 5px 5px 5px 10px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jzJRlG",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-jzJRlG ewZsZY"
                                              >
                                                <Styled(Component)
                                                  disablePast={true}
                                                  id="start"
                                                  label="NEGOTIATE_MOVE_IN_BY"
                                                  onChange={[Function]}
                                                  value={2099-01-01T00:00:00.000Z}
                                                >
                                                  <StyledComponent
                                                    disablePast={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "gRKhFU",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    color: #404042;
    display: block;
    font-size: 16px;
    font-weight: 400;
    padding-left: 6px;
    padding-bottom: 2px;
    transition: none;
    transform: none;
  }
  .MuiFormControl-root {
    width: 100%;
  }
  .MuiOutlinedInput-adornedEnd {
    border: 1px solid ",
                                                            [Function],
                                                            ";
    border-radius: 3px;
    padding-right: 0;
    background-color: white;
  }
  .MuiInputAdornment-positionEnd {
    margin-left: 0px;
  }
  .MuiIconButton-root {
    padding-left: 2px;
    :hover {
      background-color: initial;
    }
  }
  input {
    font-size: 16px;
    padding: 6px 6px;
    width: 100%;
    height: 21px;
  }
  fieldset {
    border: none;
  }
  .MuiFormHelperText-root.MuiFormHelperText-contained.Mui-error {
    margin: 2px 0;
    font-size: 14px;
    font-weight: 500;
    color: #db4437;
  }
  .MuiTouchRipple-root {
    display: none;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="start"
                                                    label="NEGOTIATE_MOVE_IN_BY"
                                                    onChange={[Function]}
                                                    value={2099-01-01T00:00:00.000Z}
                                                  >
                                                    <Component
                                                      className="sc-ifAKCX gRKhFU"
                                                      disablePast={true}
                                                      id="start"
                                                      label="NEGOTIATE_MOVE_IN_BY"
                                                      onChange={[Function]}
                                                      value={2099-01-01T00:00:00.000Z}
                                                    >
                                                      <styled.div
                                                        className="sc-ifAKCX gRKhFU"
                                                        focusOn={false}
                                                      >
                                                        <StyledComponent
                                                          className="sc-ifAKCX gRKhFU"
                                                          focusOn={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bxivhb",
                                                                "isStatic": false,
                                                                "lastClassName": "fuvWwV",
                                                                "rules": Array [
                                                                  "
  && .MuiOutlinedInput-adornedEnd {
    ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bxivhb",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                          >
                                                            <label>
                                                              NEGOTIATE_MOVE_IN_BY
                                                            </label>
                                                            <MuiPickersUtilsProvider
                                                              locale={
                                                                Object {
                                                                  "code": "en-GB",
                                                                  "formatDistance": [Function],
                                                                  "formatLong": Object {
                                                                    "date": [Function],
                                                                    "dateTime": [Function],
                                                                    "time": [Function],
                                                                  },
                                                                  "formatRelative": [Function],
                                                                  "localize": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "match": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "options": Object {
                                                                    "firstWeekContainsDate": 4,
                                                                    "weekStartsOn": 1,
                                                                  },
                                                                }
                                                              }
                                                              utils={[Function]}
                                                            >
                                                              <PickerWithState
                                                                InputLabelProps={
                                                                  Object {
                                                                    "error": false,
                                                                    "shrink": false,
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                autoOk={true}
                                                                disablePast={true}
                                                                disableToolbar={true}
                                                                format="yyyy-MM-dd"
                                                                id="start"
                                                                inputVariant="outlined"
                                                                invalidDateMessage="Invalid Date Format"
                                                                keyboardIcon={
                                                                  <img
                                                                    alt="open calendar"
                                                                    src="calendar.svg"
                                                                  />
                                                                }
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Date should not be before minimal date"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                openTo="date"
                                                                value={2099-01-01T00:00:00.000Z}
                                                                variant="inline"
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "2099-01-01",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  InputLabelProps={
                                                                    Object {
                                                                      "error": false,
                                                                      "shrink": false,
                                                                    }
                                                                  }
                                                                  format="yyyy-MM-dd"
                                                                  id="start"
                                                                  inputVariant="outlined"
                                                                  keyboardIcon={
                                                                    <img
                                                                      alt="open calendar"
                                                                      src="calendar.svg"
                                                                    />
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onBlur={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onFocus={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  variant="inline"
                                                                >
                                                                  <InlineWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "2099-01-01",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    InputLabelProps={
                                                                      Object {
                                                                        "error": false,
                                                                        "shrink": false,
                                                                      }
                                                                    }
                                                                    format="yyyy-MM-dd"
                                                                    id="start"
                                                                    inputVariant="outlined"
                                                                    keyboardIcon={
                                                                      <img
                                                                        alt="open calendar"
                                                                        src="calendar.svg"
                                                                      />
                                                                    }
                                                                    onAccept={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onFocus={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <KeyboardDateInput
                                                                      InputLabelProps={
                                                                        Object {
                                                                          "error": false,
                                                                          "shrink": false,
                                                                        }
                                                                      }
                                                                      format="yyyy-MM-dd"
                                                                      id="start"
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />,
                                                                        }
                                                                      }
                                                                      inputValue="2099-01-01"
                                                                      inputVariant="outlined"
                                                                      keyboardIcon={
                                                                        <img
                                                                          alt="open calendar"
                                                                          src="calendar.svg"
                                                                        />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      openPicker={[Function]}
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value="2099-01-01"
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputLabelProps={
                                                                            Object {
                                                                              "error": false,
                                                                              "shrink": false,
                                                                            }
                                                                          }
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <img
                                                                                    alt="open calendar"
                                                                                    src="calendar.svg"
                                                                                  />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          error={false}
                                                                          helperText=""
                                                                          id="start"
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-invalid="false"
                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                id="start"
                                                                                type="text"
                                                                                value="2099-01-01"
                                                                              />,
                                                                            }
                                                                          }
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="2099-01-01"
                                                                          variant="outlined"
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputLabelProps={
                                                                              Object {
                                                                                "error": false,
                                                                                "shrink": false,
                                                                              }
                                                                            }
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <img
                                                                                      alt="open calendar"
                                                                                      src="calendar.svg"
                                                                                    />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            error={false}
                                                                            helperText=""
                                                                            id="start"
                                                                            inputRef={
                                                                              Object {
                                                                                "current": <input
                                                                                  aria-invalid="false"
                                                                                  class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                  id="start"
                                                                                  type="text"
                                                                                  value="2099-01-01"
                                                                                />,
                                                                              }
                                                                            }
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            value="2099-01-01"
                                                                            variant="outlined"
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="primary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="outlined"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="primary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="outlined"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(OutlinedInput))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <img
                                                                                            alt="open calendar"
                                                                                            src="calendar.svg"
                                                                                          />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    id="start"
                                                                                    inputRef={
                                                                                      Object {
                                                                                        "current": <input
                                                                                          aria-invalid="false"
                                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                          id="start"
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        />,
                                                                                      }
                                                                                    }
                                                                                    labelWidth={0}
                                                                                    multiline={false}
                                                                                    notched={false}
                                                                                    onBlur={[Function]}
                                                                                    onChange={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    value="2099-01-01"
                                                                                  >
                                                                                    <ForwardRef(OutlinedInput)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "input": "MuiOutlinedInput-input",
                                                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                                                          "multiline": "MuiOutlinedInput-multiline",
                                                                                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                                          "root": "MuiOutlinedInput-root",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <img
                                                                                              alt="open calendar"
                                                                                              src="calendar.svg"
                                                                                            />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      id="start"
                                                                                      inputRef={
                                                                                        Object {
                                                                                          "current": <input
                                                                                            aria-invalid="false"
                                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                            id="start"
                                                                                            type="text"
                                                                                            value="2099-01-01"
                                                                                          />,
                                                                                        }
                                                                                      }
                                                                                      labelWidth={0}
                                                                                      multiline={false}
                                                                                      notched={false}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      value="2099-01-01"
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "input": "MuiOutlinedInput-input",
                                                                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                            "marginDense": "MuiOutlinedInput-marginDense",
                                                                                            "multiline": "MuiOutlinedInput-multiline",
                                                                                            "notchedOutline": null,
                                                                                            "root": "MuiOutlinedInput-root",
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                            >
                                                                                              <img
                                                                                                alt="open calendar"
                                                                                                src="calendar.svg"
                                                                                              />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        id="start"
                                                                                        inputComponent="input"
                                                                                        inputRef={
                                                                                          Object {
                                                                                            "current": <input
                                                                                              aria-invalid="false"
                                                                                              class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              id="start"
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />,
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onBlur={[Function]}
                                                                                        onChange={[Function]}
                                                                                        onFocus={[Function]}
                                                                                        renderSuffix={[Function]}
                                                                                        type="text"
                                                                                        value="2099-01-01"
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <img
                                                                                                  alt="open calendar"
                                                                                                  src="calendar.svg"
                                                                                                />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          id="start"
                                                                                          inputComponent="input"
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-invalid="false"
                                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                id="start"
                                                                                                type="text"
                                                                                                value="2099-01-01"
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          renderSuffix={[Function]}
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              id="start"
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <img
                                                                                                                alt="open calendar"
                                                                                                                src="calendar.svg"
                                                                                                              />
                                                                                                            </span>
                                                                                                            <NoSsr>
                                                                                                              <WithStyles(undefined)
                                                                                                                center={true}
                                                                                                              >
                                                                                                                <ForwardRef(TouchRipple)
                                                                                                                  center={true}
                                                                                                                  classes={
                                                                                                                    Object {
                                                                                                                      "child": "MuiTouchRipple-child",
                                                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                      "root": "MuiTouchRipple-root",
                                                                                                                    }
                                                                                                                  }
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="MuiTouchRipple-root"
                                                                                                                  >
                                                                                                                    <TransitionGroup
                                                                                                                      childFactory={[Function]}
                                                                                                                      component={null}
                                                                                                                      exit={true}
                                                                                                                    />
                                                                                                                  </span>
                                                                                                                </ForwardRef(TouchRipple)>
                                                                                                              </WithStyles(undefined)>
                                                                                                            </NoSsr>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                            <WithStyles(ForwardRef(NotchedOutline))
                                                                                              className="MuiOutlinedInput-notchedOutline"
                                                                                              labelWidth={0}
                                                                                              notched={false}
                                                                                            >
                                                                                              <ForwardRef(NotchedOutline)
                                                                                                className="MuiOutlinedInput-notchedOutline"
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "legend": "PrivateNotchedOutline-legend-147",
                                                                                                    "root": "PrivateNotchedOutline-root-146",
                                                                                                  }
                                                                                                }
                                                                                                labelWidth={0}
                                                                                                notched={false}
                                                                                              >
                                                                                                <fieldset
                                                                                                  aria-hidden={true}
                                                                                                  className="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                  style={
                                                                                                    Object {
                                                                                                      "paddingLeft": 8,
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <legend
                                                                                                    className="PrivateNotchedOutline-legend-147"
                                                                                                    style={
                                                                                                      Object {
                                                                                                        "width": 0.01,
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <span
                                                                                                      dangerouslySetInnerHTML={
                                                                                                        Object {
                                                                                                          "__html": "&#8203;",
                                                                                                        }
                                                                                                      }
                                                                                                    />
                                                                                                  </legend>
                                                                                                </fieldset>
                                                                                              </ForwardRef(NotchedOutline)>
                                                                                            </WithStyles(ForwardRef(NotchedOutline))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(OutlinedInput)>
                                                                                  </WithStyles(ForwardRef(OutlinedInput))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ForwardRef(Popover))
                                                                      anchorEl={
                                                                        <input
                                                                          aria-invalid="false"
                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                          id="start"
                                                                          type="text"
                                                                          value="2099-01-01"
                                                                        />
                                                                      }
                                                                      anchorOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "bottom",
                                                                        }
                                                                      }
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                      transformOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "top",
                                                                        }
                                                                      }
                                                                    >
                                                                      <ForwardRef(Popover)
                                                                        anchorEl={
                                                                          <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "bottom",
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "paper": "MuiPopover-paper",
                                                                            "root": "MuiPopover-root",
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(Modal)
                                                                          BackdropProps={
                                                                            Object {
                                                                              "invisible": true,
                                                                            }
                                                                          }
                                                                          className="MuiPopover-root"
                                                                          container={
                                                                            <body
                                                                              style="padding-right: 0px; overflow: hidden;"
                                                                            >
                                                                              <div
                                                                                aria-hidden="true"
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH gOazGM"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            >
                                                                                              VAL_INVALID
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                              <div
                                                                                aria-hidden="true"
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH gOazGM"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            >
                                                                                              VAL_INVALID
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                              <div
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                            </body>
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        />
                                                                      </ForwardRef(Popover)>
                                                                    </WithStyles(ForwardRef(Popover))>
                                                                  </InlineWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                            </MuiPickersUtilsProvider>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                                <Styled(Component)
                                                  checked={true}
                                                  onChange={[Function]}
                                                >
                                                  <StyledComponent
                                                    checked={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-EHOje",
                                                          "isStatic": false,
                                                          "lastClassName": "gkKQZC",
                                                          "rules": Array [
                                                            "
  display: block;
  position: relative;
  cursor: pointer;
  padding-left: 25px;
  margin: 10px 0;
  input {
    position: absolute;
    opacity 0;
    cursor: pointer;
    width: 0;
    height: 0
  }
  span {
    position: absolute;
    top: 0;
    left: 0;
    height: 15px;
    width: 15px;
    border: 2px solid #B3DBE9;
    margin-top: 1px;
  }
  input:checked ~ span {
    background-color: transparent;
  }

  span:after {
    content: \\" \\";
    position: absolute;
    display: none;
  }

  input:checked ~ span:after {
    display: block;
  }

  span:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 8px;
    border: solid black;
    border-width: 0 1px 2px 0;
    transform: rotate(45deg);
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-EHOje",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onChange={[Function]}
                                                  >
                                                    <Component
                                                      checked={true}
                                                      className="sc-EHOje gkKQZC"
                                                      onChange={[Function]}
                                                    >
                                                      <label
                                                        className="sc-EHOje gkKQZC"
                                                      >
                                                        NEGOTIATE_FLEXIBLE
                                                        <input
                                                          checked={true}
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                        <span />
                                                      </label>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(styled.h2)>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "bWCtRd",
                                              "rules": Array [
                                                "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                                "
  padding-top: 25px;
",
                                              ],
                                            },
                                            "displayName": "Styled(styled.h2)",
                                            "foldedComponentIds": Array [
                                              "sc-iwsKbI",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": "h2",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <h2
                                          className="sc-iwsKbI sc-gZMcBi bWCtRd"
                                        >
                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                        </h2>
                                      </StyledComponent>
                                    </Styled(styled.h2)>
                                    <Styled(Input)
                                      id="enquiry_your_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_NAME"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_your_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_NAME"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_your_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_NAME"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_your_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_NAME"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_your_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_NAME"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_your_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_NAME"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-jTzLTM",
                                              "isStatic": false,
                                              "lastClassName": "cvVqEf",
                                              "rules": Array [
                                                "
  border-radius: 2px;
  display: flex;
  flex-direction: row;
  div:first-child {
    margin-right: 10px;
  }
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-jTzLTM",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-jTzLTM cvVqEf"
                                        >
                                          <Styled(Input)
                                            id="enquiry_email"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                          <Styled(Input)
                                            id="enquiry_email2"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email2"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email2"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email2"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email2"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email2"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(Input)
                                      id="enquiry_company_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_company_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_COMPANY"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_company_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_COMPANY"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_company_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_COMPANY"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_company_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_COMPANY"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_company_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_PASSWORD
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <Styled(Input)
                                      id="enquiry_password"
                                      onChange={[Function]}
                                      placeholder="password"
                                      type="password"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_password"
                                        onChange={[Function]}
                                        placeholder="password"
                                        type="password"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_password"
                                          onChange={[Function]}
                                          placeholder="password"
                                          type="password"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_password"
                                                  onChange={[Function]}
                                                  placeholder="password"
                                                  type="password"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_password"
                                                    onChange={[Function]}
                                                    placeholder="password"
                                                    type="password"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_password"
                                                      onChange={[Function]}
                                                      placeholder="password"
                                                      type="password"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_MESSAGE
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <styled.textarea
                                      onChange={[Function]}
                                      value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "bnqIJS",
                                              "rules": Array [
                                                "
  margin-top: 8px;
  min-height: 120px;
  width: 100%;
  box-sizing: border-box;
  outline: none;
  resize: none;
  font-size: 16px;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 98%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.textarea",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "textarea",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onChange={[Function]}
                                        value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                      >
                                        <textarea
                                          className="sc-gqjmRU bnqIJS"
                                          onChange={[Function]}
                                          value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                        />
                                      </StyledComponent>
                                    </styled.textarea>
                                  </form>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                            <WithStyles(ForwardRef(DialogActions))>
                              <ForwardRef(DialogActions)
                                classes={
                                  Object {
                                    "root": "MuiDialogActions-root",
                                    "spacing": "MuiDialogActions-spacing",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <styled.p>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kgoBCf",
                                            "isStatic": false,
                                            "lastClassName": "kTmjno",
                                            "rules": Array [
                                              "
  margin-left: 14px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
  a {
    color: #f35c2b;
    text-decoration: none;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.p",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kgoBCf",
                                          "target": "p",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <p
                                        className="sc-kgoBCf kTmjno"
                                      >
                                        ENQUIRY_DIALOG_NOTICE
                                         
                                        <Link
                                          to="/en-no/terms"
                                        />
                                         
                                        ENQUIRY_DIALOG_NOTICE_AND
                                         
                                        <Link
                                          to="/en-no/privacy"
                                        />
                                      </p>
                                    </StyledComponent>
                                  </styled.p>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-gzVnrw",
                                            "isStatic": false,
                                            "lastClassName": "eSYWWv",
                                            "rules": Array [
                                              "
  margin: 10px 15px;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-gzVnrw",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-gzVnrw eSYWWv"
                                      >
                                        <Styled(styled.button)
                                          autoFocus={true}
                                          color="primary"
                                          data-auto="submit-enquiry-dialog-fixed"
                                          data-testid="submit-enquiry-dialog-ok"
                                          id="dialogOK"
                                          onClick={[Function]}
                                        >
                                          <StyledComponent
                                            autoFocus={true}
                                            color="primary"
                                            data-auto="submit-enquiry-dialog-fixed"
                                            data-testid="submit-enquiry-dialog-ok"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "ieMtwM",
                                                  "rules": Array [
                                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                                    "
  background-color: #404042;
  color: #fffff0;
  outline: none;
  text-align: center;
  margin-left: 24px;
",
                                                  ],
                                                },
                                                "displayName": "Styled(styled.button)",
                                                "foldedComponentIds": Array [
                                                  "sc-bZQynM",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="dialogOK"
                                            onClick={[Function]}
                                          >
                                            <button
                                              autoFocus={true}
                                              className="sc-bZQynM sc-dnqmqq ieMtwM"
                                              color="primary"
                                              data-auto="submit-enquiry-dialog-fixed"
                                              data-testid="submit-enquiry-dialog-ok"
                                              id="dialogOK"
                                              onClick={[Function]}
                                            >
                                              ENQUIRY_DIALOG_BUTTON
                                            </button>
                                          </StyledComponent>
                                        </Styled(styled.button)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </ForwardRef(DialogActions)>
                            </WithStyles(ForwardRef(DialogActions))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</EnquiryDialogFixed>
`;

exports[`validation works 1`] = `
<EnquiryDialogFixed
  open={true}
  setOpen={[MockFunction]}
>
  <WithStyles(ForwardRef(Dialog))
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Dialog)
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "defaultProps": undefined,
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root"
        closeAfterTransition={true}
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="padding-right: 0px; overflow: hidden;"
              >
                <div
                  aria-hidden="true"
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH gOazGM"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              >
                                VAL_INVALID
                              </div>
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="MuiDialog-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiDialog-container MuiDialog-scrollPaper"
                    role="none presentation"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                      role="dialog"
                    >
                      <div
                        class="MuiDialogTitle-root sc-htoDjs erIOud"
                      >
                        <h2
                          class="MuiTypography-root MuiTypography-h6"
                        >
                          ENQUIRY_DIALOG_TITLE
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </h2>
                      </div>
                      <div
                        class="MuiDialogContent-root"
                      >
                        <p>
                          ENQUIRY_DIALOG_REGISTERED
                          <button
                            class="sc-chPdSV cZsvMS"
                          >
                            ENQUIRY_DIALOG_SIGNIN
                          </button>
                        </p>
                        <h2
                          class="sc-iwsKbI ImXDR"
                        >
                          ENQUIRY_DIALOG_SUBTITLE
                        </h2>
                        <form>
                          <div
                            class="sc-VigVT dFJNyi"
                          >
                            <div
                              class="sc-fjdhpX gYXLcz"
                            >
                              <div
                                class="sc-bdVaJa dlaMlh"
                              >
                                <label
                                  for="length"
                                >
                                  NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                </label>
                                <input
                                  class="sc-bwzfXH jHsaxX"
                                  id="length"
                                  min="1"
                                  type="number"
                                  value="12"
                                />
                                <div
                                  class="sc-htpNat gctktF"
                                />
                              </div>
                            </div>
                            <div
                              class="sc-jzJRlG ewZsZY"
                            >
                              <div
                                class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                              >
                                <label>
                                  NEGOTIATE_MOVE_IN_BY
                                </label>
                                <div
                                  class="MuiFormControl-root MuiTextField-root"
                                >
                                  <div
                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                  >
                                    <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="start"
                                      type="text"
                                      value="2099-01-01"
                                    />
                                    <div
                                      class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                    >
                                      <button
                                        class="MuiButtonBase-root MuiIconButton-root"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <img
                                            alt="open calendar"
                                            src="calendar.svg"
                                          />
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                    <fieldset
                                      aria-hidden="true"
                                      class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                      style="padding-left: 8px;"
                                    >
                                      <legend
                                        class="PrivateNotchedOutline-legend-147"
                                        style="width: 0.01px;"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </div>
                                  
                                </div>
                              </div>
                              <label
                                class="sc-EHOje gkKQZC"
                              >
                                NEGOTIATE_FLEXIBLE
                                <input
                                  checked=""
                                  type="checkbox"
                                />
                                <span />
                              </label>
                            </div>
                          </div>
                          <h2
                            class="sc-iwsKbI sc-gZMcBi bWCtRd"
                          >
                            ENQUIRY_DIALOG_ADDITIONAL_INFO
                          </h2>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_your_name"
                              placeholder="ENQUIRY_DIALOG_NAME"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <div
                            class="sc-jTzLTM cvVqEf"
                          >
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email"
                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                            <div
                              class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                            >
                              <input
                                class="sc-bwzfXH jHsaxX"
                                id="enquiry_email2"
                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                type="text"
                                value=""
                              />
                              <div
                                class="sc-htpNat gctktF"
                              />
                            </div>
                          </div>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_company_name"
                              placeholder="ENQUIRY_DIALOG_COMPANY"
                              type="text"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_PASSWORD
                          </label>
                          <div
                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                          >
                            <input
                              class="sc-bwzfXH jHsaxX"
                              id="enquiry_password"
                              placeholder="password"
                              type="password"
                              value=""
                            />
                            <div
                              class="sc-htpNat gctktF"
                            />
                          </div>
                          <label
                            class="sc-cSHVUG hawMFZ"
                          >
                             
                            ENQUIRY_DIALOG_MESSAGE
                          </label>
                          <textarea
                            class="sc-gqjmRU bnqIJS"
                          >
                            ENQUIRY_DIALOG_DEAFULT_MESSAGE
                          </textarea>
                        </form>
                      </div>
                      <div
                        class="MuiDialogActions-root MuiDialogActions-spacing"
                      >
                        <p
                          class="sc-kgoBCf kTmjno"
                        >
                          ENQUIRY_DIALOG_NOTICE
                           
                           
                          ENQUIRY_DIALOG_NOTICE_AND
                           
                        </p>
                        <div
                          class="sc-gzVnrw eSYWWv"
                        >
                          <button
                            class="sc-bZQynM sc-dnqmqq ieMtwM"
                            color="primary"
                            data-auto="submit-enquiry-dialog-fixed"
                            data-testid="submit-enquiry-dialog-ok"
                            id="dialogOK"
                          >
                            ENQUIRY_DIALOG_BUTTON
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDialog-root"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Fade)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="none presentation"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="MuiDialog-container MuiDialog-scrollPaper"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      role="none presentation"
                      style={
                        Object {
                          "opacity": 1,
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                        elevation={24}
                        role="dialog"
                      >
                        <ForwardRef(Paper)
                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={24}
                          role="dialog"
                        >
                          <div
                            className="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                            role="dialog"
                          >
                            <Styled(WithStyles(ForwardRef(DialogTitle)))>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disableTypography": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htoDjs",
                                      "isStatic": false,
                                      "lastClassName": "erIOud",
                                      "rules": Array [
                                        "
  padding-bottom: 0;
  h2 {
    font-size: 25px;
    font-weight: 500;
  }
  svg {
    position: absolute;
    right: 25px;
    top: 10px;
    cursor: pointer;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(WithStyles(ForwardRef(DialogTitle)))",
                                    "foldedComponentIds": Array [],
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiDialogTitle",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-htoDjs",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "Naked": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disableTypography": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "defaultProps": undefined,
                                      "displayName": "WithStyles(ForwardRef(DialogTitle))",
                                      "options": Object {
                                        "defaultTheme": Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        },
                                        "name": "MuiDialogTitle",
                                      },
                                      "propTypes": Object {
                                        "classes": [Function],
                                        "innerRef": [Function],
                                      },
                                      "render": [Function],
                                      "useStyles": [Function],
                                    },
                                    "toString": [Function],
                                    "useStyles": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <WithStyles(ForwardRef(DialogTitle))
                                  className="sc-htoDjs erIOud"
                                >
                                  <ForwardRef(DialogTitle)
                                    className="sc-htoDjs erIOud"
                                    classes={
                                      Object {
                                        "root": "MuiDialogTitle-root",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDialogTitle-root sc-htoDjs erIOud"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        component="h2"
                                        variant="h6"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="h2"
                                          variant="h6"
                                        >
                                          <h2
                                            className="MuiTypography-root MuiTypography-h6"
                                          >
                                            ENQUIRY_DIALOG_TITLE
                                            <ForwardRef
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    onClick={[Function]}
                                                    role="presentation"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </h2>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </ForwardRef(DialogTitle)>
                                </WithStyles(ForwardRef(DialogTitle))>
                              </StyledComponent>
                            </Styled(WithStyles(ForwardRef(DialogTitle)))>
                            <WithStyles(ForwardRef(DialogContent))>
                              <ForwardRef(DialogContent)
                                classes={
                                  Object {
                                    "dividers": "MuiDialogContent-dividers",
                                    "root": "MuiDialogContent-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogContent-root"
                                >
                                  <p>
                                    ENQUIRY_DIALOG_REGISTERED
                                    <styled.button
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-chPdSV",
                                              "isStatic": false,
                                              "lastClassName": "cZsvMS",
                                              "rules": Array [
                                                "
  color: #f35c2b;
  font-size: 16px;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  margin-left: 5px;
",
                                              ],
                                            },
                                            "displayName": "styled.button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-chPdSV",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="sc-chPdSV cZsvMS"
                                          onClick={[Function]}
                                        >
                                          ENQUIRY_DIALOG_SIGNIN
                                        </button>
                                      </StyledComponent>
                                    </styled.button>
                                  </p>
                                  <styled.h2>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": false,
                                            "lastClassName": "ImXDR",
                                            "rules": Array [
                                              "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                            ],
                                          },
                                          "displayName": "styled.h2",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="sc-iwsKbI ImXDR"
                                      >
                                        ENQUIRY_DIALOG_SUBTITLE
                                      </h2>
                                    </StyledComponent>
                                  </styled.h2>
                                  <form>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "dFJNyi",
                                              "rules": Array [
                                                "
  min-height: 120px;
  border-radius: 2px;
  background-color: #f4f4f4;
  display: flex;
  flex-direction: row;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-VigVT dFJNyi"
                                        >
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-fjdhpX",
                                                    "isStatic": false,
                                                    "lastClassName": "gYXLcz",
                                                    "rules": Array [
                                                      "
  flex: 1 1 auto;
  max-width: 140px;
  margin: 10px 5px;
  padding: 5px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-fjdhpX",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-fjdhpX gYXLcz"
                                              >
                                                <Input
                                                  id="length"
                                                  label="NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)"
                                                  min="1"
                                                  onChange={[Function]}
                                                  type="number"
                                                  value={12}
                                                >
                                                  <styled.div>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bdVaJa",
                                                            "isStatic": false,
                                                            "lastClassName": "dlaMlh",
                                                            "rules": Array [
                                                              "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                            ],
                                                          },
                                                          "displayName": "styled.div",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bdVaJa",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="sc-bdVaJa dlaMlh"
                                                      >
                                                        <label
                                                          htmlFor="length"
                                                        >
                                                          NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                        </label>
                                                        <styled.input
                                                          id="length"
                                                          min="1"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="number"
                                                          value={12}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jHsaxX",
                                                                  "rules": Array [
                                                                    "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                    [Function],
                                                                    ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                    [Function],
                                                                    ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                    [Function],
                                                                    ";
    border: 1px solid ",
                                                                    [Function],
                                                                    ";
  }
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.input",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "input",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="length"
                                                            min="1"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="number"
                                                            value={12}
                                                          >
                                                            <input
                                                              className="sc-bwzfXH jHsaxX"
                                                              id="length"
                                                              min="1"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="number"
                                                              value={12}
                                                            />
                                                          </StyledComponent>
                                                        </styled.input>
                                                        <styled.div>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "gctktF",
                                                                  "rules": Array [
                                                                    "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="sc-htpNat gctktF"
                                                            />
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </div>
                                                    </StyledComponent>
                                                  </styled.div>
                                                </Input>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jzJRlG",
                                                    "isStatic": false,
                                                    "lastClassName": "ewZsZY",
                                                    "rules": Array [
                                                      "
  border-left: 1px solid #dddddd;
  flex: 1 1 auto;
  margin: 10px 5px 10px 0;
  padding: 5px 5px 5px 10px;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jzJRlG",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-jzJRlG ewZsZY"
                                              >
                                                <Styled(Component)
                                                  disablePast={true}
                                                  id="start"
                                                  label="NEGOTIATE_MOVE_IN_BY"
                                                  onChange={[Function]}
                                                  value={2099-01-01T00:00:00.000Z}
                                                >
                                                  <StyledComponent
                                                    disablePast={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "gRKhFU",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    color: #404042;
    display: block;
    font-size: 16px;
    font-weight: 400;
    padding-left: 6px;
    padding-bottom: 2px;
    transition: none;
    transform: none;
  }
  .MuiFormControl-root {
    width: 100%;
  }
  .MuiOutlinedInput-adornedEnd {
    border: 1px solid ",
                                                            [Function],
                                                            ";
    border-radius: 3px;
    padding-right: 0;
    background-color: white;
  }
  .MuiInputAdornment-positionEnd {
    margin-left: 0px;
  }
  .MuiIconButton-root {
    padding-left: 2px;
    :hover {
      background-color: initial;
    }
  }
  input {
    font-size: 16px;
    padding: 6px 6px;
    width: 100%;
    height: 21px;
  }
  fieldset {
    border: none;
  }
  .MuiFormHelperText-root.MuiFormHelperText-contained.Mui-error {
    margin: 2px 0;
    font-size: 14px;
    font-weight: 500;
    color: #db4437;
  }
  .MuiTouchRipple-root {
    display: none;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="start"
                                                    label="NEGOTIATE_MOVE_IN_BY"
                                                    onChange={[Function]}
                                                    value={2099-01-01T00:00:00.000Z}
                                                  >
                                                    <Component
                                                      className="sc-ifAKCX gRKhFU"
                                                      disablePast={true}
                                                      id="start"
                                                      label="NEGOTIATE_MOVE_IN_BY"
                                                      onChange={[Function]}
                                                      value={2099-01-01T00:00:00.000Z}
                                                    >
                                                      <styled.div
                                                        className="sc-ifAKCX gRKhFU"
                                                        focusOn={false}
                                                      >
                                                        <StyledComponent
                                                          className="sc-ifAKCX gRKhFU"
                                                          focusOn={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bxivhb",
                                                                "isStatic": false,
                                                                "lastClassName": "fuvWwV",
                                                                "rules": Array [
                                                                  "
  && .MuiOutlinedInput-adornedEnd {
    ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bxivhb",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                          >
                                                            <label>
                                                              NEGOTIATE_MOVE_IN_BY
                                                            </label>
                                                            <MuiPickersUtilsProvider
                                                              locale={
                                                                Object {
                                                                  "code": "en-GB",
                                                                  "formatDistance": [Function],
                                                                  "formatLong": Object {
                                                                    "date": [Function],
                                                                    "dateTime": [Function],
                                                                    "time": [Function],
                                                                  },
                                                                  "formatRelative": [Function],
                                                                  "localize": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "match": Object {
                                                                    "day": [Function],
                                                                    "dayPeriod": [Function],
                                                                    "era": [Function],
                                                                    "month": [Function],
                                                                    "ordinalNumber": [Function],
                                                                    "quarter": [Function],
                                                                  },
                                                                  "options": Object {
                                                                    "firstWeekContainsDate": 4,
                                                                    "weekStartsOn": 1,
                                                                  },
                                                                }
                                                              }
                                                              utils={[Function]}
                                                            >
                                                              <PickerWithState
                                                                InputLabelProps={
                                                                  Object {
                                                                    "error": false,
                                                                    "shrink": false,
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                autoOk={true}
                                                                disablePast={true}
                                                                disableToolbar={true}
                                                                format="yyyy-MM-dd"
                                                                id="start"
                                                                inputVariant="outlined"
                                                                invalidDateMessage="Invalid Date Format"
                                                                keyboardIcon={
                                                                  <img
                                                                    alt="open calendar"
                                                                    src="calendar.svg"
                                                                  />
                                                                }
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Date should not be before minimal date"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                openTo="date"
                                                                value={2099-01-01T00:00:00.000Z}
                                                                variant="inline"
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "2099-01-01",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  InputLabelProps={
                                                                    Object {
                                                                      "error": false,
                                                                      "shrink": false,
                                                                    }
                                                                  }
                                                                  format="yyyy-MM-dd"
                                                                  id="start"
                                                                  inputVariant="outlined"
                                                                  keyboardIcon={
                                                                    <img
                                                                      alt="open calendar"
                                                                      src="calendar.svg"
                                                                    />
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onBlur={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onFocus={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  variant="inline"
                                                                >
                                                                  <InlineWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "2099-01-01",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    InputLabelProps={
                                                                      Object {
                                                                        "error": false,
                                                                        "shrink": false,
                                                                      }
                                                                    }
                                                                    format="yyyy-MM-dd"
                                                                    id="start"
                                                                    inputVariant="outlined"
                                                                    keyboardIcon={
                                                                      <img
                                                                        alt="open calendar"
                                                                        src="calendar.svg"
                                                                      />
                                                                    }
                                                                    onAccept={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onFocus={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <KeyboardDateInput
                                                                      InputLabelProps={
                                                                        Object {
                                                                          "error": false,
                                                                          "shrink": false,
                                                                        }
                                                                      }
                                                                      format="yyyy-MM-dd"
                                                                      id="start"
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />,
                                                                        }
                                                                      }
                                                                      inputValue="2099-01-01"
                                                                      inputVariant="outlined"
                                                                      keyboardIcon={
                                                                        <img
                                                                          alt="open calendar"
                                                                          src="calendar.svg"
                                                                        />
                                                                      }
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      openPicker={[Function]}
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value="2099-01-01"
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputLabelProps={
                                                                            Object {
                                                                              "error": false,
                                                                              "shrink": false,
                                                                            }
                                                                          }
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <img
                                                                                    alt="open calendar"
                                                                                    src="calendar.svg"
                                                                                  />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          error={false}
                                                                          helperText=""
                                                                          id="start"
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-invalid="false"
                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                id="start"
                                                                                type="text"
                                                                                value="2099-01-01"
                                                                              />,
                                                                            }
                                                                          }
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="2099-01-01"
                                                                          variant="outlined"
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputLabelProps={
                                                                              Object {
                                                                                "error": false,
                                                                                "shrink": false,
                                                                              }
                                                                            }
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <img
                                                                                      alt="open calendar"
                                                                                      src="calendar.svg"
                                                                                    />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            error={false}
                                                                            helperText=""
                                                                            id="start"
                                                                            inputRef={
                                                                              Object {
                                                                                "current": <input
                                                                                  aria-invalid="false"
                                                                                  class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                  id="start"
                                                                                  type="text"
                                                                                  value="2099-01-01"
                                                                                />,
                                                                              }
                                                                            }
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            value="2099-01-01"
                                                                            variant="outlined"
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="primary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="outlined"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="primary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="outlined"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(OutlinedInput))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <img
                                                                                            alt="open calendar"
                                                                                            src="calendar.svg"
                                                                                          />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    id="start"
                                                                                    inputRef={
                                                                                      Object {
                                                                                        "current": <input
                                                                                          aria-invalid="false"
                                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                          id="start"
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        />,
                                                                                      }
                                                                                    }
                                                                                    labelWidth={0}
                                                                                    multiline={false}
                                                                                    notched={false}
                                                                                    onBlur={[Function]}
                                                                                    onChange={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    value="2099-01-01"
                                                                                  >
                                                                                    <ForwardRef(OutlinedInput)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "input": "MuiOutlinedInput-input",
                                                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                                                          "multiline": "MuiOutlinedInput-multiline",
                                                                                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                                          "root": "MuiOutlinedInput-root",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <img
                                                                                              alt="open calendar"
                                                                                              src="calendar.svg"
                                                                                            />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      id="start"
                                                                                      inputRef={
                                                                                        Object {
                                                                                          "current": <input
                                                                                            aria-invalid="false"
                                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                            id="start"
                                                                                            type="text"
                                                                                            value="2099-01-01"
                                                                                          />,
                                                                                        }
                                                                                      }
                                                                                      labelWidth={0}
                                                                                      multiline={false}
                                                                                      notched={false}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      value="2099-01-01"
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "input": "MuiOutlinedInput-input",
                                                                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                            "marginDense": "MuiOutlinedInput-marginDense",
                                                                                            "multiline": "MuiOutlinedInput-multiline",
                                                                                            "notchedOutline": null,
                                                                                            "root": "MuiOutlinedInput-root",
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                            >
                                                                                              <img
                                                                                                alt="open calendar"
                                                                                                src="calendar.svg"
                                                                                              />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        id="start"
                                                                                        inputComponent="input"
                                                                                        inputRef={
                                                                                          Object {
                                                                                            "current": <input
                                                                                              aria-invalid="false"
                                                                                              class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              id="start"
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />,
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onBlur={[Function]}
                                                                                        onChange={[Function]}
                                                                                        onFocus={[Function]}
                                                                                        renderSuffix={[Function]}
                                                                                        type="text"
                                                                                        value="2099-01-01"
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <img
                                                                                                  alt="open calendar"
                                                                                                  src="calendar.svg"
                                                                                                />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          id="start"
                                                                                          inputComponent="input"
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-invalid="false"
                                                                                                class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                id="start"
                                                                                                type="text"
                                                                                                value="2099-01-01"
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          renderSuffix={[Function]}
                                                                                          type="text"
                                                                                          value="2099-01-01"
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              id="start"
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value="2099-01-01"
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <img
                                                                                                                alt="open calendar"
                                                                                                                src="calendar.svg"
                                                                                                              />
                                                                                                            </span>
                                                                                                            <NoSsr>
                                                                                                              <WithStyles(undefined)
                                                                                                                center={true}
                                                                                                              >
                                                                                                                <ForwardRef(TouchRipple)
                                                                                                                  center={true}
                                                                                                                  classes={
                                                                                                                    Object {
                                                                                                                      "child": "MuiTouchRipple-child",
                                                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                      "root": "MuiTouchRipple-root",
                                                                                                                    }
                                                                                                                  }
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="MuiTouchRipple-root"
                                                                                                                  >
                                                                                                                    <TransitionGroup
                                                                                                                      childFactory={[Function]}
                                                                                                                      component={null}
                                                                                                                      exit={true}
                                                                                                                    />
                                                                                                                  </span>
                                                                                                                </ForwardRef(TouchRipple)>
                                                                                                              </WithStyles(undefined)>
                                                                                                            </NoSsr>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                            <WithStyles(ForwardRef(NotchedOutline))
                                                                                              className="MuiOutlinedInput-notchedOutline"
                                                                                              labelWidth={0}
                                                                                              notched={false}
                                                                                            >
                                                                                              <ForwardRef(NotchedOutline)
                                                                                                className="MuiOutlinedInput-notchedOutline"
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "legend": "PrivateNotchedOutline-legend-147",
                                                                                                    "root": "PrivateNotchedOutline-root-146",
                                                                                                  }
                                                                                                }
                                                                                                labelWidth={0}
                                                                                                notched={false}
                                                                                              >
                                                                                                <fieldset
                                                                                                  aria-hidden={true}
                                                                                                  className="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                  style={
                                                                                                    Object {
                                                                                                      "paddingLeft": 8,
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <legend
                                                                                                    className="PrivateNotchedOutline-legend-147"
                                                                                                    style={
                                                                                                      Object {
                                                                                                        "width": 0.01,
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <span
                                                                                                      dangerouslySetInnerHTML={
                                                                                                        Object {
                                                                                                          "__html": "&#8203;",
                                                                                                        }
                                                                                                      }
                                                                                                    />
                                                                                                  </legend>
                                                                                                </fieldset>
                                                                                              </ForwardRef(NotchedOutline)>
                                                                                            </WithStyles(ForwardRef(NotchedOutline))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(OutlinedInput)>
                                                                                  </WithStyles(ForwardRef(OutlinedInput))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ForwardRef(Popover))
                                                                      anchorEl={
                                                                        <input
                                                                          aria-invalid="false"
                                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                          id="start"
                                                                          type="text"
                                                                          value="2099-01-01"
                                                                        />
                                                                      }
                                                                      anchorOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "bottom",
                                                                        }
                                                                      }
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                      transformOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "top",
                                                                        }
                                                                      }
                                                                    >
                                                                      <ForwardRef(Popover)
                                                                        anchorEl={
                                                                          <input
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                            id="start"
                                                                            type="text"
                                                                            value="2099-01-01"
                                                                          />
                                                                        }
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "bottom",
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "paper": "MuiPopover-paper",
                                                                            "root": "MuiPopover-root",
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(Modal)
                                                                          BackdropProps={
                                                                            Object {
                                                                              "invisible": true,
                                                                            }
                                                                          }
                                                                          className="MuiPopover-root"
                                                                          container={
                                                                            <body
                                                                              style="padding-right: 0px; overflow: hidden;"
                                                                            >
                                                                              <div
                                                                                aria-hidden="true"
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH gOazGM"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            >
                                                                                              VAL_INVALID
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                              <div
                                                                                class="MuiDialog-root"
                                                                                role="presentation"
                                                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                              >
                                                                                <div
                                                                                  aria-hidden="true"
                                                                                  class="MuiBackdrop-root"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                />
                                                                                <div
                                                                                  data-test="sentinelStart"
                                                                                  tabindex="0"
                                                                                />
                                                                                <div
                                                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                  role="none presentation"
                                                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                  tabindex="-1"
                                                                                >
                                                                                  <div
                                                                                    class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                    role="dialog"
                                                                                  >
                                                                                    <div
                                                                                      class="MuiDialogTitle-root sc-htoDjs erIOud"
                                                                                    >
                                                                                      <h2
                                                                                        class="MuiTypography-root MuiTypography-h6"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_TITLE
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          class="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          role="presentation"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                          />
                                                                                        </svg>
                                                                                      </h2>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogContent-root"
                                                                                    >
                                                                                      <p>
                                                                                        ENQUIRY_DIALOG_REGISTERED
                                                                                        <button
                                                                                          class="sc-chPdSV cZsvMS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_SIGNIN
                                                                                        </button>
                                                                                      </p>
                                                                                      <h2
                                                                                        class="sc-iwsKbI ImXDR"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_SUBTITLE
                                                                                      </h2>
                                                                                      <form>
                                                                                        <div
                                                                                          class="sc-VigVT dFJNyi"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-fjdhpX gYXLcz"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bdVaJa dlaMlh"
                                                                                            >
                                                                                              <label
                                                                                                for="length"
                                                                                              >
                                                                                                NEGOTIATE_LENGTH (NEGOTIATE_MONTHS)
                                                                                              </label>
                                                                                              <input
                                                                                                class="sc-bwzfXH jHsaxX"
                                                                                                id="length"
                                                                                                min="1"
                                                                                                type="number"
                                                                                                value="12"
                                                                                              />
                                                                                              <div
                                                                                                class="sc-htpNat gctktF"
                                                                                              />
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-jzJRlG ewZsZY"
                                                                                          >
                                                                                            <div
                                                                                              class="sc-bxivhb fuvWwV sc-ifAKCX gRKhFU"
                                                                                            >
                                                                                              <label>
                                                                                                NEGOTIATE_MOVE_IN_BY
                                                                                              </label>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root"
                                                                                              >
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                                                    id="start"
                                                                                                    type="text"
                                                                                                    value="2099-01-01"
                                                                                                  />
                                                                                                  <div
                                                                                                    class="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                  >
                                                                                                    <button
                                                                                                      class="MuiButtonBase-root MuiIconButton-root"
                                                                                                      tabindex="0"
                                                                                                      type="button"
                                                                                                    >
                                                                                                      <span
                                                                                                        class="MuiIconButton-label"
                                                                                                      >
                                                                                                        <img
                                                                                                          alt="open calendar"
                                                                                                          src="calendar.svg"
                                                                                                        />
                                                                                                      </span>
                                                                                                      <span
                                                                                                        class="MuiTouchRipple-root"
                                                                                                      />
                                                                                                    </button>
                                                                                                  </div>
                                                                                                  <fieldset
                                                                                                    aria-hidden="true"
                                                                                                    class="PrivateNotchedOutline-root-146 MuiOutlinedInput-notchedOutline"
                                                                                                    style="padding-left: 8px;"
                                                                                                  >
                                                                                                    <legend
                                                                                                      class="PrivateNotchedOutline-legend-147"
                                                                                                      style="width: 0.01px;"
                                                                                                    >
                                                                                                      <span>
                                                                                                        ​
                                                                                                      </span>
                                                                                                    </legend>
                                                                                                  </fieldset>
                                                                                                </div>
                                                                                                
                                                                                              </div>
                                                                                            </div>
                                                                                            <label
                                                                                              class="sc-EHOje gkKQZC"
                                                                                            >
                                                                                              NEGOTIATE_FLEXIBLE
                                                                                              <input
                                                                                                checked=""
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span />
                                                                                            </label>
                                                                                          </div>
                                                                                        </div>
                                                                                        <h2
                                                                                          class="sc-iwsKbI sc-gZMcBi bWCtRd"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                                                                        </h2>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_your_name"
                                                                                            placeholder="ENQUIRY_DIALOG_NAME"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-jTzLTM cvVqEf"
                                                                                        >
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                          <div
                                                                                            class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                          >
                                                                                            <input
                                                                                              class="sc-bwzfXH jHsaxX"
                                                                                              id="enquiry_email2"
                                                                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <div
                                                                                              class="sc-htpNat gctktF"
                                                                                            />
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_company_name"
                                                                                            placeholder="ENQUIRY_DIALOG_COMPANY"
                                                                                            type="text"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_PASSWORD
                                                                                        </label>
                                                                                        <div
                                                                                          class="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                                                        >
                                                                                          <input
                                                                                            class="sc-bwzfXH jHsaxX"
                                                                                            id="enquiry_password"
                                                                                            placeholder="password"
                                                                                            type="password"
                                                                                            value=""
                                                                                          />
                                                                                          <div
                                                                                            class="sc-htpNat gctktF"
                                                                                          />
                                                                                        </div>
                                                                                        <label
                                                                                          class="sc-cSHVUG hawMFZ"
                                                                                        >
                                                                                           
                                                                                          ENQUIRY_DIALOG_MESSAGE
                                                                                        </label>
                                                                                        <textarea
                                                                                          class="sc-gqjmRU bnqIJS"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_DEAFULT_MESSAGE
                                                                                        </textarea>
                                                                                      </form>
                                                                                    </div>
                                                                                    <div
                                                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                    >
                                                                                      <p
                                                                                        class="sc-kgoBCf kTmjno"
                                                                                      >
                                                                                        ENQUIRY_DIALOG_NOTICE
                                                                                         
                                                                                         
                                                                                        ENQUIRY_DIALOG_NOTICE_AND
                                                                                         
                                                                                      </p>
                                                                                      <div
                                                                                        class="sc-gzVnrw eSYWWv"
                                                                                      >
                                                                                        <button
                                                                                          class="sc-bZQynM sc-dnqmqq ieMtwM"
                                                                                          color="primary"
                                                                                          data-auto="submit-enquiry-dialog-fixed"
                                                                                          data-testid="submit-enquiry-dialog-ok"
                                                                                          id="dialogOK"
                                                                                        >
                                                                                          ENQUIRY_DIALOG_BUTTON
                                                                                        </button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                                <div
                                                                                  data-test="sentinelEnd"
                                                                                  tabindex="0"
                                                                                />
                                                                              </div>
                                                                            </body>
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        />
                                                                      </ForwardRef(Popover)>
                                                                    </WithStyles(ForwardRef(Popover))>
                                                                  </InlineWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                            </MuiPickersUtilsProvider>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                                <Styled(Component)
                                                  checked={true}
                                                  onChange={[Function]}
                                                >
                                                  <StyledComponent
                                                    checked={true}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-EHOje",
                                                          "isStatic": false,
                                                          "lastClassName": "gkKQZC",
                                                          "rules": Array [
                                                            "
  display: block;
  position: relative;
  cursor: pointer;
  padding-left: 25px;
  margin: 10px 0;
  input {
    position: absolute;
    opacity 0;
    cursor: pointer;
    width: 0;
    height: 0
  }
  span {
    position: absolute;
    top: 0;
    left: 0;
    height: 15px;
    width: 15px;
    border: 2px solid #B3DBE9;
    margin-top: 1px;
  }
  input:checked ~ span {
    background-color: transparent;
  }

  span:after {
    content: \\" \\";
    position: absolute;
    display: none;
  }

  input:checked ~ span:after {
    display: block;
  }

  span:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 8px;
    border: solid black;
    border-width: 0 1px 2px 0;
    transform: rotate(45deg);
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Component)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-EHOje",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onChange={[Function]}
                                                  >
                                                    <Component
                                                      checked={true}
                                                      className="sc-EHOje gkKQZC"
                                                      onChange={[Function]}
                                                    >
                                                      <label
                                                        className="sc-EHOje gkKQZC"
                                                      >
                                                        NEGOTIATE_FLEXIBLE
                                                        <input
                                                          checked={true}
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                        <span />
                                                      </label>
                                                    </Component>
                                                  </StyledComponent>
                                                </Styled(Component)>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(styled.h2)>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "bWCtRd",
                                              "rules": Array [
                                                "
  color: #000000;
  font-size: 16px;
  font-weight: 500;
  line-height: 21px;
",
                                                "
  padding-top: 25px;
",
                                              ],
                                            },
                                            "displayName": "Styled(styled.h2)",
                                            "foldedComponentIds": Array [
                                              "sc-iwsKbI",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": "h2",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <h2
                                          className="sc-iwsKbI sc-gZMcBi bWCtRd"
                                        >
                                          ENQUIRY_DIALOG_ADDITIONAL_INFO
                                        </h2>
                                      </StyledComponent>
                                    </Styled(styled.h2)>
                                    <Styled(Input)
                                      id="enquiry_your_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_NAME"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_your_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_NAME"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_your_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_NAME"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_your_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_NAME"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_your_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_NAME"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_your_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_NAME"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-jTzLTM",
                                              "isStatic": false,
                                              "lastClassName": "cvVqEf",
                                              "rules": Array [
                                                "
  border-radius: 2px;
  display: flex;
  flex-direction: row;
  div:first-child {
    margin-right: 10px;
  }
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 100%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-jTzLTM",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-jTzLTM cvVqEf"
                                        >
                                          <Styled(Input)
                                            id="enquiry_email"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                          <Styled(Input)
                                            id="enquiry_email2"
                                            onChange={[Function]}
                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                            type="text"
                                            value=""
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kAzzGY",
                                                    "isStatic": false,
                                                    "lastClassName": "nFpnv",
                                                    "rules": Array [
                                                      "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Input)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kAzzGY",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="enquiry_email2"
                                              onChange={[Function]}
                                              placeholder="ENQUIRY_DIALOG_EMAIL2"
                                              type="text"
                                              value=""
                                            >
                                              <Input
                                                className="sc-kAzzGY nFpnv"
                                                id="enquiry_email2"
                                                onChange={[Function]}
                                                placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                type="text"
                                                value=""
                                              >
                                                <styled.div
                                                  className="sc-kAzzGY nFpnv"
                                                >
                                                  <StyledComponent
                                                    className="sc-kAzzGY nFpnv"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "dlaMlh",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                                    >
                                                      <styled.input
                                                        id="enquiry_email2"
                                                        onChange={[Function]}
                                                        placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                        type="text"
                                                        value=""
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "jHsaxX",
                                                                "rules": Array [
                                                                  "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                                  [Function],
                                                                  ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                                  [Function],
                                                                  ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.input",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": "input",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="enquiry_email2"
                                                          onChange={[Function]}
                                                          placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="sc-bwzfXH jHsaxX"
                                                            id="enquiry_email2"
                                                            onChange={[Function]}
                                                            placeholder="ENQUIRY_DIALOG_EMAIL2"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </StyledComponent>
                                                      </styled.input>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "gctktF",
                                                                "rules": Array [
                                                                  "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-htpNat gctktF"
                                                          />
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Input>
                                            </StyledComponent>
                                          </Styled(Input)>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <Styled(Input)
                                      id="enquiry_company_name"
                                      onChange={[Function]}
                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                      type="text"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_company_name"
                                        onChange={[Function]}
                                        placeholder="ENQUIRY_DIALOG_COMPANY"
                                        type="text"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_company_name"
                                          onChange={[Function]}
                                          placeholder="ENQUIRY_DIALOG_COMPANY"
                                          type="text"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_company_name"
                                                  onChange={[Function]}
                                                  placeholder="ENQUIRY_DIALOG_COMPANY"
                                                  type="text"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_company_name"
                                                    onChange={[Function]}
                                                    placeholder="ENQUIRY_DIALOG_COMPANY"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_company_name"
                                                      onChange={[Function]}
                                                      placeholder="ENQUIRY_DIALOG_COMPANY"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_PASSWORD
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <Styled(Input)
                                      id="enquiry_password"
                                      onChange={[Function]}
                                      placeholder="password"
                                      type="password"
                                      value=""
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-kAzzGY",
                                              "isStatic": false,
                                              "lastClassName": "nFpnv",
                                              "rules": Array [
                                                "
  width: 50%;
  margin: 10px 0 20px 0;
",
                                              ],
                                            },
                                            "displayName": "Styled(Input)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-kAzzGY",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="enquiry_password"
                                        onChange={[Function]}
                                        placeholder="password"
                                        type="password"
                                        value=""
                                      >
                                        <Input
                                          className="sc-kAzzGY nFpnv"
                                          id="enquiry_password"
                                          onChange={[Function]}
                                          placeholder="password"
                                          type="password"
                                          value=""
                                        >
                                          <styled.div
                                            className="sc-kAzzGY nFpnv"
                                          >
                                            <StyledComponent
                                              className="sc-kAzzGY nFpnv"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "dlaMlh",
                                                    "rules": Array [
                                                      "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="sc-bdVaJa dlaMlh sc-kAzzGY nFpnv"
                                              >
                                                <styled.input
                                                  id="enquiry_password"
                                                  onChange={[Function]}
                                                  placeholder="password"
                                                  type="password"
                                                  value=""
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "jHsaxX",
                                                          "rules": Array [
                                                            "
  margin-top: 0;
  font-size: 16px;
  font-weight: 400;
  line-height: 21px;
  color: ",
                                                            [Function],
                                                            ";
  letter-spacing: -0.2px;
  width: 100%;
  box-sizing: border-box;
  padding: 6px 6px;
  outline: none;
  border: 1px solid ",
                                                            [Function],
                                                            ";
  border-radius: 3px;
  :focus {
    outline: 1px solid ",
                                                            [Function],
                                                            ";
    border: 1px solid ",
                                                            [Function],
                                                            ";
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.input",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "input",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    id="enquiry_password"
                                                    onChange={[Function]}
                                                    placeholder="password"
                                                    type="password"
                                                    value=""
                                                  >
                                                    <input
                                                      className="sc-bwzfXH jHsaxX"
                                                      id="enquiry_password"
                                                      onChange={[Function]}
                                                      placeholder="password"
                                                      type="password"
                                                      value=""
                                                    />
                                                  </StyledComponent>
                                                </styled.input>
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "gctktF",
                                                          "rules": Array [
                                                            "
  font-size: 14px;
  font-weight: 500;
  color: #db4437;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-htpNat gctktF"
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Input>
                                      </StyledComponent>
                                    </Styled(Input)>
                                    <styled.label>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-cSHVUG",
                                              "isStatic": false,
                                              "lastClassName": "hawMFZ",
                                              "rules": Array [
                                                "
  padding-left: 6px;
  padding-bottom: 2px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-cSHVUG",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <label
                                          className="sc-cSHVUG hawMFZ"
                                        >
                                           
                                          ENQUIRY_DIALOG_MESSAGE
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <styled.textarea
                                      onChange={[Function]}
                                      value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "bnqIJS",
                                              "rules": Array [
                                                "
  margin-top: 8px;
  min-height: 120px;
  width: 100%;
  box-sizing: border-box;
  outline: none;
  resize: none;
  font-size: 16px;
  @media ",
                                                "(max-width: 767px)",
                                                " {
    width: 98%;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.textarea",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "textarea",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onChange={[Function]}
                                        value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                      >
                                        <textarea
                                          className="sc-gqjmRU bnqIJS"
                                          onChange={[Function]}
                                          value="ENQUIRY_DIALOG_DEAFULT_MESSAGE"
                                        />
                                      </StyledComponent>
                                    </styled.textarea>
                                  </form>
                                </div>
                              </ForwardRef(DialogContent)>
                            </WithStyles(ForwardRef(DialogContent))>
                            <WithStyles(ForwardRef(DialogActions))>
                              <ForwardRef(DialogActions)
                                classes={
                                  Object {
                                    "root": "MuiDialogActions-root",
                                    "spacing": "MuiDialogActions-spacing",
                                  }
                                }
                              >
                                <div
                                  className="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <styled.p>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kgoBCf",
                                            "isStatic": false,
                                            "lastClassName": "kTmjno",
                                            "rules": Array [
                                              "
  margin-left: 14px;
  color: #404042;
  font-size: 16px;
  font-weight: 400;
  a {
    color: #f35c2b;
    text-decoration: none;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.p",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kgoBCf",
                                          "target": "p",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <p
                                        className="sc-kgoBCf kTmjno"
                                      >
                                        ENQUIRY_DIALOG_NOTICE
                                         
                                        <Link
                                          to="/en-no/terms"
                                        />
                                         
                                        ENQUIRY_DIALOG_NOTICE_AND
                                         
                                        <Link
                                          to="/en-no/privacy"
                                        />
                                      </p>
                                    </StyledComponent>
                                  </styled.p>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-gzVnrw",
                                            "isStatic": false,
                                            "lastClassName": "eSYWWv",
                                            "rules": Array [
                                              "
  margin: 10px 15px;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-gzVnrw",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-gzVnrw eSYWWv"
                                      >
                                        <Styled(styled.button)
                                          autoFocus={true}
                                          color="primary"
                                          data-auto="submit-enquiry-dialog-fixed"
                                          data-testid="submit-enquiry-dialog-ok"
                                          id="dialogOK"
                                          onClick={[Function]}
                                        >
                                          <StyledComponent
                                            autoFocus={true}
                                            color="primary"
                                            data-auto="submit-enquiry-dialog-fixed"
                                            data-testid="submit-enquiry-dialog-ok"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "ieMtwM",
                                                  "rules": Array [
                                                    "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                                    "
  background-color: #404042;
  color: #fffff0;
  outline: none;
  text-align: center;
  margin-left: 24px;
",
                                                  ],
                                                },
                                                "displayName": "Styled(styled.button)",
                                                "foldedComponentIds": Array [
                                                  "sc-bZQynM",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="dialogOK"
                                            onClick={[Function]}
                                          >
                                            <button
                                              autoFocus={true}
                                              className="sc-bZQynM sc-dnqmqq ieMtwM"
                                              color="primary"
                                              data-auto="submit-enquiry-dialog-fixed"
                                              data-testid="submit-enquiry-dialog-ok"
                                              id="dialogOK"
                                              onClick={[Function]}
                                            >
                                              ENQUIRY_DIALOG_BUTTON
                                            </button>
                                          </StyledComponent>
                                        </Styled(styled.button)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </ForwardRef(DialogActions)>
                            </WithStyles(ForwardRef(DialogActions))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </Transition>
                </ForwardRef(Fade)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</EnquiryDialogFixed>
`;
