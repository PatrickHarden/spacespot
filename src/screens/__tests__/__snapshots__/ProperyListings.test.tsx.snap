// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shows the building details (enzyme) 1`] = `
<PropertyListings>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <SideEffect(NullComponent)
      defer={true}
      encodeSpecialCharacters={true}
      link={
        Array [
          Object {
            "href": "https://www.spacespot.no//",
            "rel": "canonical",
          },
        ]
      }
      meta={
        Array [
          Object {
            "content": "SEO_DESCRIPTION_LISTING_WITHOUT_LOCATION",
            "name": "description",
          },
        ]
      }
      title="SEO_TITLE_LISTING_WITHOUT_LOCATION"
      titleAttributes={Object {}}
    >
      <NullComponent
        defer={true}
        encodeSpecialCharacters={true}
        link={
          Array [
            Object {
              "href": "https://www.spacespot.no//",
              "rel": "canonical",
            },
          ]
        }
        meta={
          Array [
            Object {
              "content": "SEO_DESCRIPTION_LISTING_WITHOUT_LOCATION",
              "name": "description",
            },
          ]
        }
        title="SEO_TITLE_LISTING_WITHOUT_LOCATION"
        titleAttributes={Object {}}
      />
    </SideEffect(NullComponent)>
  </HelmetWrapper>
  <Header>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gPEVay",
              "isStatic": false,
              "lastClassName": "kIXbXz",
              "rules": Array [
                "
  display: flex;
  overflow: hidden;
  justify-content: space-between;
  align-items: center;
  height: 24px;
  padding: 13px 19px 13px 19px;
  background-color: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gPEVay",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-gPEVay kIXbXz"
        >
          <SessionDialog>
            <WithStyles(ForwardRef(Dialog))
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Dialog)
                classes={
                  Object {
                    "container": "MuiDialog-container",
                    "paper": "MuiDialog-paper",
                    "paperFullScreen": "MuiDialog-paperFullScreen",
                    "paperFullWidth": "MuiDialog-paperFullWidth",
                    "paperScrollBody": "MuiDialog-paperScrollBody",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                    "paperWidthLg": "MuiDialog-paperWidthLg",
                    "paperWidthMd": "MuiDialog-paperWidthMd",
                    "paperWidthSm": "MuiDialog-paperWidthSm",
                    "paperWidthXl": "MuiDialog-paperWidthXl",
                    "paperWidthXs": "MuiDialog-paperWidthXs",
                    "root": "MuiDialog-root",
                    "scrollBody": "MuiDialog-scrollBody",
                    "scrollPaper": "MuiDialog-scrollPaper",
                  }
                }
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Naked": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "defaultProps": undefined,
                      "displayName": "WithStyles(ForwardRef(Backdrop))",
                      "options": Object {
                        "defaultTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        },
                        "name": "MuiBackdrop",
                      },
                      "propTypes": Object {
                        "classes": [Function],
                        "innerRef": [Function],
                      },
                      "render": [Function],
                      "useStyles": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root"
                  closeAfterTransition={true}
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  onClose={[Function]}
                  open={false}
                />
              </ForwardRef(Dialog)>
            </WithStyles(ForwardRef(Dialog))>
          </SessionDialog>
          <CookieDialog>
            <WithStyles(ForwardRef(Dialog))
              onClose={[Function]}
              open={true}
            >
              <ForwardRef(Dialog)
                classes={
                  Object {
                    "container": "MuiDialog-container",
                    "paper": "MuiDialog-paper",
                    "paperFullScreen": "MuiDialog-paperFullScreen",
                    "paperFullWidth": "MuiDialog-paperFullWidth",
                    "paperScrollBody": "MuiDialog-paperScrollBody",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                    "paperWidthLg": "MuiDialog-paperWidthLg",
                    "paperWidthMd": "MuiDialog-paperWidthMd",
                    "paperWidthSm": "MuiDialog-paperWidthSm",
                    "paperWidthXl": "MuiDialog-paperWidthXl",
                    "paperWidthXs": "MuiDialog-paperWidthXs",
                    "root": "MuiDialog-root",
                    "scrollBody": "MuiDialog-scrollBody",
                    "scrollPaper": "MuiDialog-scrollPaper",
                  }
                }
                onClose={[Function]}
                open={true}
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Naked": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "defaultProps": undefined,
                      "displayName": "WithStyles(ForwardRef(Backdrop))",
                      "options": Object {
                        "defaultTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        },
                        "name": "MuiBackdrop",
                      },
                      "propTypes": Object {
                        "classes": [Function],
                        "innerRef": [Function],
                      },
                      "render": [Function],
                      "useStyles": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root"
                  closeAfterTransition={true}
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  onClose={[Function]}
                  open={true}
                >
                  <ForwardRef(Portal)
                    disablePortal={false}
                  >
                    <Portal
                      containerInfo={
                        <body
                          style="padding-right: 0px; overflow: hidden;"
                        >
                          <div
                            class="MuiDialog-root"
                            role="presentation"
                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                          >
                            <div
                              aria-hidden="true"
                              class="MuiBackdrop-root"
                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                            />
                            <div
                              data-test="sentinelStart"
                              tabindex="0"
                            />
                            <div
                              class="MuiDialog-container MuiDialog-scrollPaper"
                              role="none presentation"
                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                              tabindex="-1"
                            >
                              <div
                                class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                role="dialog"
                              >
                                <div
                                  class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                >
                                  <h2
                                    class="MuiTypography-root MuiTypography-h6"
                                  >
                                    <img
                                      alt="cookie"
                                      src="cookie.svg"
                                    />
                                    COOKIE_TITLE
                                  </h2>
                                </div>
                                <div
                                  class="MuiDialogContent-root sc-htoDjs hOVInI"
                                >
                                  <div
                                    class="sc-dnqmqq cTMciD"
                                  />
                                </div>
                                <div
                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <div
                                    class="sc-gzVnrw dfuvhJ"
                                  >
                                    <button
                                      class="sc-bwzfXH sc-gZMcBi fbqngS"
                                      color="primary"
                                      id="cookieDialogOK"
                                    >
                                      COOKIE_ACCEPT
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              data-test="sentinelEnd"
                              tabindex="0"
                            />
                          </div>
                        </body>
                      }
                    >
                      <div
                        className="MuiDialog-root"
                        onKeyDown={[Function]}
                        role="presentation"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1300,
                          }
                        }
                      >
                        <WithStyles(ForwardRef(Backdrop))
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Backdrop)
                            classes={
                              Object {
                                "invisible": "MuiBackdrop-invisible",
                                "root": "MuiBackdrop-root",
                              }
                            }
                            onClick={[Function]}
                            open={true}
                            transitionDuration={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <ForwardRef(Fade)
                              in={true}
                              onClick={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                            >
                              <Transition
                                appear={true}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onClick={[Function]}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                                unmountOnExit={false}
                              >
                                <div
                                  aria-hidden={true}
                                  className="MuiBackdrop-root"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "visibility": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </ForwardRef(Fade)>
                          </ForwardRef(Backdrop)>
                        </WithStyles(ForwardRef(Backdrop))>
                        <TrapFocus
                          disableAutoFocus={false}
                          disableEnforceFocus={false}
                          disableRestoreFocus={false}
                          getDoc={[Function]}
                          isEnabled={[Function]}
                          open={true}
                        >
                          <div
                            data-test="sentinelStart"
                            tabIndex={0}
                          />
                          <ForwardRef(Fade)
                            appear={true}
                            in={true}
                            onEnter={[Function]}
                            onExited={[Function]}
                            role="none presentation"
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              role="none presentation"
                              tabIndex="-1"
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                className="MuiDialog-container MuiDialog-scrollPaper"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                                role="none presentation"
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                  elevation={24}
                                  role="dialog"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={24}
                                    role="dialog"
                                  >
                                    <div
                                      className="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <Styled(WithStyles(ForwardRef(DialogTitle)))>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "Naked": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "disableTypography": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-iwsKbI",
                                                "isStatic": false,
                                                "lastClassName": "jrVdvK",
                                                "rules": Array [
                                                  "
  text-align: left;
  padding: 30px;
  h2 {
    display: flex;
    color: #000000;
    font-size: 28px;
    font-weight: 400;
    letter-spacing: -0.25px;
    line-height: 35px;
    img {
      margin-right: 10px;
    }
  }
",
                                                ],
                                              },
                                              "displayName": "Styled(WithStyles(ForwardRef(DialogTitle)))",
                                              "foldedComponentIds": Array [],
                                              "options": Object {
                                                "defaultTheme": Object {
                                                  "breakpoints": Object {
                                                    "between": [Function],
                                                    "down": [Function],
                                                    "keys": Array [
                                                      "xs",
                                                      "sm",
                                                      "md",
                                                      "lg",
                                                      "xl",
                                                    ],
                                                    "only": [Function],
                                                    "up": [Function],
                                                    "values": Object {
                                                      "lg": 1280,
                                                      "md": 960,
                                                      "sm": 600,
                                                      "xl": 1920,
                                                      "xs": 0,
                                                    },
                                                    "width": [Function],
                                                  },
                                                  "direction": "ltr",
                                                  "mixins": Object {
                                                    "gutters": [Function],
                                                    "toolbar": Object {
                                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                                        "minHeight": 48,
                                                      },
                                                      "@media (min-width:600px)": Object {
                                                        "minHeight": 64,
                                                      },
                                                      "minHeight": 56,
                                                    },
                                                  },
                                                  "overrides": Object {},
                                                  "palette": Object {
                                                    "action": Object {
                                                      "active": "rgba(0, 0, 0, 0.54)",
                                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                      "hover": "rgba(0, 0, 0, 0.08)",
                                                      "hoverOpacity": 0.08,
                                                      "selected": "rgba(0, 0, 0, 0.14)",
                                                    },
                                                    "augmentColor": [Function],
                                                    "background": Object {
                                                      "default": "#fafafa",
                                                      "paper": "#fff",
                                                    },
                                                    "common": Object {
                                                      "black": "#000",
                                                      "white": "#fff",
                                                    },
                                                    "contrastThreshold": 3,
                                                    "divider": "rgba(0, 0, 0, 0.12)",
                                                    "error": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#d32f2f",
                                                      "light": "#e57373",
                                                      "main": "#f44336",
                                                    },
                                                    "getContrastText": [Function],
                                                    "grey": Object {
                                                      "100": "#f5f5f5",
                                                      "200": "#eeeeee",
                                                      "300": "#e0e0e0",
                                                      "400": "#bdbdbd",
                                                      "50": "#fafafa",
                                                      "500": "#9e9e9e",
                                                      "600": "#757575",
                                                      "700": "#616161",
                                                      "800": "#424242",
                                                      "900": "#212121",
                                                      "A100": "#d5d5d5",
                                                      "A200": "#aaaaaa",
                                                      "A400": "#303030",
                                                      "A700": "#616161",
                                                    },
                                                    "primary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#303f9f",
                                                      "light": "#7986cb",
                                                      "main": "#3f51b5",
                                                    },
                                                    "secondary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#c51162",
                                                      "light": "#ff4081",
                                                      "main": "#f50057",
                                                    },
                                                    "text": Object {
                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                      "hint": "rgba(0, 0, 0, 0.38)",
                                                      "primary": "rgba(0, 0, 0, 0.87)",
                                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                                    },
                                                    "tonalOffset": 0.2,
                                                    "type": "light",
                                                  },
                                                  "props": Object {},
                                                  "shadows": Array [
                                                    "none",
                                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                  ],
                                                  "shape": Object {
                                                    "borderRadius": 4,
                                                  },
                                                  "spacing": [Function],
                                                  "transitions": Object {
                                                    "create": [Function],
                                                    "duration": Object {
                                                      "complex": 375,
                                                      "enteringScreen": 225,
                                                      "leavingScreen": 195,
                                                      "short": 250,
                                                      "shorter": 200,
                                                      "shortest": 150,
                                                      "standard": 300,
                                                    },
                                                    "easing": Object {
                                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                    },
                                                    "getAutoHeightDuration": [Function],
                                                  },
                                                  "typography": Object {
                                                    "body1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.5,
                                                    },
                                                    "body2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.01071em",
                                                      "lineHeight": 1.43,
                                                    },
                                                    "button": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.02857em",
                                                      "lineHeight": 1.75,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "caption": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.03333em",
                                                      "lineHeight": 1.66,
                                                    },
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": 14,
                                                    "fontWeightBold": 700,
                                                    "fontWeightLight": 300,
                                                    "fontWeightMedium": 500,
                                                    "fontWeightRegular": 400,
                                                    "h1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "6rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.01562em",
                                                      "lineHeight": 1.167,
                                                    },
                                                    "h2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3.75rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.00833em",
                                                      "lineHeight": 1.2,
                                                    },
                                                    "h3": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.167,
                                                    },
                                                    "h4": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "2.125rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00735em",
                                                      "lineHeight": 1.235,
                                                    },
                                                    "h5": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.5rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.334,
                                                    },
                                                    "h6": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.25rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.0075em",
                                                      "lineHeight": 1.6,
                                                    },
                                                    "htmlFontSize": 16,
                                                    "overline": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.08333em",
                                                      "lineHeight": 2.66,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "pxToRem": [Function],
                                                    "round": [Function],
                                                    "subtitle1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.75,
                                                    },
                                                    "subtitle2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.00714em",
                                                      "lineHeight": 1.57,
                                                    },
                                                  },
                                                  "zIndex": Object {
                                                    "appBar": 1100,
                                                    "drawer": 1200,
                                                    "mobileStepper": 1000,
                                                    "modal": 1300,
                                                    "snackbar": 1400,
                                                    "speedDial": 1050,
                                                    "tooltip": 1500,
                                                  },
                                                },
                                                "name": "MuiDialogTitle",
                                              },
                                              "propTypes": Object {
                                                "classes": [Function],
                                                "innerRef": [Function],
                                              },
                                              "render": [Function],
                                              "styledComponentId": "sc-iwsKbI",
                                              "target": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "Naked": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disableTypography": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "defaultProps": undefined,
                                                "displayName": "WithStyles(ForwardRef(DialogTitle))",
                                                "options": Object {
                                                  "defaultTheme": Object {
                                                    "breakpoints": Object {
                                                      "between": [Function],
                                                      "down": [Function],
                                                      "keys": Array [
                                                        "xs",
                                                        "sm",
                                                        "md",
                                                        "lg",
                                                        "xl",
                                                      ],
                                                      "only": [Function],
                                                      "up": [Function],
                                                      "values": Object {
                                                        "lg": 1280,
                                                        "md": 960,
                                                        "sm": 600,
                                                        "xl": 1920,
                                                        "xs": 0,
                                                      },
                                                      "width": [Function],
                                                    },
                                                    "direction": "ltr",
                                                    "mixins": Object {
                                                      "gutters": [Function],
                                                      "toolbar": Object {
                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                          "minHeight": 48,
                                                        },
                                                        "@media (min-width:600px)": Object {
                                                          "minHeight": 64,
                                                        },
                                                        "minHeight": 56,
                                                      },
                                                    },
                                                    "overrides": Object {},
                                                    "palette": Object {
                                                      "action": Object {
                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                        "hoverOpacity": 0.08,
                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                      },
                                                      "augmentColor": [Function],
                                                      "background": Object {
                                                        "default": "#fafafa",
                                                        "paper": "#fff",
                                                      },
                                                      "common": Object {
                                                        "black": "#000",
                                                        "white": "#fff",
                                                      },
                                                      "contrastThreshold": 3,
                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                      "error": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#d32f2f",
                                                        "light": "#e57373",
                                                        "main": "#f44336",
                                                      },
                                                      "getContrastText": [Function],
                                                      "grey": Object {
                                                        "100": "#f5f5f5",
                                                        "200": "#eeeeee",
                                                        "300": "#e0e0e0",
                                                        "400": "#bdbdbd",
                                                        "50": "#fafafa",
                                                        "500": "#9e9e9e",
                                                        "600": "#757575",
                                                        "700": "#616161",
                                                        "800": "#424242",
                                                        "900": "#212121",
                                                        "A100": "#d5d5d5",
                                                        "A200": "#aaaaaa",
                                                        "A400": "#303030",
                                                        "A700": "#616161",
                                                      },
                                                      "primary": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#303f9f",
                                                        "light": "#7986cb",
                                                        "main": "#3f51b5",
                                                      },
                                                      "secondary": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#c51162",
                                                        "light": "#ff4081",
                                                        "main": "#f50057",
                                                      },
                                                      "text": Object {
                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                      },
                                                      "tonalOffset": 0.2,
                                                      "type": "light",
                                                    },
                                                    "props": Object {},
                                                    "shadows": Array [
                                                      "none",
                                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                    ],
                                                    "shape": Object {
                                                      "borderRadius": 4,
                                                    },
                                                    "spacing": [Function],
                                                    "transitions": Object {
                                                      "create": [Function],
                                                      "duration": Object {
                                                        "complex": 375,
                                                        "enteringScreen": 225,
                                                        "leavingScreen": 195,
                                                        "short": 250,
                                                        "shorter": 200,
                                                        "shortest": 150,
                                                        "standard": 300,
                                                      },
                                                      "easing": Object {
                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                      },
                                                      "getAutoHeightDuration": [Function],
                                                    },
                                                    "typography": Object {
                                                      "body1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "body2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.01071em",
                                                        "lineHeight": 1.43,
                                                      },
                                                      "button": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.02857em",
                                                        "lineHeight": 1.75,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "caption": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.03333em",
                                                        "lineHeight": 1.66,
                                                      },
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": 14,
                                                      "fontWeightBold": 700,
                                                      "fontWeightLight": 300,
                                                      "fontWeightMedium": 500,
                                                      "fontWeightRegular": 400,
                                                      "h1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "6rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.01562em",
                                                        "lineHeight": 1.167,
                                                      },
                                                      "h2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3.75rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.00833em",
                                                        "lineHeight": 1.2,
                                                      },
                                                      "h3": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.167,
                                                      },
                                                      "h4": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "2.125rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00735em",
                                                        "lineHeight": 1.235,
                                                      },
                                                      "h5": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.5rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.334,
                                                      },
                                                      "h6": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.25rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.0075em",
                                                        "lineHeight": 1.6,
                                                      },
                                                      "htmlFontSize": 16,
                                                      "overline": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.08333em",
                                                        "lineHeight": 2.66,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "pxToRem": [Function],
                                                      "round": [Function],
                                                      "subtitle1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.75,
                                                      },
                                                      "subtitle2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.00714em",
                                                        "lineHeight": 1.57,
                                                      },
                                                    },
                                                    "zIndex": Object {
                                                      "appBar": 1100,
                                                      "drawer": 1200,
                                                      "mobileStepper": 1000,
                                                      "modal": 1300,
                                                      "snackbar": 1400,
                                                      "speedDial": 1050,
                                                      "tooltip": 1500,
                                                    },
                                                  },
                                                  "name": "MuiDialogTitle",
                                                },
                                                "propTypes": Object {
                                                  "classes": [Function],
                                                  "innerRef": [Function],
                                                },
                                                "render": [Function],
                                                "useStyles": [Function],
                                              },
                                              "toString": [Function],
                                              "useStyles": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <WithStyles(ForwardRef(DialogTitle))
                                            className="sc-iwsKbI jrVdvK"
                                          >
                                            <ForwardRef(DialogTitle)
                                              className="sc-iwsKbI jrVdvK"
                                              classes={
                                                Object {
                                                  "root": "MuiDialogTitle-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h2"
                                                  variant="h6"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h2"
                                                    variant="h6"
                                                  >
                                                    <h2
                                                      className="MuiTypography-root MuiTypography-h6"
                                                    >
                                                      <img
                                                        alt="cookie"
                                                        src="cookie.svg"
                                                      />
                                                      COOKIE_TITLE
                                                    </h2>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </ForwardRef(DialogTitle)>
                                          </WithStyles(ForwardRef(DialogTitle))>
                                        </StyledComponent>
                                      </Styled(WithStyles(ForwardRef(DialogTitle)))>
                                      <Styled(WithStyles(ForwardRef(DialogContent)))>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "Naked": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "dividers": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": false,
                                                "lastClassName": "hOVInI",
                                                "rules": Array [
                                                  "
  padding: 0 30px;
",
                                                ],
                                              },
                                              "displayName": "Styled(WithStyles(ForwardRef(DialogContent)))",
                                              "foldedComponentIds": Array [],
                                              "options": Object {
                                                "defaultTheme": Object {
                                                  "breakpoints": Object {
                                                    "between": [Function],
                                                    "down": [Function],
                                                    "keys": Array [
                                                      "xs",
                                                      "sm",
                                                      "md",
                                                      "lg",
                                                      "xl",
                                                    ],
                                                    "only": [Function],
                                                    "up": [Function],
                                                    "values": Object {
                                                      "lg": 1280,
                                                      "md": 960,
                                                      "sm": 600,
                                                      "xl": 1920,
                                                      "xs": 0,
                                                    },
                                                    "width": [Function],
                                                  },
                                                  "direction": "ltr",
                                                  "mixins": Object {
                                                    "gutters": [Function],
                                                    "toolbar": Object {
                                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                                        "minHeight": 48,
                                                      },
                                                      "@media (min-width:600px)": Object {
                                                        "minHeight": 64,
                                                      },
                                                      "minHeight": 56,
                                                    },
                                                  },
                                                  "overrides": Object {},
                                                  "palette": Object {
                                                    "action": Object {
                                                      "active": "rgba(0, 0, 0, 0.54)",
                                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                      "hover": "rgba(0, 0, 0, 0.08)",
                                                      "hoverOpacity": 0.08,
                                                      "selected": "rgba(0, 0, 0, 0.14)",
                                                    },
                                                    "augmentColor": [Function],
                                                    "background": Object {
                                                      "default": "#fafafa",
                                                      "paper": "#fff",
                                                    },
                                                    "common": Object {
                                                      "black": "#000",
                                                      "white": "#fff",
                                                    },
                                                    "contrastThreshold": 3,
                                                    "divider": "rgba(0, 0, 0, 0.12)",
                                                    "error": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#d32f2f",
                                                      "light": "#e57373",
                                                      "main": "#f44336",
                                                    },
                                                    "getContrastText": [Function],
                                                    "grey": Object {
                                                      "100": "#f5f5f5",
                                                      "200": "#eeeeee",
                                                      "300": "#e0e0e0",
                                                      "400": "#bdbdbd",
                                                      "50": "#fafafa",
                                                      "500": "#9e9e9e",
                                                      "600": "#757575",
                                                      "700": "#616161",
                                                      "800": "#424242",
                                                      "900": "#212121",
                                                      "A100": "#d5d5d5",
                                                      "A200": "#aaaaaa",
                                                      "A400": "#303030",
                                                      "A700": "#616161",
                                                    },
                                                    "primary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#303f9f",
                                                      "light": "#7986cb",
                                                      "main": "#3f51b5",
                                                    },
                                                    "secondary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#c51162",
                                                      "light": "#ff4081",
                                                      "main": "#f50057",
                                                    },
                                                    "text": Object {
                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                      "hint": "rgba(0, 0, 0, 0.38)",
                                                      "primary": "rgba(0, 0, 0, 0.87)",
                                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                                    },
                                                    "tonalOffset": 0.2,
                                                    "type": "light",
                                                  },
                                                  "props": Object {},
                                                  "shadows": Array [
                                                    "none",
                                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                  ],
                                                  "shape": Object {
                                                    "borderRadius": 4,
                                                  },
                                                  "spacing": [Function],
                                                  "transitions": Object {
                                                    "create": [Function],
                                                    "duration": Object {
                                                      "complex": 375,
                                                      "enteringScreen": 225,
                                                      "leavingScreen": 195,
                                                      "short": 250,
                                                      "shorter": 200,
                                                      "shortest": 150,
                                                      "standard": 300,
                                                    },
                                                    "easing": Object {
                                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                    },
                                                    "getAutoHeightDuration": [Function],
                                                  },
                                                  "typography": Object {
                                                    "body1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.5,
                                                    },
                                                    "body2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.01071em",
                                                      "lineHeight": 1.43,
                                                    },
                                                    "button": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.02857em",
                                                      "lineHeight": 1.75,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "caption": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.03333em",
                                                      "lineHeight": 1.66,
                                                    },
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": 14,
                                                    "fontWeightBold": 700,
                                                    "fontWeightLight": 300,
                                                    "fontWeightMedium": 500,
                                                    "fontWeightRegular": 400,
                                                    "h1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "6rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.01562em",
                                                      "lineHeight": 1.167,
                                                    },
                                                    "h2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3.75rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.00833em",
                                                      "lineHeight": 1.2,
                                                    },
                                                    "h3": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.167,
                                                    },
                                                    "h4": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "2.125rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00735em",
                                                      "lineHeight": 1.235,
                                                    },
                                                    "h5": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.5rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.334,
                                                    },
                                                    "h6": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.25rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.0075em",
                                                      "lineHeight": 1.6,
                                                    },
                                                    "htmlFontSize": 16,
                                                    "overline": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.08333em",
                                                      "lineHeight": 2.66,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "pxToRem": [Function],
                                                    "round": [Function],
                                                    "subtitle1": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.75,
                                                    },
                                                    "subtitle2": Object {
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.00714em",
                                                      "lineHeight": 1.57,
                                                    },
                                                  },
                                                  "zIndex": Object {
                                                    "appBar": 1100,
                                                    "drawer": 1200,
                                                    "mobileStepper": 1000,
                                                    "modal": 1300,
                                                    "snackbar": 1400,
                                                    "speedDial": 1050,
                                                    "tooltip": 1500,
                                                  },
                                                },
                                                "name": "MuiDialogContent",
                                              },
                                              "propTypes": Object {
                                                "classes": [Function],
                                                "innerRef": [Function],
                                              },
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "Naked": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "dividers": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "defaultProps": undefined,
                                                "displayName": "WithStyles(ForwardRef(DialogContent))",
                                                "options": Object {
                                                  "defaultTheme": Object {
                                                    "breakpoints": Object {
                                                      "between": [Function],
                                                      "down": [Function],
                                                      "keys": Array [
                                                        "xs",
                                                        "sm",
                                                        "md",
                                                        "lg",
                                                        "xl",
                                                      ],
                                                      "only": [Function],
                                                      "up": [Function],
                                                      "values": Object {
                                                        "lg": 1280,
                                                        "md": 960,
                                                        "sm": 600,
                                                        "xl": 1920,
                                                        "xs": 0,
                                                      },
                                                      "width": [Function],
                                                    },
                                                    "direction": "ltr",
                                                    "mixins": Object {
                                                      "gutters": [Function],
                                                      "toolbar": Object {
                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                          "minHeight": 48,
                                                        },
                                                        "@media (min-width:600px)": Object {
                                                          "minHeight": 64,
                                                        },
                                                        "minHeight": 56,
                                                      },
                                                    },
                                                    "overrides": Object {},
                                                    "palette": Object {
                                                      "action": Object {
                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                        "hoverOpacity": 0.08,
                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                      },
                                                      "augmentColor": [Function],
                                                      "background": Object {
                                                        "default": "#fafafa",
                                                        "paper": "#fff",
                                                      },
                                                      "common": Object {
                                                        "black": "#000",
                                                        "white": "#fff",
                                                      },
                                                      "contrastThreshold": 3,
                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                      "error": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#d32f2f",
                                                        "light": "#e57373",
                                                        "main": "#f44336",
                                                      },
                                                      "getContrastText": [Function],
                                                      "grey": Object {
                                                        "100": "#f5f5f5",
                                                        "200": "#eeeeee",
                                                        "300": "#e0e0e0",
                                                        "400": "#bdbdbd",
                                                        "50": "#fafafa",
                                                        "500": "#9e9e9e",
                                                        "600": "#757575",
                                                        "700": "#616161",
                                                        "800": "#424242",
                                                        "900": "#212121",
                                                        "A100": "#d5d5d5",
                                                        "A200": "#aaaaaa",
                                                        "A400": "#303030",
                                                        "A700": "#616161",
                                                      },
                                                      "primary": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#303f9f",
                                                        "light": "#7986cb",
                                                        "main": "#3f51b5",
                                                      },
                                                      "secondary": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#c51162",
                                                        "light": "#ff4081",
                                                        "main": "#f50057",
                                                      },
                                                      "text": Object {
                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                      },
                                                      "tonalOffset": 0.2,
                                                      "type": "light",
                                                    },
                                                    "props": Object {},
                                                    "shadows": Array [
                                                      "none",
                                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                    ],
                                                    "shape": Object {
                                                      "borderRadius": 4,
                                                    },
                                                    "spacing": [Function],
                                                    "transitions": Object {
                                                      "create": [Function],
                                                      "duration": Object {
                                                        "complex": 375,
                                                        "enteringScreen": 225,
                                                        "leavingScreen": 195,
                                                        "short": 250,
                                                        "shorter": 200,
                                                        "shortest": 150,
                                                        "standard": 300,
                                                      },
                                                      "easing": Object {
                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                      },
                                                      "getAutoHeightDuration": [Function],
                                                    },
                                                    "typography": Object {
                                                      "body1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "body2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.01071em",
                                                        "lineHeight": 1.43,
                                                      },
                                                      "button": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.02857em",
                                                        "lineHeight": 1.75,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "caption": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.03333em",
                                                        "lineHeight": 1.66,
                                                      },
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": 14,
                                                      "fontWeightBold": 700,
                                                      "fontWeightLight": 300,
                                                      "fontWeightMedium": 500,
                                                      "fontWeightRegular": 400,
                                                      "h1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "6rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.01562em",
                                                        "lineHeight": 1.167,
                                                      },
                                                      "h2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3.75rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.00833em",
                                                        "lineHeight": 1.2,
                                                      },
                                                      "h3": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.167,
                                                      },
                                                      "h4": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "2.125rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00735em",
                                                        "lineHeight": 1.235,
                                                      },
                                                      "h5": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.5rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.334,
                                                      },
                                                      "h6": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.25rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.0075em",
                                                        "lineHeight": 1.6,
                                                      },
                                                      "htmlFontSize": 16,
                                                      "overline": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.08333em",
                                                        "lineHeight": 2.66,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "pxToRem": [Function],
                                                      "round": [Function],
                                                      "subtitle1": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.75,
                                                      },
                                                      "subtitle2": Object {
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.00714em",
                                                        "lineHeight": 1.57,
                                                      },
                                                    },
                                                    "zIndex": Object {
                                                      "appBar": 1100,
                                                      "drawer": 1200,
                                                      "mobileStepper": 1000,
                                                      "modal": 1300,
                                                      "snackbar": 1400,
                                                      "speedDial": 1050,
                                                      "tooltip": 1500,
                                                    },
                                                  },
                                                  "name": "MuiDialogContent",
                                                },
                                                "propTypes": Object {
                                                  "classes": [Function],
                                                  "innerRef": [Function],
                                                },
                                                "render": [Function],
                                                "useStyles": [Function],
                                              },
                                              "toString": [Function],
                                              "useStyles": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <WithStyles(ForwardRef(DialogContent))
                                            className="sc-htoDjs hOVInI"
                                          >
                                            <ForwardRef(DialogContent)
                                              className="sc-htoDjs hOVInI"
                                              classes={
                                                Object {
                                                  "dividers": "MuiDialogContent-dividers",
                                                  "root": "MuiDialogContent-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiDialogContent-root sc-htoDjs hOVInI"
                                              >
                                                <styled.div
                                                  dangerouslySetInnerHTML={
                                                    Object {
                                                      "__html": "",
                                                    }
                                                  }
                                                >
                                                  <StyledComponent
                                                    dangerouslySetInnerHTML={
                                                      Object {
                                                        "__html": "",
                                                      }
                                                    }
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-dnqmqq",
                                                          "isStatic": false,
                                                          "lastClassName": "cTMciD",
                                                          "rules": Array [
                                                            "
  p {
    color: black;
    margin: 0;
    font-size: 16px;
    font-weight: 400;
    max-width: 500px;
  }
  a {
    text-decoration: none;
    color: #4fbbd8;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-dnqmqq",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-dnqmqq cTMciD"
                                                      dangerouslySetInnerHTML={
                                                        Object {
                                                          "__html": "",
                                                        }
                                                      }
                                                    />
                                                  </StyledComponent>
                                                </styled.div>
                                              </div>
                                            </ForwardRef(DialogContent)>
                                          </WithStyles(ForwardRef(DialogContent))>
                                        </StyledComponent>
                                      </Styled(WithStyles(ForwardRef(DialogContent)))>
                                      <WithStyles(ForwardRef(DialogActions))>
                                        <ForwardRef(DialogActions)
                                          classes={
                                            Object {
                                              "root": "MuiDialogActions-root",
                                              "spacing": "MuiDialogActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiDialogActions-root MuiDialogActions-spacing"
                                          >
                                            <styled.div>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "dfuvhJ",
                                                      "rules": Array [
                                                        "
  padding: 30px 22px;
  @media ",
                                                        "(max-width: 767px)",
                                                        " {
    width: 100%;
  }
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="sc-gzVnrw dfuvhJ"
                                                >
                                                  <Styled(styled.button)
                                                    autoFocus={true}
                                                    color="primary"
                                                    id="cookieDialogOK"
                                                    onClick={[Function]}
                                                  >
                                                    <StyledComponent
                                                      autoFocus={true}
                                                      color="primary"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-gZMcBi",
                                                            "isStatic": false,
                                                            "lastClassName": "fbqngS",
                                                            "rules": Array [
                                                              "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                                              "
  background: #404042;
  outline: none;
  @media ",
                                                              "(max-width: 767px)",
                                                              " {
    width: 100%;
  }
",
                                                            ],
                                                          },
                                                          "displayName": "Styled(styled.button)",
                                                          "foldedComponentIds": Array [
                                                            "sc-bwzfXH",
                                                          ],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-gZMcBi",
                                                          "target": "button",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="cookieDialogOK"
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        autoFocus={true}
                                                        className="sc-bwzfXH sc-gZMcBi fbqngS"
                                                        color="primary"
                                                        id="cookieDialogOK"
                                                        onClick={[Function]}
                                                      >
                                                        COOKIE_ACCEPT
                                                      </button>
                                                    </StyledComponent>
                                                  </Styled(styled.button)>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </div>
                                        </ForwardRef(DialogActions)>
                                      </WithStyles(ForwardRef(DialogActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </div>
                            </Transition>
                          </ForwardRef(Fade)>
                          <div
                            data-test="sentinelEnd"
                            tabIndex={0}
                          />
                        </TrapFocus>
                      </div>
                    </Portal>
                  </ForwardRef(Portal)>
                </ForwardRef(Modal)>
              </ForwardRef(Dialog)>
            </WithStyles(ForwardRef(Dialog))>
          </CookieDialog>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-iRbamj",
                    "isStatic": false,
                    "lastClassName": "hcvHvc",
                    "rules": Array [
                      "
  margin-left: 24px;
  height: 28px;
  @media ",
                      "(max-width: 767px)",
                      " {
    margin-left: 0;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-iRbamj",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-iRbamj hcvHvc"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      <img
                        alt="SpaceSpot Logo"
                        height="28px"
                        src="logo.svg"
                      />
                    </a>
                  </LinkAnchor>
                </Link>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.ul>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-Rmtcm",
                    "isStatic": false,
                    "lastClassName": "gdDPHr",
                    "rules": Array [
                      "
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "styled.ul",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-Rmtcm",
                  "target": "ul",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ul
                className="sc-Rmtcm gdDPHr"
              >
                <styled.li>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bRBYWo",
                          "isStatic": false,
                          "lastClassName": "eQTZbY",
                          "rules": Array [
                            "
  position: relative;
  margin-left: 2em;
  white-space: nowrap;
  display: inline-block;
  color: #ffffff;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  a {
    display: flex;
    align-items: center;
    border: 2px solid transparent;
    padding: 4px 5px;
    text-decoration: none;
    transition: 0.3s;
    color: #ffffff;
    outline: none;
    img {
      margin-right: 6px;
    }
    :hover {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
    :focus {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
  }
  @media ",
                            "(max-width: 767px)",
                            " {
    margin-left: 1em;
  }
",
                          ],
                        },
                        "displayName": "styled.li",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bRBYWo",
                        "target": "li",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <li
                      className="sc-bRBYWo eQTZbY"
                    >
                      <Styled(styled.button)
                        data-testid="signin"
                        onClick={[Function]}
                        upperCase={false}
                      >
                        <StyledComponent
                          data-testid="signin"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-fBuWsC",
                                "isStatic": false,
                                "lastClassName": "ljShwJ",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
  text-transform: ",
                                  [Function],
                                  "
  font-size: 16px;
  font-weight: 500;
  color: inherit;
  background: transparent;
  border: none;
  cursor: pointer;
  img {
    margin-right: 6px;
  }
  ",
                                  "
  border-bottom: 2px solid transparent;
  outline: none;
  :hover {
    border-bottom: 2px solid white;
  }
  :focus {
    border-bottom: 2px solid white;
  }
  padding: 8px 5px 7px 5px;
",
                                ],
                              },
                              "displayName": "Styled(styled.button)",
                              "foldedComponentIds": Array [
                                "sc-jhAzac",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-fBuWsC",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          upperCase={false}
                        >
                          <button
                            className="sc-jhAzac sc-fBuWsC ljShwJ"
                            data-testid="signin"
                            onClick={[Function]}
                          >
                            <img
                              alt="sign in"
                              height="23px"
                              src="login.svg"
                            />
                            HEADER_SIGN_IN
                          </button>
                        </StyledComponent>
                      </Styled(styled.button)>
                    </li>
                  </StyledComponent>
                </styled.li>
                <styled.li>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bRBYWo",
                          "isStatic": false,
                          "lastClassName": "eQTZbY",
                          "rules": Array [
                            "
  position: relative;
  margin-left: 2em;
  white-space: nowrap;
  display: inline-block;
  color: #ffffff;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  a {
    display: flex;
    align-items: center;
    border: 2px solid transparent;
    padding: 4px 5px;
    text-decoration: none;
    transition: 0.3s;
    color: #ffffff;
    outline: none;
    img {
      margin-right: 6px;
    }
    :hover {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
    :focus {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
  }
  @media ",
                            "(max-width: 767px)",
                            " {
    margin-left: 1em;
  }
",
                          ],
                        },
                        "displayName": "styled.li",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bRBYWo",
                        "target": "li",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <li
                      className="sc-bRBYWo eQTZbY"
                    >
                      <Styled(styled.button)
                        data-testid="signup"
                        onClick={[Function]}
                        upperCase={false}
                      >
                        <StyledComponent
                          data-testid="signup"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dVhcbM",
                                "isStatic": false,
                                "lastClassName": "kRSQUK",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
  text-transform: ",
                                  [Function],
                                  "
  font-size: 16px;
  font-weight: 500;
  color: inherit;
  background: transparent;
  border: none;
  cursor: pointer;
  img {
    margin-right: 6px;
  }
  ",
                                  "
  border: 1px solid white;
  border-radius: 18px;
  padding: 5px 15px;
  outline: none;
  :hover {
    background-color: rgba(256, 256, 256, 0.15);
  }
  :focus {
    background-color: rgba(256, 256, 256, 0.15);
  }
",
                                ],
                              },
                              "displayName": "Styled(styled.button)",
                              "foldedComponentIds": Array [
                                "sc-jhAzac",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-dVhcbM",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          upperCase={false}
                        >
                          <button
                            className="sc-jhAzac sc-dVhcbM kRSQUK"
                            data-testid="signup"
                            onClick={[Function]}
                          >
                            HEADER_SIGN_UP
                          </button>
                        </StyledComponent>
                      </Styled(styled.button)>
                    </li>
                  </StyledComponent>
                </styled.li>
              </ul>
            </StyledComponent>
          </styled.ul>
        </div>
      </StyledComponent>
    </styled.div>
  </Header>
  <Styled(Filters)
    key="nav-filters"
    onToggleClick={[Function]}
    showMap={true}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bnXvFD",
            "isStatic": false,
            "lastClassName": "cnBuIJ",
            "rules": Array [
              "
  z-index: 5;
  position: sticky;
  top: 0px;
  background: white;
  padding: 0 20px;
",
            ],
          },
          "displayName": "Styled(Filters)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bnXvFD",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onToggleClick={[Function]}
      showMap={true}
    >
      <Filters
        className="sc-bnXvFD cnBuIJ"
        onToggleClick={[Function]}
        showMap={true}
      >
        <styled.div
          className="sc-bnXvFD cnBuIJ"
        >
          <StyledComponent
            className="sc-bnXvFD cnBuIJ"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bbmXgH",
                  "isStatic": false,
                  "lastClassName": "fyrvcD",
                  "rules": Array [
                    "
  border-bottom: solid 1px #ddd;
  display: flex;
  flex-direction: row;
  height: 65px;
  display: flex;
  justify-content: left;
  align-items: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bbmXgH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bbmXgH fyrvcD sc-bnXvFD cnBuIJ"
            >
              <styled.div
                hasIcon={true}
                onClick={[Function]}
                selected={false}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gGBfsJ",
                        "isStatic": false,
                        "lastClassName": "cyAmCz",
                        "rules": Array [
                          "
  position: relative;
  box-sizing: border-box;
  width: auto;
  text-align: center;
  border: ",
                          [Function],
                          ";
  border-radius: 20px;
  cursor: pointer;
  padding: 6px 14px 6px ",
                          [Function],
                          ";
  margin-right: 10px;
  font: 16px 400 #404042;
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  @media ",
                          "(max-width: 767px)",
                          " {
    max-width: 157px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gGBfsJ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hasIcon={true}
                  onClick={[Function]}
                  selected={false}
                >
                  <div
                    className="sc-gGBfsJ kXygFN"
                    onClick={[Function]}
                    selected={false}
                  >
                    FILTERS_WHERE
                    <Styled(Lens)>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-iELTvK",
                              "isStatic": false,
                              "lastClassName": "juxmOo",
                              "rules": Array [
                                "
  position: absolute;
  top: 7px;
  left: 10px;
  height: 20px;
  width: 20px;
",
                              ],
                            },
                            "displayName": "Styled(Lens)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-iELTvK",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <Lens
                          className="sc-iELTvK juxmOo"
                        >
                          <svg
                            className="sc-iELTvK juxmOo"
                            height={50}
                            viewBox="0 0 50 50"
                            width={50}
                          >
                            <title>
                              search
                            </title>
                            <path
                              d="M49.695 48.222L34.48 33.008c3.16-3.508 5.102-8.134 5.102-13.216C39.583 8.879 30.705 0 19.792 0S0 8.879 0 19.792c0 10.913 8.879 19.791 19.792 19.791 5.082 0 9.708-1.942 13.216-5.102l15.214 15.214a1.038 1.038 0 001.473 0 1.041 1.041 0 000-1.473zM19.792 37.5c-9.764 0-17.709-7.944-17.709-17.708 0-9.765 7.945-17.709 17.709-17.709 9.763 0 17.708 7.944 17.708 17.709 0 9.764-7.945 17.708-17.708 17.708z"
                              fill="#000"
                              fillRule="nonzero"
                              stroke="#828286"
                              strokeWidth="3"
                            />
                          </svg>
                        </Lens>
                      </StyledComponent>
                    </Styled(Lens)>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                onClick={[Function]}
                selected={false}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gGBfsJ",
                        "isStatic": false,
                        "lastClassName": "cyAmCz",
                        "rules": Array [
                          "
  position: relative;
  box-sizing: border-box;
  width: auto;
  text-align: center;
  border: ",
                          [Function],
                          ";
  border-radius: 20px;
  cursor: pointer;
  padding: 6px 14px 6px ",
                          [Function],
                          ";
  margin-right: 10px;
  font: 16px 400 #404042;
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  @media ",
                          "(max-width: 767px)",
                          " {
    max-width: 157px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gGBfsJ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  selected={false}
                >
                  <div
                    className="sc-gGBfsJ cyAmCz"
                    onClick={[Function]}
                    selected={false}
                  >
                    FILTERS_DESKS
                  </div>
                </StyledComponent>
              </styled.div>
              <WithStyles(ForwardRef(FormControl))>
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                  >
                    <Styled(WithStyles(ForwardRef(Select)))
                      MenuProps={
                        Object {
                          "MenuListProps": Object {
                            "disablePadding": true,
                          },
                        }
                      }
                      data-testid="FilterSelect-radius"
                      disableUnderline={true}
                      displayEmpty={true}
                      labelId="demo-simple-select-label"
                      onChange={[Function]}
                      selected={false}
                      value={0}
                    >
                      <StyledComponent
                        MenuProps={
                          Object {
                            "MenuListProps": Object {
                              "disablePadding": true,
                            },
                          }
                        }
                        data-testid="FilterSelect-radius"
                        disableUnderline={true}
                        displayEmpty={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "muiName": "Select",
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "displayEmpty": [Function],
                                "id": [Function],
                                "input": [Function],
                                "inputProps": [Function],
                                "labelId": [Function],
                                "labelWidth": [Function],
                                "multiple": [Function],
                                "native": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "renderValue": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cmTdod",
                              "isStatic": false,
                              "lastClassName": "cjWmBx",
                              "rules": Array [
                                "
  margin-right: 10px;

  & .MuiInputBase-input {
    font-size: 16px;
    font-weight: 400;
    color: #404042;
    border-radius: 20px;
    text-align: center;
    border: ",
                                [Function],
                                ";
    padding: 8px 10px;
    text-align: center;
  }
  & svg {
    display: none;
  }
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  & .MuiSelect-select:focus {
    border-radius: 20px;
  }
  .MuiSelect-select.MuiSelect-select {
    padding: 8px;
  }
  .MuiList-padding {
    padding-top: 0;
    padding-bottom: 0;
  }
  padding: 0px;
",
                              ],
                            },
                            "displayName": "Styled(WithStyles(ForwardRef(Select)))",
                            "foldedComponentIds": Array [],
                            "muiName": "Select",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiSelect",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "sc-cmTdod",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "muiName": "Select",
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "displayEmpty": [Function],
                                  "id": [Function],
                                  "input": [Function],
                                  "inputProps": [Function],
                                  "labelId": [Function],
                                  "labelWidth": [Function],
                                  "multiple": [Function],
                                  "native": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "renderValue": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              },
                              "defaultProps": undefined,
                              "displayName": "WithStyles(ForwardRef(Select))",
                              "muiName": "Select",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiSelect",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            },
                            "toString": [Function],
                            "useStyles": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        labelId="demo-simple-select-label"
                        onChange={[Function]}
                        selected={false}
                        value={0}
                      >
                        <WithStyles(ForwardRef(Select))
                          MenuProps={
                            Object {
                              "MenuListProps": Object {
                                "disablePadding": true,
                              },
                            }
                          }
                          className="sc-cmTdod cjWmBx"
                          data-testid="FilterSelect-radius"
                          disableUnderline={true}
                          displayEmpty={true}
                          labelId="demo-simple-select-label"
                          onChange={[Function]}
                          selected={false}
                          value={0}
                        >
                          <ForwardRef(Select)
                            MenuProps={
                              Object {
                                "MenuListProps": Object {
                                  "disablePadding": true,
                                },
                              }
                            }
                            className="sc-cmTdod cjWmBx"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            data-testid="FilterSelect-radius"
                            disableUnderline={true}
                            displayEmpty={true}
                            labelId="demo-simple-select-label"
                            onChange={[Function]}
                            selected={false}
                            value={0}
                          >
                            <WithStyles(ForwardRef(Input))
                              className="sc-cmTdod cjWmBx"
                              data-testid="FilterSelect-radius"
                              disableUnderline={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": Object {
                                    "MenuListProps": Object {
                                      "disablePadding": true,
                                    },
                                  },
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="0"
                                    >
                                      FILTERS_RADIUS
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="0.5"
                                      >
                                        0.5 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="1"
                                      >
                                        1 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="2"
                                      >
                                        2 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="5"
                                      >
                                        5 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="10"
                                      >
                                        10 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="20"
                                      >
                                        20 Km
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    ],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": "demo-simple-select-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              selected={false}
                              value={0}
                            >
                              <ForwardRef(Input)
                                className="sc-cmTdod cjWmBx"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                data-testid="FilterSelect-radius"
                                disableUnderline={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "required": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": Object {
                                      "MenuListProps": Object {
                                        "disablePadding": true,
                                      },
                                    },
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="0"
                                      >
                                        FILTERS_RADIUS
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="0.5"
                                        >
                                          0.5 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="1"
                                        >
                                          1 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="2"
                                        >
                                          2 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="5"
                                        >
                                          5 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="10"
                                        >
                                          10 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="20"
                                        >
                                          20 Km
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      ],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": "demo-simple-select-label",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                selected={false}
                                value={0}
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="sc-cmTdod cjWmBx"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  data-testid="FilterSelect-radius"
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "required": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": Object {
                                        "MenuListProps": Object {
                                          "disablePadding": true,
                                        },
                                      },
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="0"
                                        >
                                          FILTERS_RADIUS
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="0.5"
                                          >
                                            0.5 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="1"
                                          >
                                            1 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="2"
                                          >
                                            2 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="5"
                                          >
                                            5 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="10"
                                          >
                                            10 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="20"
                                          >
                                            20 Km
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        ],
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "displayEmpty": true,
                                      "labelId": "demo-simple-select-label",
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  selected={false}
                                  type="text"
                                  value={0}
                                >
                                  <ForwardRef(InputBase)
                                    className="sc-cmTdod cjWmBx"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    data-testid="FilterSelect-radius"
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "required": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "displayName": "ArrowDropDownIcon",
                                          "muiName": "SvgIcon",
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": Object {
                                          "MenuListProps": Object {
                                            "disablePadding": true,
                                          },
                                        },
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="0"
                                          >
                                            FILTERS_RADIUS
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          Array [
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="0.5"
                                            >
                                              0.5 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="1"
                                            >
                                              1 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="2"
                                            >
                                              2 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="5"
                                            >
                                              5 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="10"
                                            >
                                              10 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="20"
                                            >
                                              20 Km
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          ],
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "displayEmpty": true,
                                        "labelId": "demo-simple-select-label",
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    selected={false}
                                    type="text"
                                    value={0}
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root sc-cmTdod cjWmBx MuiInputBase-formControl MuiInput-formControl"
                                      data-testid="FilterSelect-radius"
                                      onClick={[Function]}
                                      selected={false}
                                    >
                                      <ForwardRef(SelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "displayName": "ArrowDropDownIcon",
                                            "muiName": "SvgIcon",
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        MenuProps={
                                          Object {
                                            "MenuListProps": Object {
                                              "disablePadding": true,
                                            },
                                          }
                                        }
                                        SelectDisplayProps={
                                          Object {
                                            "id": undefined,
                                          }
                                        }
                                        aria-invalid={false}
                                        autoWidth={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        displayEmpty={true}
                                        inputRef={[Function]}
                                        labelId="demo-simple-select-label"
                                        multiple={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        value={0}
                                        variant="standard"
                                      >
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="demo-simple-select-label "
                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          FILTERS_RADIUS
                                        </div>
                                        <input
                                          onAnimationStart={[Function]}
                                          type="hidden"
                                          value={0}
                                        />
                                        <ForwardRef
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                        <WithStyles(ForwardRef(Menu))
                                          MenuListProps={
                                            Object {
                                              "aria-labelledby": "demo-simple-select-label",
                                              "disableListWrap": true,
                                              "disablePadding": true,
                                              "role": "listbox",
                                            }
                                          }
                                          PaperProps={
                                            Object {
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="demo-simple-select-label "
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              FILTERS_RADIUS
                                            </div>
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Menu)
                                            MenuListProps={
                                              Object {
                                                "aria-labelledby": "demo-simple-select-label",
                                                "disableListWrap": true,
                                                "disablePadding": true,
                                                "role": "listbox",
                                              }
                                            }
                                            PaperProps={
                                              Object {
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="demo-simple-select-label "
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                FILTERS_RADIUS
                                              </div>
                                            }
                                            classes={
                                              Object {
                                                "list": "MuiMenu-list",
                                                "paper": "MuiMenu-paper",
                                              }
                                            }
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <WithStyles(ForwardRef(Popover))
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  aria-labelledby="demo-simple-select-label "
                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  FILTERS_RADIUS
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="menu-"
                                              onClose={[Function]}
                                              onEntering={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Popover)
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-haspopup="listbox"
                                                    aria-labelledby="demo-simple-select-label "
                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    FILTERS_RADIUS
                                                  </div>
                                                }
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                classes={
                                                  Object {
                                                    "paper": "MuiPopover-paper",
                                                    "root": "MuiPopover-root",
                                                  }
                                                }
                                                getContentAnchorEl={[Function]}
                                                id="menu-"
                                                onClose={[Function]}
                                                onEntering={[Function]}
                                                open={false}
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <ForwardRef(Modal)
                                                  BackdropProps={
                                                    Object {
                                                      "invisible": true,
                                                    }
                                                  }
                                                  className="MuiPopover-root"
                                                  container={
                                                    <body
                                                      style="padding-right: 0px; overflow: hidden;"
                                                    >
                                                      <div
                                                        class="MuiDialog-root"
                                                        role="presentation"
                                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                      >
                                                        <div
                                                          aria-hidden="true"
                                                          class="MuiBackdrop-root"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                        />
                                                        <div
                                                          data-test="sentinelStart"
                                                          tabindex="0"
                                                        />
                                                        <div
                                                          class="MuiDialog-container MuiDialog-scrollPaper"
                                                          role="none presentation"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                          tabindex="-1"
                                                        >
                                                          <div
                                                            class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                            role="dialog"
                                                          >
                                                            <div
                                                              class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                            >
                                                              <h2
                                                                class="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                <img
                                                                  alt="cookie"
                                                                  src="cookie.svg"
                                                                />
                                                                COOKIE_TITLE
                                                              </h2>
                                                            </div>
                                                            <div
                                                              class="MuiDialogContent-root sc-htoDjs hOVInI"
                                                            >
                                                              <div
                                                                class="sc-dnqmqq cTMciD"
                                                              />
                                                            </div>
                                                            <div
                                                              class="MuiDialogActions-root MuiDialogActions-spacing"
                                                            >
                                                              <div
                                                                class="sc-gzVnrw dfuvhJ"
                                                              >
                                                                <button
                                                                  class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                  color="primary"
                                                                  id="cookieDialogOK"
                                                                >
                                                                  COOKIE_ACCEPT
                                                                </button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </div>
                                                        <div
                                                          data-test="sentinelEnd"
                                                          tabindex="0"
                                                        />
                                                      </div>
                                                    </body>
                                                  }
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                />
                                              </ForwardRef(Popover)>
                                            </WithStyles(ForwardRef(Popover))>
                                          </ForwardRef(Menu)>
                                        </WithStyles(ForwardRef(Menu))>
                                      </ForwardRef(SelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </StyledComponent>
                    </Styled(WithStyles(ForwardRef(Select)))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
              <MuiPickersUtilsProvider
                utils={[Function]}
              >
                <Styled(PickerWithState)
                  autoOk={true}
                  data-testid="date-picker-when"
                  disablePast={true}
                  disableToolbar={true}
                  emptyLabel="FILTERS_MOVE_IN_BY"
                  format="dd/MM/yyyy"
                  id="date-picker-inline"
                  onChange={[Function]}
                  selected={false}
                  value={null}
                  variant="inline"
                >
                  <StyledComponent
                    autoOk={true}
                    data-testid="date-picker-when"
                    disablePast={true}
                    disableToolbar={true}
                    emptyLabel="FILTERS_MOVE_IN_BY"
                    format="dd/MM/yyyy"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-lhVmIH",
                          "isStatic": false,
                          "lastClassName": "YCbnW",
                          "rules": Array [
                            "
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  & .MuiSelect-select:focus {
    background-color: #f4f4f4;
  }
  .MuiInputBase-input {
    font-size: 16px;
    font-weight: 400;
    color: #404042;
    border-radius: 20px;
    text-align: center;
    border: ",
                            [Function],
                            ";
    padding: 8px 10px;
    cursor: pointer;
  }
  & .MuiInput-underline:before,
  .MuiInput-underline:after,
  .MuiInput-underline:hover:not(.Mui-disabled):before {
    border-bottom: white;
  }
  margin-right: 10px;
  width: ",
                            [Function],
                            ";
  padding: 0px;
",
                          ],
                        },
                        "displayName": "Styled(PickerWithState)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-lhVmIH",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="date-picker-inline"
                    onChange={[Function]}
                    selected={false}
                    value={null}
                    variant="inline"
                  >
                    <PickerWithState
                      allowKeyboardControl={true}
                      autoOk={true}
                      className="sc-lhVmIH YCbnW"
                      data-testid="date-picker-when"
                      disablePast={true}
                      disableToolbar={true}
                      emptyLabel="FILTERS_MOVE_IN_BY"
                      format="dd/MM/yyyy"
                      id="date-picker-inline"
                      invalidDateMessage="Invalid Date Format"
                      maxDate={2100-01-01T00:00:00.000Z}
                      maxDateMessage="Date should not be after maximal date"
                      minDate={1900-01-01T00:00:00.000Z}
                      minDateMessage="Date should not be before minimal date"
                      onChange={[Function]}
                      openTo="date"
                      selected={false}
                      value={null}
                      variant="inline"
                      views={
                        Array [
                          "year",
                          "date",
                        ]
                      }
                    >
                      <Wrapper
                        DateInputProps={
                          Object {
                            "inputValue": "FILTERS_MOVE_IN_BY",
                            "openPicker": [Function],
                            "validationError": "",
                          }
                        }
                        InputComponent={[Function]}
                        className="sc-lhVmIH YCbnW"
                        data-testid="date-picker-when"
                        format="dd/MM/yyyy"
                        id="date-picker-inline"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        selected={false}
                        variant="inline"
                      >
                        <InlineWrapper
                          DateInputProps={
                            Object {
                              "inputValue": "FILTERS_MOVE_IN_BY",
                              "openPicker": [Function],
                              "validationError": "",
                            }
                          }
                          InputComponent={[Function]}
                          className="sc-lhVmIH YCbnW"
                          data-testid="date-picker-when"
                          format="dd/MM/yyyy"
                          id="date-picker-inline"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          selected={false}
                        >
                          <PureDateInput
                            className="sc-lhVmIH YCbnW"
                            data-testid="date-picker-when"
                            format="dd/MM/yyyy"
                            id="date-picker-inline"
                            inputRef={
                              Object {
                                "current": <input
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiInput-input"
                                  id="date-picker-inline"
                                  readonly=""
                                  type="text"
                                  value="FILTERS_MOVE_IN_BY"
                                />,
                              }
                            }
                            inputValue="FILTERS_MOVE_IN_BY"
                            openPicker={[Function]}
                            selected={false}
                            validationError=""
                          >
                            <WithStyles(ForwardRef(TextField))
                              InputProps={
                                Object {
                                  "readOnly": true,
                                }
                              }
                              className="sc-lhVmIH YCbnW"
                              data-testid="date-picker-when"
                              error={false}
                              format="dd/MM/yyyy"
                              helperText=""
                              id="date-picker-inline"
                              inputRef={
                                Object {
                                  "current": <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiInput-input"
                                    id="date-picker-inline"
                                    readonly=""
                                    type="text"
                                    value="FILTERS_MOVE_IN_BY"
                                  />,
                                }
                              }
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              selected={false}
                              value="FILTERS_MOVE_IN_BY"
                            >
                              <ForwardRef(TextField)
                                InputProps={
                                  Object {
                                    "readOnly": true,
                                  }
                                }
                                className="sc-lhVmIH YCbnW"
                                classes={
                                  Object {
                                    "root": "MuiTextField-root",
                                  }
                                }
                                data-testid="date-picker-when"
                                error={false}
                                format="dd/MM/yyyy"
                                helperText=""
                                id="date-picker-inline"
                                inputRef={
                                  Object {
                                    "current": <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiInput-input"
                                      id="date-picker-inline"
                                      readonly=""
                                      type="text"
                                      value="FILTERS_MOVE_IN_BY"
                                    />,
                                  }
                                }
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                selected={false}
                                value="FILTERS_MOVE_IN_BY"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  className="MuiTextField-root sc-lhVmIH YCbnW"
                                  color="primary"
                                  data-testid="date-picker-when"
                                  disabled={false}
                                  error={false}
                                  format="dd/MM/yyyy"
                                  fullWidth={false}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  required={false}
                                  selected={false}
                                  variant="standard"
                                >
                                  <ForwardRef(FormControl)
                                    className="MuiTextField-root sc-lhVmIH YCbnW"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    color="primary"
                                    data-testid="date-picker-when"
                                    disabled={false}
                                    error={false}
                                    format="dd/MM/yyyy"
                                    fullWidth={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    required={false}
                                    selected={false}
                                    variant="standard"
                                  >
                                    <div
                                      className="MuiFormControl-root MuiTextField-root sc-lhVmIH YCbnW"
                                      data-testid="date-picker-when"
                                      format="dd/MM/yyyy"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      selected={false}
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        autoFocus={false}
                                        fullWidth={false}
                                        id="date-picker-inline"
                                        inputRef={
                                          Object {
                                            "current": <input
                                              aria-invalid="false"
                                              class="MuiInputBase-input MuiInput-input"
                                              id="date-picker-inline"
                                              readonly=""
                                              type="text"
                                              value="FILTERS_MOVE_IN_BY"
                                            />,
                                          }
                                        }
                                        multiline={false}
                                        readOnly={true}
                                        value="FILTERS_MOVE_IN_BY"
                                      >
                                        <ForwardRef(Input)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          fullWidth={false}
                                          id="date-picker-inline"
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-invalid="false"
                                                class="MuiInputBase-input MuiInput-input"
                                                id="date-picker-inline"
                                                readonly=""
                                                type="text"
                                                value="FILTERS_MOVE_IN_BY"
                                              />,
                                            }
                                          }
                                          multiline={false}
                                          readOnly={true}
                                          value="FILTERS_MOVE_IN_BY"
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            id="date-picker-inline"
                                            inputComponent="input"
                                            inputRef={
                                              Object {
                                                "current": <input
                                                  aria-invalid="false"
                                                  class="MuiInputBase-input MuiInput-input"
                                                  id="date-picker-inline"
                                                  readonly=""
                                                  type="text"
                                                  value="FILTERS_MOVE_IN_BY"
                                                />,
                                              }
                                            }
                                            multiline={false}
                                            readOnly={true}
                                            type="text"
                                            value="FILTERS_MOVE_IN_BY"
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              id="date-picker-inline"
                                              inputComponent="input"
                                              inputRef={
                                                Object {
                                                  "current": <input
                                                    aria-invalid="false"
                                                    class="MuiInputBase-input MuiInput-input"
                                                    id="date-picker-inline"
                                                    readonly=""
                                                    type="text"
                                                    value="FILTERS_MOVE_IN_BY"
                                                  />,
                                                }
                                              }
                                              multiline={false}
                                              readOnly={true}
                                              type="text"
                                              value="FILTERS_MOVE_IN_BY"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                onClick={[Function]}
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  autoFocus={false}
                                                  className="MuiInputBase-input MuiInput-input"
                                                  disabled={false}
                                                  id="date-picker-inline"
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  readOnly={true}
                                                  required={false}
                                                  type="text"
                                                  value="FILTERS_MOVE_IN_BY"
                                                />
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </ForwardRef(TextField)>
                            </WithStyles(ForwardRef(TextField))>
                          </PureDateInput>
                          <WithStyles(ForwardRef(Popover))
                            anchorEl={
                              <input
                                aria-invalid="false"
                                class="MuiInputBase-input MuiInput-input"
                                id="date-picker-inline"
                                readonly=""
                                type="text"
                                value="FILTERS_MOVE_IN_BY"
                              />
                            }
                            anchorOrigin={
                              Object {
                                "horizontal": "center",
                                "vertical": "bottom",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "center",
                                "vertical": "top",
                              }
                            }
                          >
                            <ForwardRef(Popover)
                              anchorEl={
                                <input
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiInput-input"
                                  id="date-picker-inline"
                                  readonly=""
                                  type="text"
                                  value="FILTERS_MOVE_IN_BY"
                                />
                              }
                              anchorOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "bottom",
                                }
                              }
                              classes={
                                Object {
                                  "paper": "MuiPopover-paper",
                                  "root": "MuiPopover-root",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "top",
                                }
                              }
                            >
                              <ForwardRef(Modal)
                                BackdropProps={
                                  Object {
                                    "invisible": true,
                                  }
                                }
                                className="MuiPopover-root"
                                container={
                                  <body
                                    style="padding-right: 0px; overflow: hidden;"
                                  >
                                    <div
                                      class="MuiDialog-root"
                                      role="presentation"
                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                    >
                                      <div
                                        aria-hidden="true"
                                        class="MuiBackdrop-root"
                                        style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                      />
                                      <div
                                        data-test="sentinelStart"
                                        tabindex="0"
                                      />
                                      <div
                                        class="MuiDialog-container MuiDialog-scrollPaper"
                                        role="none presentation"
                                        style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                        tabindex="-1"
                                      >
                                        <div
                                          class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                          role="dialog"
                                        >
                                          <div
                                            class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                          >
                                            <h2
                                              class="MuiTypography-root MuiTypography-h6"
                                            >
                                              <img
                                                alt="cookie"
                                                src="cookie.svg"
                                              />
                                              COOKIE_TITLE
                                            </h2>
                                          </div>
                                          <div
                                            class="MuiDialogContent-root sc-htoDjs hOVInI"
                                          >
                                            <div
                                              class="sc-dnqmqq cTMciD"
                                            />
                                          </div>
                                          <div
                                            class="MuiDialogActions-root MuiDialogActions-spacing"
                                          >
                                            <div
                                              class="sc-gzVnrw dfuvhJ"
                                            >
                                              <button
                                                class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                color="primary"
                                                id="cookieDialogOK"
                                              >
                                                COOKIE_ACCEPT
                                              </button>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        data-test="sentinelEnd"
                                        tabindex="0"
                                      />
                                    </div>
                                  </body>
                                }
                                onClose={[Function]}
                                open={false}
                              />
                            </ForwardRef(Popover)>
                          </WithStyles(ForwardRef(Popover))>
                        </InlineWrapper>
                      </Wrapper>
                    </PickerWithState>
                  </StyledComponent>
                </Styled(PickerWithState)>
              </MuiPickersUtilsProvider>
              <WithStyles(ForwardRef(FormControl))>
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                  >
                    <Styled(WithStyles(ForwardRef(Select)))
                      MenuProps={
                        Object {
                          "MenuListProps": Object {
                            "disablePadding": true,
                          },
                        }
                      }
                      data-testid="FilterSelect-radius"
                      disableUnderline={true}
                      displayEmpty={true}
                      labelId="demo-simple-select-label"
                      onChange={[Function]}
                      selected={false}
                      value={0}
                    >
                      <StyledComponent
                        MenuProps={
                          Object {
                            "MenuListProps": Object {
                              "disablePadding": true,
                            },
                          }
                        }
                        data-testid="FilterSelect-radius"
                        disableUnderline={true}
                        displayEmpty={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "muiName": "Select",
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "displayEmpty": [Function],
                                "id": [Function],
                                "input": [Function],
                                "inputProps": [Function],
                                "labelId": [Function],
                                "labelWidth": [Function],
                                "multiple": [Function],
                                "native": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "renderValue": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cmTdod",
                              "isStatic": false,
                              "lastClassName": "cjWmBx",
                              "rules": Array [
                                "
  margin-right: 10px;

  & .MuiInputBase-input {
    font-size: 16px;
    font-weight: 400;
    color: #404042;
    border-radius: 20px;
    text-align: center;
    border: ",
                                [Function],
                                ";
    padding: 8px 10px;
    text-align: center;
  }
  & svg {
    display: none;
  }
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  & .MuiSelect-select:focus {
    border-radius: 20px;
  }
  .MuiSelect-select.MuiSelect-select {
    padding: 8px;
  }
  .MuiList-padding {
    padding-top: 0;
    padding-bottom: 0;
  }
  padding: 0px;
",
                              ],
                            },
                            "displayName": "Styled(WithStyles(ForwardRef(Select)))",
                            "foldedComponentIds": Array [],
                            "muiName": "Select",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiSelect",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "sc-cmTdod",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "muiName": "Select",
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "displayEmpty": [Function],
                                  "id": [Function],
                                  "input": [Function],
                                  "inputProps": [Function],
                                  "labelId": [Function],
                                  "labelWidth": [Function],
                                  "multiple": [Function],
                                  "native": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "renderValue": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              },
                              "defaultProps": undefined,
                              "displayName": "WithStyles(ForwardRef(Select))",
                              "muiName": "Select",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiSelect",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            },
                            "toString": [Function],
                            "useStyles": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        labelId="demo-simple-select-label"
                        onChange={[Function]}
                        selected={false}
                        value={0}
                      >
                        <WithStyles(ForwardRef(Select))
                          MenuProps={
                            Object {
                              "MenuListProps": Object {
                                "disablePadding": true,
                              },
                            }
                          }
                          className="sc-cmTdod cjWmBx"
                          data-testid="FilterSelect-radius"
                          disableUnderline={true}
                          displayEmpty={true}
                          labelId="demo-simple-select-label"
                          onChange={[Function]}
                          selected={false}
                          value={0}
                        >
                          <ForwardRef(Select)
                            MenuProps={
                              Object {
                                "MenuListProps": Object {
                                  "disablePadding": true,
                                },
                              }
                            }
                            className="sc-cmTdod cjWmBx"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            data-testid="FilterSelect-radius"
                            disableUnderline={true}
                            displayEmpty={true}
                            labelId="demo-simple-select-label"
                            onChange={[Function]}
                            selected={false}
                            value={0}
                          >
                            <WithStyles(ForwardRef(Input))
                              className="sc-cmTdod cjWmBx"
                              data-testid="FilterSelect-radius"
                              disableUnderline={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": Object {
                                    "MenuListProps": Object {
                                      "disablePadding": true,
                                    },
                                  },
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="0"
                                    >
                                      FILTERS_LENGTH
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value={6}
                                      >
                                        1-6 FILTERS_LENGTH_VALUES
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value={12}
                                      >
                                        6-12 FILTERS_LENGTH_VALUES
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value={24}
                                      >
                                        12-24 FILTERS_LENGTH_VALUES
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value={48}
                                      >
                                        +24 FILTERS_LENGTH_VALUES
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    ],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": "demo-simple-select-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              selected={false}
                              value={0}
                            >
                              <ForwardRef(Input)
                                className="sc-cmTdod cjWmBx"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                data-testid="FilterSelect-radius"
                                disableUnderline={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "required": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": Object {
                                      "MenuListProps": Object {
                                        "disablePadding": true,
                                      },
                                    },
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="0"
                                      >
                                        FILTERS_LENGTH
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value={6}
                                        >
                                          1-6 FILTERS_LENGTH_VALUES
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value={12}
                                        >
                                          6-12 FILTERS_LENGTH_VALUES
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value={24}
                                        >
                                          12-24 FILTERS_LENGTH_VALUES
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value={48}
                                        >
                                          +24 FILTERS_LENGTH_VALUES
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      ],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": "demo-simple-select-label",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                selected={false}
                                value={0}
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="sc-cmTdod cjWmBx"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  data-testid="FilterSelect-radius"
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "required": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": Object {
                                        "MenuListProps": Object {
                                          "disablePadding": true,
                                        },
                                      },
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="0"
                                        >
                                          FILTERS_LENGTH
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value={6}
                                          >
                                            1-6 FILTERS_LENGTH_VALUES
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value={12}
                                          >
                                            6-12 FILTERS_LENGTH_VALUES
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value={24}
                                          >
                                            12-24 FILTERS_LENGTH_VALUES
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value={48}
                                          >
                                            +24 FILTERS_LENGTH_VALUES
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        ],
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "displayEmpty": true,
                                      "labelId": "demo-simple-select-label",
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  selected={false}
                                  type="text"
                                  value={0}
                                >
                                  <ForwardRef(InputBase)
                                    className="sc-cmTdod cjWmBx"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    data-testid="FilterSelect-radius"
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "required": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "displayName": "ArrowDropDownIcon",
                                          "muiName": "SvgIcon",
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": Object {
                                          "MenuListProps": Object {
                                            "disablePadding": true,
                                          },
                                        },
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="0"
                                          >
                                            FILTERS_LENGTH
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          Array [
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value={6}
                                            >
                                              1-6 FILTERS_LENGTH_VALUES
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value={12}
                                            >
                                              6-12 FILTERS_LENGTH_VALUES
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value={24}
                                            >
                                              12-24 FILTERS_LENGTH_VALUES
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value={48}
                                            >
                                              +24 FILTERS_LENGTH_VALUES
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          ],
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "displayEmpty": true,
                                        "labelId": "demo-simple-select-label",
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    selected={false}
                                    type="text"
                                    value={0}
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root sc-cmTdod cjWmBx MuiInputBase-formControl MuiInput-formControl"
                                      data-testid="FilterSelect-radius"
                                      onClick={[Function]}
                                      selected={false}
                                    >
                                      <ForwardRef(SelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "displayName": "ArrowDropDownIcon",
                                            "muiName": "SvgIcon",
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        MenuProps={
                                          Object {
                                            "MenuListProps": Object {
                                              "disablePadding": true,
                                            },
                                          }
                                        }
                                        SelectDisplayProps={
                                          Object {
                                            "id": undefined,
                                          }
                                        }
                                        aria-invalid={false}
                                        autoWidth={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        displayEmpty={true}
                                        inputRef={[Function]}
                                        labelId="demo-simple-select-label"
                                        multiple={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        value={0}
                                        variant="standard"
                                      >
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="demo-simple-select-label "
                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          FILTERS_LENGTH
                                        </div>
                                        <input
                                          onAnimationStart={[Function]}
                                          type="hidden"
                                          value={0}
                                        />
                                        <ForwardRef
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                        <WithStyles(ForwardRef(Menu))
                                          MenuListProps={
                                            Object {
                                              "aria-labelledby": "demo-simple-select-label",
                                              "disableListWrap": true,
                                              "disablePadding": true,
                                              "role": "listbox",
                                            }
                                          }
                                          PaperProps={
                                            Object {
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="demo-simple-select-label "
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              FILTERS_LENGTH
                                            </div>
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Menu)
                                            MenuListProps={
                                              Object {
                                                "aria-labelledby": "demo-simple-select-label",
                                                "disableListWrap": true,
                                                "disablePadding": true,
                                                "role": "listbox",
                                              }
                                            }
                                            PaperProps={
                                              Object {
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="demo-simple-select-label "
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                FILTERS_LENGTH
                                              </div>
                                            }
                                            classes={
                                              Object {
                                                "list": "MuiMenu-list",
                                                "paper": "MuiMenu-paper",
                                              }
                                            }
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <WithStyles(ForwardRef(Popover))
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  aria-labelledby="demo-simple-select-label "
                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  FILTERS_LENGTH
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="menu-"
                                              onClose={[Function]}
                                              onEntering={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Popover)
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-haspopup="listbox"
                                                    aria-labelledby="demo-simple-select-label "
                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    FILTERS_LENGTH
                                                  </div>
                                                }
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                classes={
                                                  Object {
                                                    "paper": "MuiPopover-paper",
                                                    "root": "MuiPopover-root",
                                                  }
                                                }
                                                getContentAnchorEl={[Function]}
                                                id="menu-"
                                                onClose={[Function]}
                                                onEntering={[Function]}
                                                open={false}
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <ForwardRef(Modal)
                                                  BackdropProps={
                                                    Object {
                                                      "invisible": true,
                                                    }
                                                  }
                                                  className="MuiPopover-root"
                                                  container={
                                                    <body
                                                      style="padding-right: 0px; overflow: hidden;"
                                                    >
                                                      <div
                                                        class="MuiDialog-root"
                                                        role="presentation"
                                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                      >
                                                        <div
                                                          aria-hidden="true"
                                                          class="MuiBackdrop-root"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                        />
                                                        <div
                                                          data-test="sentinelStart"
                                                          tabindex="0"
                                                        />
                                                        <div
                                                          class="MuiDialog-container MuiDialog-scrollPaper"
                                                          role="none presentation"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                          tabindex="-1"
                                                        >
                                                          <div
                                                            class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                            role="dialog"
                                                          >
                                                            <div
                                                              class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                            >
                                                              <h2
                                                                class="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                <img
                                                                  alt="cookie"
                                                                  src="cookie.svg"
                                                                />
                                                                COOKIE_TITLE
                                                              </h2>
                                                            </div>
                                                            <div
                                                              class="MuiDialogContent-root sc-htoDjs hOVInI"
                                                            >
                                                              <div
                                                                class="sc-dnqmqq cTMciD"
                                                              />
                                                            </div>
                                                            <div
                                                              class="MuiDialogActions-root MuiDialogActions-spacing"
                                                            >
                                                              <div
                                                                class="sc-gzVnrw dfuvhJ"
                                                              >
                                                                <button
                                                                  class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                  color="primary"
                                                                  id="cookieDialogOK"
                                                                >
                                                                  COOKIE_ACCEPT
                                                                </button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </div>
                                                        <div
                                                          data-test="sentinelEnd"
                                                          tabindex="0"
                                                        />
                                                      </div>
                                                    </body>
                                                  }
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                />
                                              </ForwardRef(Popover)>
                                            </WithStyles(ForwardRef(Popover))>
                                          </ForwardRef(Menu)>
                                        </WithStyles(ForwardRef(Menu))>
                                      </ForwardRef(SelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </StyledComponent>
                    </Styled(WithStyles(ForwardRef(Select)))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
              <WithStyles(ForwardRef(FormControl))>
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                  >
                    <Styled(WithStyles(ForwardRef(Select)))
                      MenuProps={
                        Object {
                          "MenuListProps": Object {
                            "disablePadding": true,
                          },
                        }
                      }
                      data-testid="FilterSelect-leaseType"
                      disableUnderline={true}
                      displayEmpty={true}
                      labelId="demo-simple-select-label"
                      onChange={[Function]}
                      selected={false}
                      value="NONE"
                    >
                      <StyledComponent
                        MenuProps={
                          Object {
                            "MenuListProps": Object {
                              "disablePadding": true,
                            },
                          }
                        }
                        data-testid="FilterSelect-leaseType"
                        disableUnderline={true}
                        displayEmpty={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "muiName": "Select",
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "displayEmpty": [Function],
                                "id": [Function],
                                "input": [Function],
                                "inputProps": [Function],
                                "labelId": [Function],
                                "labelWidth": [Function],
                                "multiple": [Function],
                                "native": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "renderValue": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cmTdod",
                              "isStatic": false,
                              "lastClassName": "cjWmBx",
                              "rules": Array [
                                "
  margin-right: 10px;

  & .MuiInputBase-input {
    font-size: 16px;
    font-weight: 400;
    color: #404042;
    border-radius: 20px;
    text-align: center;
    border: ",
                                [Function],
                                ";
    padding: 8px 10px;
    text-align: center;
  }
  & svg {
    display: none;
  }
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  & .MuiSelect-select:focus {
    border-radius: 20px;
  }
  .MuiSelect-select.MuiSelect-select {
    padding: 8px;
  }
  .MuiList-padding {
    padding-top: 0;
    padding-bottom: 0;
  }
  padding: 0px;
",
                              ],
                            },
                            "displayName": "Styled(WithStyles(ForwardRef(Select)))",
                            "foldedComponentIds": Array [],
                            "muiName": "Select",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiSelect",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "sc-cmTdod",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "muiName": "Select",
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "displayEmpty": [Function],
                                  "id": [Function],
                                  "input": [Function],
                                  "inputProps": [Function],
                                  "labelId": [Function],
                                  "labelWidth": [Function],
                                  "multiple": [Function],
                                  "native": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "renderValue": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              },
                              "defaultProps": undefined,
                              "displayName": "WithStyles(ForwardRef(Select))",
                              "muiName": "Select",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiSelect",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            },
                            "toString": [Function],
                            "useStyles": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        labelId="demo-simple-select-label"
                        onChange={[Function]}
                        selected={false}
                        value="NONE"
                      >
                        <WithStyles(ForwardRef(Select))
                          MenuProps={
                            Object {
                              "MenuListProps": Object {
                                "disablePadding": true,
                              },
                            }
                          }
                          className="sc-cmTdod cjWmBx"
                          data-testid="FilterSelect-leaseType"
                          disableUnderline={true}
                          displayEmpty={true}
                          labelId="demo-simple-select-label"
                          onChange={[Function]}
                          selected={false}
                          value="NONE"
                        >
                          <ForwardRef(Select)
                            MenuProps={
                              Object {
                                "MenuListProps": Object {
                                  "disablePadding": true,
                                },
                              }
                            }
                            className="sc-cmTdod cjWmBx"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            data-testid="FilterSelect-leaseType"
                            disableUnderline={true}
                            displayEmpty={true}
                            labelId="demo-simple-select-label"
                            onChange={[Function]}
                            selected={false}
                            value="NONE"
                          >
                            <WithStyles(ForwardRef(Input))
                              className="sc-cmTdod cjWmBx"
                              data-testid="FilterSelect-leaseType"
                              disableUnderline={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": Object {
                                    "MenuListProps": Object {
                                      "disablePadding": true,
                                    },
                                  },
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="NONE"
                                    >
                                      FILTERS_LEASE_TYPE
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="FIXED"
                                    >
                                      FILTERS_LEASE_TYPE_FIXED
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="FLEX"
                                    >
                                      FILTERS_LEASE_TYPE_FLEX
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="BOTH"
                                    >
                                      FILTERS_LEASE_TYPE_BOTH
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": "demo-simple-select-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              selected={false}
                              value="NONE"
                            >
                              <ForwardRef(Input)
                                className="sc-cmTdod cjWmBx"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                data-testid="FilterSelect-leaseType"
                                disableUnderline={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "required": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": Object {
                                      "MenuListProps": Object {
                                        "disablePadding": true,
                                      },
                                    },
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="NONE"
                                      >
                                        FILTERS_LEASE_TYPE
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="FIXED"
                                      >
                                        FILTERS_LEASE_TYPE_FIXED
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="FLEX"
                                      >
                                        FILTERS_LEASE_TYPE_FLEX
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="BOTH"
                                      >
                                        FILTERS_LEASE_TYPE_BOTH
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": "demo-simple-select-label",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                selected={false}
                                value="NONE"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="sc-cmTdod cjWmBx"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  data-testid="FilterSelect-leaseType"
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "required": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": Object {
                                        "MenuListProps": Object {
                                          "disablePadding": true,
                                        },
                                      },
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="NONE"
                                        >
                                          FILTERS_LEASE_TYPE
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="FIXED"
                                        >
                                          FILTERS_LEASE_TYPE_FIXED
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="FLEX"
                                        >
                                          FILTERS_LEASE_TYPE_FLEX
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="BOTH"
                                        >
                                          FILTERS_LEASE_TYPE_BOTH
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "displayEmpty": true,
                                      "labelId": "demo-simple-select-label",
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  selected={false}
                                  type="text"
                                  value="NONE"
                                >
                                  <ForwardRef(InputBase)
                                    className="sc-cmTdod cjWmBx"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    data-testid="FilterSelect-leaseType"
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "required": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "displayName": "ArrowDropDownIcon",
                                          "muiName": "SvgIcon",
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": Object {
                                          "MenuListProps": Object {
                                            "disablePadding": true,
                                          },
                                        },
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="NONE"
                                          >
                                            FILTERS_LEASE_TYPE
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="FIXED"
                                          >
                                            FILTERS_LEASE_TYPE_FIXED
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="FLEX"
                                          >
                                            FILTERS_LEASE_TYPE_FLEX
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="BOTH"
                                          >
                                            FILTERS_LEASE_TYPE_BOTH
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "displayEmpty": true,
                                        "labelId": "demo-simple-select-label",
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    selected={false}
                                    type="text"
                                    value="NONE"
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root sc-cmTdod cjWmBx MuiInputBase-formControl MuiInput-formControl"
                                      data-testid="FilterSelect-leaseType"
                                      onClick={[Function]}
                                      selected={false}
                                    >
                                      <ForwardRef(SelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "displayName": "ArrowDropDownIcon",
                                            "muiName": "SvgIcon",
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        MenuProps={
                                          Object {
                                            "MenuListProps": Object {
                                              "disablePadding": true,
                                            },
                                          }
                                        }
                                        SelectDisplayProps={
                                          Object {
                                            "id": undefined,
                                          }
                                        }
                                        aria-invalid={false}
                                        autoWidth={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        displayEmpty={true}
                                        inputRef={[Function]}
                                        labelId="demo-simple-select-label"
                                        multiple={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        value="NONE"
                                        variant="standard"
                                      >
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="demo-simple-select-label "
                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          FILTERS_LEASE_TYPE
                                        </div>
                                        <input
                                          onAnimationStart={[Function]}
                                          type="hidden"
                                          value="NONE"
                                        />
                                        <ForwardRef
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                        <WithStyles(ForwardRef(Menu))
                                          MenuListProps={
                                            Object {
                                              "aria-labelledby": "demo-simple-select-label",
                                              "disableListWrap": true,
                                              "disablePadding": true,
                                              "role": "listbox",
                                            }
                                          }
                                          PaperProps={
                                            Object {
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="demo-simple-select-label "
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              FILTERS_LEASE_TYPE
                                            </div>
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Menu)
                                            MenuListProps={
                                              Object {
                                                "aria-labelledby": "demo-simple-select-label",
                                                "disableListWrap": true,
                                                "disablePadding": true,
                                                "role": "listbox",
                                              }
                                            }
                                            PaperProps={
                                              Object {
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="demo-simple-select-label "
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                FILTERS_LEASE_TYPE
                                              </div>
                                            }
                                            classes={
                                              Object {
                                                "list": "MuiMenu-list",
                                                "paper": "MuiMenu-paper",
                                              }
                                            }
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <WithStyles(ForwardRef(Popover))
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  aria-labelledby="demo-simple-select-label "
                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  FILTERS_LEASE_TYPE
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="menu-"
                                              onClose={[Function]}
                                              onEntering={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Popover)
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-haspopup="listbox"
                                                    aria-labelledby="demo-simple-select-label "
                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    FILTERS_LEASE_TYPE
                                                  </div>
                                                }
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                classes={
                                                  Object {
                                                    "paper": "MuiPopover-paper",
                                                    "root": "MuiPopover-root",
                                                  }
                                                }
                                                getContentAnchorEl={[Function]}
                                                id="menu-"
                                                onClose={[Function]}
                                                onEntering={[Function]}
                                                open={false}
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <ForwardRef(Modal)
                                                  BackdropProps={
                                                    Object {
                                                      "invisible": true,
                                                    }
                                                  }
                                                  className="MuiPopover-root"
                                                  container={
                                                    <body
                                                      style="padding-right: 0px; overflow: hidden;"
                                                    >
                                                      <div
                                                        class="MuiDialog-root"
                                                        role="presentation"
                                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                      >
                                                        <div
                                                          aria-hidden="true"
                                                          class="MuiBackdrop-root"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                        />
                                                        <div
                                                          data-test="sentinelStart"
                                                          tabindex="0"
                                                        />
                                                        <div
                                                          class="MuiDialog-container MuiDialog-scrollPaper"
                                                          role="none presentation"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                          tabindex="-1"
                                                        >
                                                          <div
                                                            class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                            role="dialog"
                                                          >
                                                            <div
                                                              class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                            >
                                                              <h2
                                                                class="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                <img
                                                                  alt="cookie"
                                                                  src="cookie.svg"
                                                                />
                                                                COOKIE_TITLE
                                                              </h2>
                                                            </div>
                                                            <div
                                                              class="MuiDialogContent-root sc-htoDjs hOVInI"
                                                            >
                                                              <div
                                                                class="sc-dnqmqq cTMciD"
                                                              />
                                                            </div>
                                                            <div
                                                              class="MuiDialogActions-root MuiDialogActions-spacing"
                                                            >
                                                              <div
                                                                class="sc-gzVnrw dfuvhJ"
                                                              >
                                                                <button
                                                                  class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                  color="primary"
                                                                  id="cookieDialogOK"
                                                                >
                                                                  COOKIE_ACCEPT
                                                                </button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </div>
                                                        <div
                                                          data-test="sentinelEnd"
                                                          tabindex="0"
                                                        />
                                                      </div>
                                                    </body>
                                                  }
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                />
                                              </ForwardRef(Popover)>
                                            </WithStyles(ForwardRef(Popover))>
                                          </ForwardRef(Menu)>
                                        </WithStyles(ForwardRef(Menu))>
                                      </ForwardRef(SelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </StyledComponent>
                    </Styled(WithStyles(ForwardRef(Select)))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
              <WithStyles(ForwardRef(FormControl))>
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                  >
                    <Styled(WithStyles(ForwardRef(Select)))
                      MenuProps={
                        Object {
                          "MenuListProps": Object {
                            "disablePadding": true,
                          },
                        }
                      }
                      data-testid="FilterSelect-maxRent"
                      disableUnderline={true}
                      displayEmpty={true}
                      labelId="demo-simple-select-label"
                      onChange={[Function]}
                      selected={false}
                      value={0}
                    >
                      <StyledComponent
                        MenuProps={
                          Object {
                            "MenuListProps": Object {
                              "disablePadding": true,
                            },
                          }
                        }
                        data-testid="FilterSelect-maxRent"
                        disableUnderline={true}
                        displayEmpty={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "muiName": "Select",
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "displayEmpty": [Function],
                                "id": [Function],
                                "input": [Function],
                                "inputProps": [Function],
                                "labelId": [Function],
                                "labelWidth": [Function],
                                "multiple": [Function],
                                "native": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "renderValue": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            },
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cmTdod",
                              "isStatic": false,
                              "lastClassName": "cjWmBx",
                              "rules": Array [
                                "
  margin-right: 10px;

  & .MuiInputBase-input {
    font-size: 16px;
    font-weight: 400;
    color: #404042;
    border-radius: 20px;
    text-align: center;
    border: ",
                                [Function],
                                ";
    padding: 8px 10px;
    text-align: center;
  }
  & svg {
    display: none;
  }
  &:hover {
    background-color: #f4f4f4;
    border-radius: 20px;
  }
  & .MuiSelect-select:focus {
    border-radius: 20px;
  }
  .MuiSelect-select.MuiSelect-select {
    padding: 8px;
  }
  .MuiList-padding {
    padding-top: 0;
    padding-bottom: 0;
  }
  padding: 0px;
",
                              ],
                            },
                            "displayName": "Styled(WithStyles(ForwardRef(Select)))",
                            "foldedComponentIds": Array [],
                            "muiName": "Select",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiSelect",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "sc-cmTdod",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "muiName": "Select",
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "displayEmpty": [Function],
                                  "id": [Function],
                                  "input": [Function],
                                  "inputProps": [Function],
                                  "labelId": [Function],
                                  "labelWidth": [Function],
                                  "multiple": [Function],
                                  "native": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "renderValue": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              },
                              "defaultProps": undefined,
                              "displayName": "WithStyles(ForwardRef(Select))",
                              "muiName": "Select",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiSelect",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            },
                            "toString": [Function],
                            "useStyles": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        labelId="demo-simple-select-label"
                        onChange={[Function]}
                        selected={false}
                        value={0}
                      >
                        <WithStyles(ForwardRef(Select))
                          MenuProps={
                            Object {
                              "MenuListProps": Object {
                                "disablePadding": true,
                              },
                            }
                          }
                          className="sc-cmTdod cjWmBx"
                          data-testid="FilterSelect-maxRent"
                          disableUnderline={true}
                          displayEmpty={true}
                          labelId="demo-simple-select-label"
                          onChange={[Function]}
                          selected={false}
                          value={0}
                        >
                          <ForwardRef(Select)
                            MenuProps={
                              Object {
                                "MenuListProps": Object {
                                  "disablePadding": true,
                                },
                              }
                            }
                            className="sc-cmTdod cjWmBx"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            data-testid="FilterSelect-maxRent"
                            disableUnderline={true}
                            displayEmpty={true}
                            labelId="demo-simple-select-label"
                            onChange={[Function]}
                            selected={false}
                            value={0}
                          >
                            <WithStyles(ForwardRef(Input))
                              className="sc-cmTdod cjWmBx"
                              data-testid="FilterSelect-maxRent"
                              disableUnderline={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": Object {
                                    "MenuListProps": Object {
                                      "disablePadding": true,
                                    },
                                  },
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                      value="0"
                                    >
                                      FILTERS_MAX_RENT
                                    </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="250"
                                      >
                                        250
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="500"
                                      >
                                        500
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="1000"
                                      >
                                        1000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="2000"
                                      >
                                        2000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="3000"
                                      >
                                        3000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="4000"
                                      >
                                        4000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="5000"
                                      >
                                        5000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="10000"
                                      >
                                        10000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="15000"
                                      >
                                        15000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="20000"
                                      >
                                        20000
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                    ],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": "demo-simple-select-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              selected={false}
                              value={0}
                            >
                              <ForwardRef(Input)
                                className="sc-cmTdod cjWmBx"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                data-testid="FilterSelect-maxRent"
                                disableUnderline={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "required": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": Object {
                                      "MenuListProps": Object {
                                        "disablePadding": true,
                                      },
                                    },
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                        value="0"
                                      >
                                        FILTERS_MAX_RENT
                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="250"
                                        >
                                          250
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="500"
                                        >
                                          500
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="1000"
                                        >
                                          1000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="2000"
                                        >
                                          2000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="3000"
                                        >
                                          3000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="4000"
                                        >
                                          4000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="5000"
                                        >
                                          5000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="10000"
                                        >
                                          10000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="15000"
                                        >
                                          15000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="20000"
                                        >
                                          20000
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                      ],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": "demo-simple-select-label",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                selected={false}
                                value={0}
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="sc-cmTdod cjWmBx"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  data-testid="FilterSelect-maxRent"
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "required": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": Object {
                                        "MenuListProps": Object {
                                          "disablePadding": true,
                                        },
                                      },
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                          value="0"
                                        >
                                          FILTERS_MAX_RENT
                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="250"
                                          >
                                            250
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="500"
                                          >
                                            500
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="1000"
                                          >
                                            1000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="2000"
                                          >
                                            2000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="3000"
                                          >
                                            3000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="4000"
                                          >
                                            4000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="5000"
                                          >
                                            5000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="10000"
                                          >
                                            10000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="15000"
                                          >
                                            15000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="20000"
                                          >
                                            20000
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                        ],
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "displayEmpty": true,
                                      "labelId": "demo-simple-select-label",
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  selected={false}
                                  type="text"
                                  value={0}
                                >
                                  <ForwardRef(InputBase)
                                    className="sc-cmTdod cjWmBx"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    data-testid="FilterSelect-maxRent"
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "required": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "displayName": "ArrowDropDownIcon",
                                          "muiName": "SvgIcon",
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": Object {
                                          "MenuListProps": Object {
                                            "disablePadding": true,
                                          },
                                        },
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                            value="0"
                                          >
                                            FILTERS_MAX_RENT
                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          Array [
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="250"
                                            >
                                              250
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="500"
                                            >
                                              500
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="1000"
                                            >
                                              1000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="2000"
                                            >
                                              2000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="3000"
                                            >
                                              3000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="4000"
                                            >
                                              4000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="5000"
                                            >
                                              5000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="10000"
                                            >
                                              10000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="15000"
                                            >
                                              15000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                              value="20000"
                                            >
                                              20000
                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                          ],
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "displayEmpty": true,
                                        "labelId": "demo-simple-select-label",
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    selected={false}
                                    type="text"
                                    value={0}
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root sc-cmTdod cjWmBx MuiInputBase-formControl MuiInput-formControl"
                                      data-testid="FilterSelect-maxRent"
                                      onClick={[Function]}
                                      selected={false}
                                    >
                                      <ForwardRef(SelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "displayName": "ArrowDropDownIcon",
                                            "muiName": "SvgIcon",
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        MenuProps={
                                          Object {
                                            "MenuListProps": Object {
                                              "disablePadding": true,
                                            },
                                          }
                                        }
                                        SelectDisplayProps={
                                          Object {
                                            "id": undefined,
                                          }
                                        }
                                        aria-invalid={false}
                                        autoWidth={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        disabled={false}
                                        displayEmpty={true}
                                        inputRef={[Function]}
                                        labelId="demo-simple-select-label"
                                        multiple={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        value={0}
                                        variant="standard"
                                      >
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="demo-simple-select-label "
                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          FILTERS_MAX_RENT
                                        </div>
                                        <input
                                          onAnimationStart={[Function]}
                                          type="hidden"
                                          value={0}
                                        />
                                        <ForwardRef
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                        <WithStyles(ForwardRef(Menu))
                                          MenuListProps={
                                            Object {
                                              "aria-labelledby": "demo-simple-select-label",
                                              "disableListWrap": true,
                                              "disablePadding": true,
                                              "role": "listbox",
                                            }
                                          }
                                          PaperProps={
                                            Object {
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="demo-simple-select-label "
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              FILTERS_MAX_RENT
                                            </div>
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Menu)
                                            MenuListProps={
                                              Object {
                                                "aria-labelledby": "demo-simple-select-label",
                                                "disableListWrap": true,
                                                "disablePadding": true,
                                                "role": "listbox",
                                              }
                                            }
                                            PaperProps={
                                              Object {
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="demo-simple-select-label "
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                FILTERS_MAX_RENT
                                              </div>
                                            }
                                            classes={
                                              Object {
                                                "list": "MuiMenu-list",
                                                "paper": "MuiMenu-paper",
                                              }
                                            }
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <WithStyles(ForwardRef(Popover))
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  aria-labelledby="demo-simple-select-label "
                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  FILTERS_MAX_RENT
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="menu-"
                                              onClose={[Function]}
                                              onEntering={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Popover)
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-haspopup="listbox"
                                                    aria-labelledby="demo-simple-select-label "
                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    FILTERS_MAX_RENT
                                                  </div>
                                                }
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                classes={
                                                  Object {
                                                    "paper": "MuiPopover-paper",
                                                    "root": "MuiPopover-root",
                                                  }
                                                }
                                                getContentAnchorEl={[Function]}
                                                id="menu-"
                                                onClose={[Function]}
                                                onEntering={[Function]}
                                                open={false}
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <ForwardRef(Modal)
                                                  BackdropProps={
                                                    Object {
                                                      "invisible": true,
                                                    }
                                                  }
                                                  className="MuiPopover-root"
                                                  container={
                                                    <body
                                                      style="padding-right: 0px; overflow: hidden;"
                                                    >
                                                      <div
                                                        class="MuiDialog-root"
                                                        role="presentation"
                                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                      >
                                                        <div
                                                          aria-hidden="true"
                                                          class="MuiBackdrop-root"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                        />
                                                        <div
                                                          data-test="sentinelStart"
                                                          tabindex="0"
                                                        />
                                                        <div
                                                          class="MuiDialog-container MuiDialog-scrollPaper"
                                                          role="none presentation"
                                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                          tabindex="-1"
                                                        >
                                                          <div
                                                            class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                            role="dialog"
                                                          >
                                                            <div
                                                              class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                            >
                                                              <h2
                                                                class="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                <img
                                                                  alt="cookie"
                                                                  src="cookie.svg"
                                                                />
                                                                COOKIE_TITLE
                                                              </h2>
                                                            </div>
                                                            <div
                                                              class="MuiDialogContent-root sc-htoDjs hOVInI"
                                                            >
                                                              <div
                                                                class="sc-dnqmqq cTMciD"
                                                              />
                                                            </div>
                                                            <div
                                                              class="MuiDialogActions-root MuiDialogActions-spacing"
                                                            >
                                                              <div
                                                                class="sc-gzVnrw dfuvhJ"
                                                              >
                                                                <button
                                                                  class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                  color="primary"
                                                                  id="cookieDialogOK"
                                                                >
                                                                  COOKIE_ACCEPT
                                                                </button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </div>
                                                        <div
                                                          data-test="sentinelEnd"
                                                          tabindex="0"
                                                        />
                                                      </div>
                                                    </body>
                                                  }
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                />
                                              </ForwardRef(Popover)>
                                            </WithStyles(ForwardRef(Popover))>
                                          </ForwardRef(Menu)>
                                        </WithStyles(ForwardRef(Menu))>
                                      </ForwardRef(SelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </StyledComponent>
                    </Styled(WithStyles(ForwardRef(Select)))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
            </div>
          </StyledComponent>
        </styled.div>
      </Filters>
    </StyledComponent>
  </Styled(Filters)>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dymIpo",
            "isStatic": false,
            "lastClassName": "eGQcQY",
            "rules": Array [
              "
  display: flex;
  padding-left: 20px;
  padding-top: 0;
  @media ",
              "(max-width: 767px)",
              " {
    padding-right: 0;
    padding-left: 0;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-dymIpo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-dymIpo eGQcQY"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gFaPwZ",
                  "isStatic": false,
                  "lastClassName": "fMTNfA",
                  "rules": Array [
                    "
  flex: 0 0 620px;
  padding-top: 20px;
  margin-bottom: 80px;
  @media ",
                    "(min-width: 768px) and (max-width: 1365px)",
                    " {
    flex: 0 0 320px;
  }
  @media ",
                    "(max-width: 767px)",
                    " {
    flex: 1 1 auto;
    padding: 20px 20px 0 20px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gFaPwZ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-gFaPwZ fMTNfA"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gJWqzi",
                        "isStatic": false,
                        "lastClassName": "jvueGV",
                        "rules": Array [
                          "
  display: flex;
  align-content: center;
  justify-content: space-between;
  margin-bottom: 20px;
  flex-direction: column;
  @media ",
                          "(min-width: 1366px)",
                          " {
    flex-direction: row;
  }
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gJWqzi",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-gJWqzi jvueGV"
                  >
                    <styled.h1>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-rBLzX",
                              "isStatic": false,
                              "lastClassName": "hawkfv",
                              "rules": Array [
                                "
  margin: 0 0 10px 0;
  font-size: 18px;
  font-weight: 500;
",
                              ],
                            },
                            "displayName": "styled.h1",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-rBLzX",
                            "target": "h1",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <h1
                          className="sc-rBLzX hawkfv"
                        >
                          LIST_SPACES
                        </h1>
                      </StyledComponent>
                    </styled.h1>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bMvGRv",
                              "isStatic": false,
                              "lastClassName": "kUMLNh",
                              "rules": Array [
                                "
  display: flex;
  align-content: center;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bMvGRv",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-bMvGRv kUMLNh"
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-CtfFt",
                                    "isStatic": false,
                                    "lastClassName": "gQFwAQ",
                                    "rules": Array [
                                      "
  margin-right: 5px;
  font-size: 16px;
  color: #828286;
  text-transform: capitalize;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-CtfFt",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-CtfFt gQFwAQ"
                              >
                                PROPCARD_SORT_BY
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-laTMn",
                                    "isStatic": false,
                                    "lastClassName": "hRudVf",
                                    "rules": Array [
                                      "
  font-size: 16px;
  margin-right: 5px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-laTMn",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-laTMn hRudVf"
                              >
                                PROPCARD_MATCH
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <ForwardRef>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                data-auto="List-card-container"
              >
                <StyledComponent
                  data-auto="List-card-container"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hGoxap",
                        "isStatic": false,
                        "lastClassName": "khHcJj",
                        "rules": Array [
                          "
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-gap: 20px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hGoxap",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-hGoxap khHcJj"
                    data-auto="List-card-container"
                  >
                    <PropertyListing
                      selected={null}
                      setSelected={[Function]}
                      spaces={
                        Array [
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "ES",
                              "Common.PostCode": "41001",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Calle Marqués de Paradas, 0, 41001 Sevilla, Spain",
                                  "Common.Locallity": "Sevilla",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-02-21",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 14,
                              },
                            },
                            "Common.AvailableFrom": "2020-02-21",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "bcb86ea5-b504-4abc-b165-864dfc99220e",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 9009,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "EUR",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 15656,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "EUR",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 37.391354,
                              "lon": -6.0037513,
                            },
                            "Common.FitOutOptions": Array [
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 3425,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "EUR",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Desc Fitout",
                                  },
                                ],
                                "Common.Identifier": "fitout",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Medium",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_22",
                              },
                            ],
                            "Common.FloorNumber": 14,
                            "Common.FloorPlans": Array [],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "High Lights",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-20T13:05:15.583624Z",
                            "Common.LastUpdated": "2020-02-20T13:03:45.3851823Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Space Desc",
                              },
                            ],
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 868,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_21",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "SS_SPACE_1.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 167,
                                    "Common.Image.Width": 301,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 355,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 710,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 887,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_22",
                            "Common.PropertySubType": "RetailLand",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 868,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 2320,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-02-20T13:03:45.003271Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Space Head",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 2320,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 8072.58,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 9343.078264426336,
                            "Dynamic.MinDesks": 9343.078264426336,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 868,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "SS_SPACE_1.jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 167,
                                  "Common.Image.Width": 301,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 355,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 710,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 887,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 24972.282918743207,
                            "Dynamic.TotalDesks": 24972.282918743207,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 2320,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "ES",
                              "Common.PostCode": "28046",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Paseo de la Castellana, 196-204, 28046 Madrid, Spain",
                                  "Common.Locallity": "Madrid",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-02-12",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 3,
                              },
                            },
                            "Common.AvailableFrom": "2020-02-12",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "e656598b-dd9d-4a89-932f-255d9cacacf6",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 5000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "EUR",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 600,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "EUR",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 40.462543,
                              "lon": -3.6886625,
                            },
                            "Common.FitOutOptions": Array [],
                            "Common.FloorNumber": 1,
                            "Common.FloorPlans": Array [
                              Object {
                                "Common.ImageCaption": "GIMNASIO (6).jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Image.Height": 1080,
                                    "Common.Image.Width": 1920,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/e6204e25/GIMNASIO%20(6).jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Highlights (optional)
",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-11T10:43:23.6944792Z",
                            "Common.LastUpdated": "2020-02-11T10:41:51.2460075Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Description (optional)
",
                              },
                            ],
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_639",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "SALON_COCINA (9).jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 1080,
                                    "Common.Image.Width": 1920,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 360,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 720,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 900,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                  },
                                ],
                              },
                              Object {
                                "Common.ImageCaption": "PISCINA (7).jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 1080,
                                    "Common.Image.Width": 1920,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 360,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 720,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 900,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                  },
                                ],
                              },
                              Object {
                                "Common.ImageCaption": "DORMITORIOPPAL (10).jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 1080,
                                    "Common.Image.Width": 1920,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 360,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 720,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 900,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_640",
                            "Common.PropertySubType": "OfficeAndRetail",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 500,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 1050,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-02-11T10:41:50.782194Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "CBRe castellana 200",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 1050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 4480.29,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 5381.957525591208,
                            "Dynamic.MinDesks": 5381.957525591208,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "SALON_COCINA (9).jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 1080,
                                  "Common.Image.Width": 1920,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 360,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 720,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 900,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 11302.110803741536,
                            "Dynamic.TotalDesks": 11302.110803741536,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 1050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "Norway",
                              "Common.PostCode": "28036",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Pease de Castallina, 12, 28036 Madrid, España",
                                  "Common.Locallity": "Madrid",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-03-31",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 19,
                              },
                            },
                            "Common.AvailableFrom": "2020-03-31",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "c700793a-1963-4b2b-996f-1939f853cc10",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 50000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 10,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 40.475227,
                              "lon": -3.6768017,
                            },
                            "Common.FitOutOptions": Array [],
                            "Common.FloorNumber": 10,
                            "Common.FloorPlans": Array [
                              Object {
                                "Common.ImageCaption": "SS_SPACE_31_2.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Image.Height": 167,
                                    "Common.Image.Width": 301,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/a2e678d7/SS_SPACE_31_2.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-03-03T13:44:09.4993843Z",
                            "Common.LastUpdated": "2020-03-03T13:42:15.9732977Z",
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_28474",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "SS_SPACE_1.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 167,
                                    "Common.Image.Width": 301,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 355,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 710,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 887,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_23",
                            "Common.PropertySubType": "RetailLand",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 500,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 1050,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-03-03T13:42:15.470683Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Praveen Space SpaceSpot-3",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 1050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 4981.07,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 5381.957525591208,
                            "Dynamic.MinDesks": 5381.957525591208,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "SS_SPACE_1.jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 167,
                                  "Common.Image.Width": 301,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 355,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 710,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 887,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 11302.110803741536,
                            "Dynamic.TotalDesks": 11302.110803741536,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 1050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "Norway",
                              "Common.PostCode": "28036",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "es-ES",
                                  "Common.Line1": "Calle Bambú, 12, 28036 Madrid, España",
                                  "Common.Locallity": "Madrid",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-12-29",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 7,
                              },
                            },
                            "Common.AvailableFrom": "2020-12-29",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "2e2e81fd-6da4-4bba-b2da-526b08e62a84",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 9898,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "GBP",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "sqft",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 6564,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "GBP",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 40.475227,
                              "lon": -3.6768017,
                            },
                            "Common.FitOutOptions": Array [
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 6464,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "GBP",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "fitout desc",
                                  },
                                ],
                                "Common.Identifier": "fitout",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "fitout name",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_888",
                              },
                            ],
                            "Common.FloorNumber": 9,
                            "Common.FloorPlans": Array [],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "Highlights data changed",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-12T09:26:04.2196848Z",
                            "Common.LastUpdated": "2020-02-12T09:24:23.5073279Z",
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 224,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_007",
                            "Common.Photos": Array [],
                            "Common.PrimaryKey": "SS_SPACE_888",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 224,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 446,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-02-12T09:24:22.896450900Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "es-ES",
                                "Common.Text": "Space Headline Changed",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 446,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Walkthrough": "http://sfws",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 9898,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 2411.1169714648613,
                            "Dynamic.MinDesks": 2411.1169714648613,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 224,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": null,
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 4800.706112827357,
                            "Dynamic.TotalDesks": 4800.706112827357,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 446,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "Norway",
                              "Common.PostCode": "28036",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "es-ES",
                                  "Common.Line1": "Calle Bambú, 12, 28036 Madrid, España",
                                  "Common.Locallity": "Madrid",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-10-29",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 6,
                              },
                            },
                            "Common.AvailableFrom": "2020-10-29",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "2e2e81fd-6da4-4bba-b2da-526b08e62a84",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 2190,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "GBP",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "sqft",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 2290,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "GBP",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 40.475227,
                              "lon": -3.6768017,
                            },
                            "Common.FitOutOptions": Array [
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 2452,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "GBP",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "fitout desc",
                                  },
                                ],
                                "Common.Identifier": "fitout",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "fitout name",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_88",
                              },
                            ],
                            "Common.FloorNumber": 4,
                            "Common.FloorPlans": Array [],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "es-ES",
                                    "Common.Text": "Highlights data",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-20T10:46:05.4580914Z",
                            "Common.LastUpdated": "2020-02-20T10:44:59.2693756Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "es-ES",
                                "Common.Text": "Here is small fixed space detail for SS_BUILDING_010",
                              },
                            ],
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 129,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_0004",
                            "Common.Photos": Array [],
                            "Common.PrimaryKey": "SS_SPACE_88",
                            "Common.PropertySubType": "OfficeLand",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 129,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 274,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-02-20T10:44:36.464474Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "es-ES",
                                "Common.Text": "Space Headline SS_BUILDING_010",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 274,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Walkthrough": "http://sf",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 2190,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 1388.5450416025317,
                            "Dynamic.MinDesks": 1388.5450416025317,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 129,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": null,
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 2949.312724023982,
                            "Dynamic.TotalDesks": 2949.312724023982,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 274,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "Norway",
                              "Common.PostCode": "28036",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Pease de Castallina, 12, 28036 Madrid, España",
                                  "Common.Locallity": "Madrid",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-03-31",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 10,
                              },
                            },
                            "Common.AvailableFrom": "2020-03-31",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "c700793a-1963-4b2b-996f-1939f853cc10",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 10000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 11000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 40.475227,
                              "lon": -3.6768017,
                            },
                            "Common.FitOutOptions": Array [
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 9999.99,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 1 Desc",
                                  },
                                ],
                                "Common.Identifier": "1",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 1",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_664",
                              },
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 99999.999,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 2 Desc",
                                  },
                                ],
                                "Common.Identifier": "2",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 2",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_664",
                              },
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 3333,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 3q",
                                  },
                                ],
                                "Common.Identifier": "3",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Customer Fitout 3",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_664",
                              },
                            ],
                            "Common.FloorNumber": 11,
                            "Common.FloorPlans": Array [
                              Object {
                                "Common.ImageCaption": "SS_SPACE_FloorPlan_1.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Image.Height": 195,
                                    "Common.Image.Width": 258,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/3c4eff99/SS_SPACE_FloorPlan_1.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Praveen Space SpaceSpot-4",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-03-13T12:19:16.3639572Z",
                            "Common.LastUpdated": "2020-03-13T12:17:50.8735335Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Praveen Space SpaceSpot-4",
                              },
                            ],
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 1500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_28474",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "SS_SPACE_1.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 167,
                                    "Common.Image.Width": 301,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 355,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 710,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 887,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_664",
                            "Common.PropertySubType": "RetailLand",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 1500,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 3050,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-03-13T12:17:50.272463Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Praveen Space SpaceSpot-4",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 3050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 996.21,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 16145.872576773625,
                            "Dynamic.MinDesks": 16145.872576773625,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 1500,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "SS_SPACE_1.jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 167,
                                  "Common.Image.Width": 301,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 355,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 710,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 887,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 32829.94090610637,
                            "Dynamic.TotalDesks": 32829.94090610637,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 3050,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "NL",
                              "Common.PostCode": "12345",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Amsterdam, Netherlands",
                                  "Common.Locallity": "Amsterdam",
                                },
                              ],
                            },
                            "Common.Availability": Object {
                              "Common.AvailabilityDate": "2020-02-27",
                              "Common.AvailabilityKind": "AvailableFromKnownDate",
                              "Common.MinLeaseTerm": Object {
                                "Common.TermDuration": 5,
                              },
                            },
                            "Common.AvailableFrom": "2020-02-27",
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                            "Common.Charges": Array [
                              Object {
                                "Common.Amount": 10000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "Rent",
                                "Common.ChargeModifer": "PriceIsNegotiable",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                              Object {
                                "Common.Amount": 12000,
                                "Common.AmountKind": "Value",
                                "Common.ChargeKind": "ServiceCharge",
                                "Common.ChargeModifer": "Fixed",
                                "Common.CurrencyCode": "NOK",
                                "Common.Interval": "Monthly",
                                "Common.OnApplication": false,
                                "Common.PerUnit": "Whole",
                                "Common.TaxModifer": "PlusVAT",
                              },
                            ],
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 52.366695,
                              "lon": 4.89454,
                            },
                            "Common.FitOutOptions": Array [
                              Object {
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 200,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "PropertyAccommodation",
                                    "Common.ChargeModifer": "Fixed",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Monthly",
                                    "Common.OnApplication": true,
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.Description": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Fitout description",
                                  },
                                ],
                                "Common.Identifier": "fitout",
                                "Common.Name": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Fitout headline",
                                  },
                                ],
                                "Common.SpaceID": "SS_SPACE_29",
                              },
                            ],
                            "Common.FloorNumber": 15,
                            "Common.FloorPlans": Array [],
                            "Common.FlooredURL": "https://google.com",
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Space Highlights",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-27T06:27:16.6022713Z",
                            "Common.LastUpdated": "2020-02-27T06:25:46.4366002Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Space desc",
                              },
                            ],
                            "Common.MinimumSize": Array [
                              Object {
                                "Common.Size": 1000,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_28",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "398857109.png",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 1520,
                                    "Common.Image.Width": 720,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 480,
                                    "Common.Image.Width": 227,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 960,
                                    "Common.Image.Width": 454,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 1200,
                                    "Common.Image.Width": 568,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_29",
                            "Common.PropertySubType": "OfficeLand",
                            "Common.Sizes": Array [
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 1000,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "MinimumSize",
                              },
                              Object {
                                "Common.Dimensions": Array [
                                  Object {
                                    "Common.Amount": 2200,
                                    "Common.DimensionsUnits": "sqm",
                                  },
                                ],
                                "Common.SizeKind": "TotalSize",
                              },
                            ],
                            "Common.SourceLastupdated": "2020-02-27T06:25:45.927568Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "Space Headline",
                              },
                            ],
                            "Common.TotalSize": Array [
                              Object {
                                "Common.Size": 2200,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Common.UsageType": "Office",
                            "Common.Walkthrough": "https://google.com",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": 996.21,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": 10763.915051182415,
                            "Dynamic.MinDesks": 10763.915051182415,
                            "Dynamic.MinimumSize": Array [
                              Object {
                                "Common.Size": 1000,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "398857109.png",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 1520,
                                  "Common.Image.Width": 720,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 480,
                                  "Common.Image.Width": 227,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 960,
                                  "Common.Image.Width": 454,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 1200,
                                  "Common.Image.Width": 568,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": 23680.613112601317,
                            "Dynamic.TotalDesks": 23680.613112601317,
                            "Dynamic.TotalSize": Array [
                              Object {
                                "Common.Size": 2200,
                                "Common.Units": "sqm",
                              },
                            ],
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "NL",
                              "Common.PostCode": "12345",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Amsterdam, Netherlands",
                                  "Common.Locallity": "Amsterdam",
                                },
                              ],
                            },
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 52.366695,
                              "lon": 4.89454,
                            },
                            "Common.FloorPlans": Array [],
                            "Common.FloorsAndUnits": Array [
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 4,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-28",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 4,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-28",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 400,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "HotDesk",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "HotDesk",
                              },
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 5,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-28",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 5,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-28",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 500,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "FixedDesk",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "FixedDesk",
                              },
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 6,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-28",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 6,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-28",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 600,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "ServicedOffice",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "ServicedOffice",
                              },
                            ],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "Highlights",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-27T10:42:14.2706132Z",
                            "Common.LastUpdated": "2020-02-27T10:40:56.1540577Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "desc",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_28",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "download3.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 194,
                                    "Common.Image.Width": 259,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 479,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 958,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 1198,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_30",
                            "Common.SourceLastupdated": "2020-02-27T10:40:55.431779Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "UAT Building by SS - Flex space",
                              },
                            ],
                            "Common.UsageType": "FlexOffice",
                            "Common.Walkthrough": "https://google.com",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": null,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": "0",
                            "Dynamic.MinDesks": "0",
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "download3.jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 194,
                                  "Common.Image.Width": 259,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 479,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 958,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 1198,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": null,
                            "Dynamic.TotalDesks": null,
                            "Dynamic.UnderOffer": false,
                          },
                          Object {
                            "Common.ActualAddress": Object {
                              "Common.Country": "NL",
                              "Common.PostCode": "12345",
                              "Common.PostalAddresses": Array [
                                Object {
                                  "Common.Language": "en-US",
                                  "Common.Line1": "Amsterdam, Netherlands",
                                  "Common.Locallity": "Amsterdam",
                                },
                              ],
                            },
                            "Common.Brochures": Array [],
                            "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                            "Common.ContactGroup": Object {
                              "Common.GroupType": "AreaOffice",
                            },
                            "Common.Coordinate": Object {
                              "lat": 52.366695,
                              "lon": 4.89454,
                            },
                            "Common.FloorPlans": Array [],
                            "Common.FloorsAndUnits": Array [
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 4,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-29",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 4,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-29",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 400,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "HotDesk",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "HotDesk",
                              },
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 5,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-28",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 5,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-28",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 500,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "FixedDesk",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "FixedDesk",
                              },
                              Object {
                                "Common.Areas": Array [
                                  Object {
                                    "Common.Area": 1,
                                    "Common.MaxArea": 6,
                                    "Common.MinArea": 1,
                                    "Common.Units": "pp",
                                  },
                                ],
                                "Common.Availability": Object {
                                  "Common.AvailabilityDate": "2020-02-28",
                                  "Common.AvailabilityKind": "AvailableFromKnownDate",
                                  "Common.MinLeaseTerm": Object {
                                    "Common.TermDuration": 6,
                                  },
                                },
                                "Common.AvailableFrom": "2020-02-28",
                                "Common.Charges": Array [
                                  Object {
                                    "Common.Amount": 600,
                                    "Common.AmountKind": "Value",
                                    "Common.ChargeKind": "Rent",
                                    "Common.ChargeModifer": "PriceIsNegotiable",
                                    "Common.CurrencyCode": "NOK",
                                    "Common.Interval": "Daily",
                                    "Common.OnApplication": false,
                                    "Common.PerUnit": "unit",
                                    "Common.TaxModifer": "PlusVAT",
                                  },
                                ],
                                "Common.SubdivisionName": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "ServicedOffice",
                                  },
                                ],
                                "Common.Unit.Status": "Available",
                                "Common.Unit.Use": "ServicedOffice",
                              },
                            ],
                            "Common.Highlights": Array [
                              Object {
                                "Common.Highlight": Array [
                                  Object {
                                    "Common.CultureCode": "en-US",
                                    "Common.Text": "flex highlights",
                                  },
                                ],
                              },
                            ],
                            "Common.HomeSite": "no-comm",
                            "Common.IsParent": false,
                            "Common.LastProcessed": "2020-02-27T10:55:10.3725466Z",
                            "Common.LastUpdated": "2020-02-27T10:53:31.6975532Z",
                            "Common.LongDescription": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "flex desc",
                              },
                            ],
                            "Common.ParentProperty": "SS_BUILDING_28",
                            "Common.Photos": Array [
                              Object {
                                "Common.ImageCaption": "download3.jpg",
                                "Common.ImageResources": Array [
                                  Object {
                                    "Common.Breakpoint": "original",
                                    "Common.Image.Height": 194,
                                    "Common.Image.Width": 259,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "small",
                                    "Common.Image.Height": 479,
                                    "Common.Image.Width": 640,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_small.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "medium",
                                    "Common.Image.Height": 958,
                                    "Common.Image.Width": 1280,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_medium.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                  },
                                  Object {
                                    "Common.Breakpoint": "large",
                                    "Common.Image.Height": 1198,
                                    "Common.Image.Width": 1600,
                                    "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_large.jpg",
                                    "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                  },
                                ],
                              },
                            ],
                            "Common.PrimaryKey": "SS_SPACE_32",
                            "Common.SourceLastupdated": "2020-02-27T10:53:31.287163Z",
                            "Common.Strapline": Array [
                              Object {
                                "Common.CultureCode": "en-US",
                                "Common.Text": "flex headline",
                              },
                            ],
                            "Common.UsageType": "FlexOffice",
                            "Common.Walkthrough": "https://google.com",
                            "Common.Website": "https://www.spacespot.com",
                            "Dynamic.DevelopmentOpportunity": false,
                            "Dynamic.FlexCharge": null,
                            "Dynamic.Furnished": "unfurnished",
                            "Dynamic.Has24HourAccess": false,
                            "Dynamic.HasAccessControl": false,
                            "Dynamic.HasBalcony": false,
                            "Dynamic.HasBarCafeteria": false,
                            "Dynamic.HasBicycleRack": false,
                            "Dynamic.HasBreakoutSpace": false,
                            "Dynamic.HasBusinessLounge": false,
                            "Dynamic.HasCleaning": false,
                            "Dynamic.HasCoworkingArea": false,
                            "Dynamic.HasDayCare": false,
                            "Dynamic.HasDoorkeeper": false,
                            "Dynamic.HasElevators": false,
                            "Dynamic.HasFixedDesks": false,
                            "Dynamic.HasFloorsRaised": false,
                            "Dynamic.HasFoodService-Cafeteria": false,
                            "Dynamic.HasFreeMeetingRooms": false,
                            "Dynamic.HasGarden": false,
                            "Dynamic.HasGenerator": false,
                            "Dynamic.HasGym": false,
                            "Dynamic.HasHotDesks": false,
                            "Dynamic.HasLift": false,
                            "Dynamic.HasParking": false,
                            "Dynamic.HasReception": false,
                            "Dynamic.HasRoofTerrace": false,
                            "Dynamic.HasSecurity-24hours/7days": false,
                            "Dynamic.HasServicedOffices": false,
                            "Dynamic.HasShowers": false,
                            "Dynamic.HasStorageArchives": false,
                            "Dynamic.HasSwimmingPool": false,
                            "Dynamic.HasTeaCoffee": false,
                            "Dynamic.HasTerrace": false,
                            "Dynamic.HasWheelchairAccess": false,
                            "Dynamic.HasWheelchairAccessToilets": false,
                            "Dynamic.IsPenthouse": false,
                            "Dynamic.LetUnderOffer": false,
                            "Dynamic.LettingCharge": null,
                            "Dynamic.MaxArea": null,
                            "Dynamic.MinArea": "0",
                            "Dynamic.MinDesks": "0",
                            "Dynamic.NetCharge": null,
                            "Dynamic.NewHome": false,
                            "Dynamic.PrimaryImage": Object {
                              "Common.ImageCaption": "download3.jpg",
                              "Common.ImageResources": Array [
                                Object {
                                  "Common.Breakpoint": "original",
                                  "Common.Image.Height": 194,
                                  "Common.Image.Width": 259,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "small",
                                  "Common.Image.Height": 479,
                                  "Common.Image.Width": 640,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_small.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "medium",
                                  "Common.Image.Height": 958,
                                  "Common.Image.Width": 1280,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_medium.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                },
                                Object {
                                  "Common.Breakpoint": "large",
                                  "Common.Image.Height": 1198,
                                  "Common.Image.Width": 1600,
                                  "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_large.jpg",
                                  "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                },
                              ],
                            },
                            "Dynamic.SalePrice": null,
                            "Dynamic.TotalArea": null,
                            "Dynamic.TotalDesks": null,
                            "Dynamic.UnderOffer": false,
                          },
                        ]
                      }
                    >
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_22"
                        images={
                          Array [
                            Object {
                              "alt": "SS_SPACE_1.jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="0"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="14th PROPCARD_FLOOR"
                        title="Space Head"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_22"
                          images={
                            Array [
                              Object {
                                "alt": "SS_SPACE_1.jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="14th PROPCARD_FLOOR"
                          title="Space Head"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_22"
                            images={
                              Array [
                                Object {
                                  "alt": "SS_SPACE_1.jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="14th PROPCARD_FLOOR"
                            title="Space Head"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_22"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_22"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_22"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "SS_SPACE_1.jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "SS_SPACE_1.jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "SS_SPACE_1.jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Space Head
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          14th PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "ES",
                                                      "Common.PostCode": "41001",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Calle Marqués de Paradas, 0, 41001 Sevilla, Spain",
                                                          "Common.Locallity": "Sevilla",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-02-21",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 14,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-02-21",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "bcb86ea5-b504-4abc-b165-864dfc99220e",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 9009,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "EUR",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 15656,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "EUR",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 37.391354,
                                                      "lon": -6.0037513,
                                                    },
                                                    "Common.FitOutOptions": Array [
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 3425,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "EUR",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Desc Fitout",
                                                          },
                                                        ],
                                                        "Common.Identifier": "fitout",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Medium",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_22",
                                                      },
                                                    ],
                                                    "Common.FloorNumber": 14,
                                                    "Common.FloorPlans": Array [],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "High Lights",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-20T13:05:15.583624Z",
                                                    "Common.LastUpdated": "2020-02-20T13:03:45.3851823Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Space Desc",
                                                      },
                                                    ],
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 868,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_21",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 167,
                                                            "Common.Image.Width": 301,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 355,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 710,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 887,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_22",
                                                    "Common.PropertySubType": "RetailLand",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 868,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 2320,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-02-20T13:03:45.003271Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Space Head",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 2320,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 8072.58,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 9343.078264426336,
                                                    "Dynamic.MinDesks": 9343.078264426336,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 868,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 167,
                                                          "Common.Image.Width": 301,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 355,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 710,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 887,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_22/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 24972.282918743207,
                                                    "Dynamic.TotalDesks": 24972.282918743207,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 2320,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              9,009€
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              58
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_640"
                        images={
                          Array [
                            Object {
                              "alt": "SALON_COCINA (9).jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                            },
                            Object {
                              "alt": "PISCINA (7).jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                            },
                            Object {
                              "alt": "DORMITORIOPPAL (10).jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="1"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="1st PROPCARD_FLOOR"
                        title="CBRe castellana 200"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_640"
                          images={
                            Array [
                              Object {
                                "alt": "SALON_COCINA (9).jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                              },
                              Object {
                                "alt": "PISCINA (7).jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                              },
                              Object {
                                "alt": "DORMITORIOPPAL (10).jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="1st PROPCARD_FLOOR"
                          title="CBRe castellana 200"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_640"
                            images={
                              Array [
                                Object {
                                  "alt": "SALON_COCINA (9).jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                },
                                Object {
                                  "alt": "PISCINA (7).jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                },
                                Object {
                                  "alt": "DORMITORIOPPAL (10).jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="1st PROPCARD_FLOOR"
                            title="CBRe castellana 200"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_640"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_640"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_640"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "SALON_COCINA (9).jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                        },
                                        Object {
                                          "alt": "PISCINA (7).jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                        },
                                        Object {
                                          "alt": "DORMITORIOPPAL (10).jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "SALON_COCINA (9).jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                          },
                                          Object {
                                            "alt": "PISCINA (7).jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                          },
                                          Object {
                                            "alt": "DORMITORIOPPAL (10).jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "SALON_COCINA (9).jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                            },
                                            Object {
                                              "alt": "PISCINA (7).jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                            },
                                            Object {
                                              "alt": "DORMITORIOPPAL (10).jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                    },
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                    },
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={true}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <Styled(styled.div)
                                                        disabled={false}
                                                        onClick={[Function]}
                                                      >
                                                        <StyledComponent
                                                          disabled={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-kPVwWT",
                                                                "isStatic": false,
                                                                "lastClassName": "kQpzwg",
                                                                "rules": Array [
                                                                  "
  position: absolute;
  display: none;
  z-index: ",
                                                                  [Function],
                                                                  ";
  top: calc(50% - 15px);
  box-sizing: border-box;
  padding-top: 5px;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  cursor: pointer;
  background-color: #ffffff77;
  color: #000;
  :hover {
    background-color: #ffffffae;
  }
  text-align: center;
  svg {
    font-size: 20px;
  }
",
                                                                  "
  left: 12px;
  padding-left: 8px;
",
                                                                ],
                                                              },
                                                              "displayName": "Styled(styled.div)",
                                                              "foldedComponentIds": Array [
                                                                "sc-hwwEjo",
                                                              ],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-kPVwWT",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="sc-hwwEjo sc-kPVwWT kQpzwg"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef
                                                              fontSize="small"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                fontSize="small"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  fontSize="small"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </div>
                                                        </StyledComponent>
                                                      </Styled(styled.div)>
                                                      <Styled(styled.div)
                                                        disabled={false}
                                                        onClick={[Function]}
                                                      >
                                                        <StyledComponent
                                                          disabled={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-kfGgVZ",
                                                                "isStatic": false,
                                                                "lastClassName": "bkwopp",
                                                                "rules": Array [
                                                                  "
  position: absolute;
  display: none;
  z-index: ",
                                                                  [Function],
                                                                  ";
  top: calc(50% - 15px);
  box-sizing: border-box;
  padding-top: 5px;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  cursor: pointer;
  background-color: #ffffff77;
  color: #000;
  :hover {
    background-color: #ffffffae;
  }
  text-align: center;
  svg {
    font-size: 20px;
  }
",
                                                                  "
  right: 12px;
  padding-left: 1px;
",
                                                                ],
                                                              },
                                                              "displayName": "Styled(styled.div)",
                                                              "foldedComponentIds": Array [
                                                                "sc-hwwEjo",
                                                              ],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-kfGgVZ",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="sc-hwwEjo sc-kfGgVZ bkwopp"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef
                                                              fontSize="small"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                fontSize="small"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  fontSize="small"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </div>
                                                        </StyledComponent>
                                                      </Styled(styled.div)>
                                                      <Swipeable
                                                        className="image-gallery-swipe"
                                                        delta={0}
                                                        onSwiped={[Function]}
                                                        onSwiping={[Function]}
                                                        preventDefaultTouchmoveEvent={false}
                                                        rotationAngle={0}
                                                        trackMouse={false}
                                                        trackTouch={true}
                                                      >
                                                        <div
                                                          className="image-gallery-swipe"
                                                        >
                                                          <div
                                                            className="image-gallery-slides"
                                                          >
                                                            <div
                                                              className="image-gallery-slide  center "
                                                              key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg"
                                                              onClick={[Function]}
                                                              onFocus={null}
                                                              onKeyUp={[Function]}
                                                              onMouseLeave={null}
                                                              onMouseOver={null}
                                                              onTouchEnd={null}
                                                              onTouchMove={null}
                                                              onTouchStart={null}
                                                              role="button"
                                                              style={
                                                                Object {
                                                                  "MozTransform": "translate3d(0%, 0, 0)",
                                                                  "OTransform": "translate3d(0%, 0, 0)",
                                                                  "WebkitTransform": "translate3d(0%, 0, 0)",
                                                                  "msTransform": "translate3d(0%, 0, 0)",
                                                                  "transform": "translate3d(0%, 0, 0)",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <div>
                                                                <img
                                                                  className="image-gallery-image"
                                                                  onError={[Function]}
                                                                  onLoad={[Function]}
                                                                  src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg"
                                                                />
                                                              </div>
                                                            </div>
                                                            <div
                                                              className="image-gallery-slide  right "
                                                              key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg"
                                                              onClick={[Function]}
                                                              onFocus={null}
                                                              onKeyUp={[Function]}
                                                              onMouseLeave={null}
                                                              onMouseOver={null}
                                                              onTouchEnd={null}
                                                              onTouchMove={null}
                                                              onTouchStart={null}
                                                              role="button"
                                                              style={
                                                                Object {
                                                                  "MozTransform": "translate3d(100%, 0, 0)",
                                                                  "OTransform": "translate3d(100%, 0, 0)",
                                                                  "WebkitTransform": "translate3d(100%, 0, 0)",
                                                                  "msTransform": "translate3d(100%, 0, 0)",
                                                                  "transform": "translate3d(100%, 0, 0)",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <div>
                                                                <img
                                                                  className="image-gallery-image"
                                                                  onError={[Function]}
                                                                  onLoad={[Function]}
                                                                  src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg"
                                                                />
                                                              </div>
                                                            </div>
                                                            <div
                                                              className="image-gallery-slide  left "
                                                              key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg"
                                                              onClick={[Function]}
                                                              onFocus={null}
                                                              onKeyUp={[Function]}
                                                              onMouseLeave={null}
                                                              onMouseOver={null}
                                                              onTouchEnd={null}
                                                              onTouchMove={null}
                                                              onTouchStart={null}
                                                              role="button"
                                                              style={
                                                                Object {
                                                                  "MozTransform": "translate3d(-100%, 0, 0)",
                                                                  "OTransform": "translate3d(-100%, 0, 0)",
                                                                  "WebkitTransform": "translate3d(-100%, 0, 0)",
                                                                  "msTransform": "translate3d(-100%, 0, 0)",
                                                                  "transform": "translate3d(-100%, 0, 0)",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <div>
                                                                <img
                                                                  className="image-gallery-image"
                                                                  onError={[Function]}
                                                                  onLoad={[Function]}
                                                                  src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg"
                                                                />
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </Swipeable>
                                                      <div
                                                        className="image-gallery-bullets"
                                                      >
                                                        <div
                                                          aria-label="Bullet Navigation"
                                                          className="image-gallery-bullets-container"
                                                          role="navigation"
                                                        >
                                                          <button
                                                            aria-label="Go to Slide 1"
                                                            aria-pressed="true"
                                                            className="image-gallery-bullet active"
                                                            key="bullet-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg"
                                                            onClick={[Function]}
                                                            type="button"
                                                          />
                                                          <button
                                                            aria-label="Go to Slide 2"
                                                            aria-pressed="false"
                                                            className="image-gallery-bullet"
                                                            key="bullet-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg"
                                                            onClick={[Function]}
                                                            type="button"
                                                          />
                                                          <button
                                                            aria-label="Go to Slide 3"
                                                            aria-pressed="false"
                                                            className="image-gallery-bullet"
                                                            key="bullet-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg"
                                                            onClick={[Function]}
                                                            type="button"
                                                          />
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          CBRe castellana 200
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          1st PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "ES",
                                                      "Common.PostCode": "28046",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Paseo de la Castellana, 196-204, 28046 Madrid, Spain",
                                                          "Common.Locallity": "Madrid",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-02-12",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 3,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-02-12",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "e656598b-dd9d-4a89-932f-255d9cacacf6",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 5000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "EUR",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 600,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "EUR",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 40.462543,
                                                      "lon": -3.6886625,
                                                    },
                                                    "Common.FitOutOptions": Array [],
                                                    "Common.FloorNumber": 1,
                                                    "Common.FloorPlans": Array [
                                                      Object {
                                                        "Common.ImageCaption": "GIMNASIO (6).jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Image.Height": 1080,
                                                            "Common.Image.Width": 1920,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/e6204e25/GIMNASIO%20(6).jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Highlights (optional)
",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-11T10:43:23.6944792Z",
                                                    "Common.LastUpdated": "2020-02-11T10:41:51.2460075Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Description (optional)
",
                                                      },
                                                    ],
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_639",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SALON_COCINA (9).jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 1080,
                                                            "Common.Image.Width": 1920,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 360,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 720,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 900,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "Common.ImageCaption": "PISCINA (7).jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 1080,
                                                            "Common.Image.Width": 1920,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 360,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 720,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 900,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7)_Photo_2_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/1e8b504e/PISCINA%20(7).jpg",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "Common.ImageCaption": "DORMITORIOPPAL (10).jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 1080,
                                                            "Common.Image.Width": 1920,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 360,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 720,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 900,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10)_Photo_3_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/0d9e9045/DORMITORIOPPAL%20(10).jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_640",
                                                    "Common.PropertySubType": "OfficeAndRetail",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 500,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 1050,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-02-11T10:41:50.782194Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "CBRe castellana 200",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 1050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 4480.29,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 5381.957525591208,
                                                    "Dynamic.MinDesks": 5381.957525591208,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "SALON_COCINA (9).jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 1080,
                                                          "Common.Image.Width": 1920,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 360,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 720,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 900,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9)_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_640/540f2bbf/SALON_COCINA%20(9).jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 11302.110803741536,
                                                    "Dynamic.TotalDesks": 11302.110803741536,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 1050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              5,000€
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              33
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_23"
                        images={
                          Array [
                            Object {
                              "alt": "SS_SPACE_1.jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="2"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="10th PROPCARD_FLOOR"
                        title="Praveen Space SpaceSpot-3"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_23"
                          images={
                            Array [
                              Object {
                                "alt": "SS_SPACE_1.jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="10th PROPCARD_FLOOR"
                          title="Praveen Space SpaceSpot-3"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_23"
                            images={
                              Array [
                                Object {
                                  "alt": "SS_SPACE_1.jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="10th PROPCARD_FLOOR"
                            title="Praveen Space SpaceSpot-3"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_23"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_23"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_23"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "SS_SPACE_1.jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "SS_SPACE_1.jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "SS_SPACE_1.jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Praveen Space SpaceSpot-3
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          10th PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "Norway",
                                                      "Common.PostCode": "28036",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Pease de Castallina, 12, 28036 Madrid, España",
                                                          "Common.Locallity": "Madrid",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-03-31",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 19,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-03-31",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "c700793a-1963-4b2b-996f-1939f853cc10",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 50000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 10,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 40.475227,
                                                      "lon": -3.6768017,
                                                    },
                                                    "Common.FitOutOptions": Array [],
                                                    "Common.FloorNumber": 10,
                                                    "Common.FloorPlans": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SS_SPACE_31_2.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Image.Height": 167,
                                                            "Common.Image.Width": 301,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/a2e678d7/SS_SPACE_31_2.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-03-03T13:44:09.4993843Z",
                                                    "Common.LastUpdated": "2020-03-03T13:42:15.9732977Z",
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_28474",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 167,
                                                            "Common.Image.Width": 301,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 355,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 710,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 887,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_23",
                                                    "Common.PropertySubType": "RetailLand",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 500,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 1050,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-03-03T13:42:15.470683Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Praveen Space SpaceSpot-3",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 1050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 4981.07,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 5381.957525591208,
                                                    "Dynamic.MinDesks": 5381.957525591208,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 167,
                                                          "Common.Image.Width": 301,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 355,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 710,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 887,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_23/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 11302.110803741536,
                                                    "Dynamic.TotalDesks": 11302.110803741536,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 1050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              50,000kr
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              33
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_888"
                        images={
                          Array [
                            Object {
                              "alt": "no photo",
                              "url": "building.svg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="3"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="9th PROPCARD_FLOOR"
                        title="Space Headline Changed"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_888"
                          images={
                            Array [
                              Object {
                                "alt": "no photo",
                                "url": "building.svg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="9th PROPCARD_FLOOR"
                          title="Space Headline Changed"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_888"
                            images={
                              Array [
                                Object {
                                  "alt": "no photo",
                                  "url": "building.svg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="9th PROPCARD_FLOOR"
                            title="Space Headline Changed"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_888"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_888"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_888"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "no photo",
                                          "url": "building.svg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "no photo",
                                            "url": "building.svg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "no photo",
                                              "url": "building.svg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "building.svg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-building.svg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="building.svg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Space Headline Changed
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          9th PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "Norway",
                                                      "Common.PostCode": "28036",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "es-ES",
                                                          "Common.Line1": "Calle Bambú, 12, 28036 Madrid, España",
                                                          "Common.Locallity": "Madrid",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-12-29",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 7,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-12-29",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "2e2e81fd-6da4-4bba-b2da-526b08e62a84",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 9898,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "GBP",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "sqft",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 6564,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "GBP",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 40.475227,
                                                      "lon": -3.6768017,
                                                    },
                                                    "Common.FitOutOptions": Array [
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 6464,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "GBP",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "fitout desc",
                                                          },
                                                        ],
                                                        "Common.Identifier": "fitout",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "fitout name",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_888",
                                                      },
                                                    ],
                                                    "Common.FloorNumber": 9,
                                                    "Common.FloorPlans": Array [],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "Highlights data changed",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-12T09:26:04.2196848Z",
                                                    "Common.LastUpdated": "2020-02-12T09:24:23.5073279Z",
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 224,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_007",
                                                    "Common.Photos": Array [],
                                                    "Common.PrimaryKey": "SS_SPACE_888",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 224,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 446,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-02-12T09:24:22.896450900Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "es-ES",
                                                        "Common.Text": "Space Headline Changed",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 446,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Walkthrough": "http://sfws",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 9898,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 2411.1169714648613,
                                                    "Dynamic.MinDesks": 2411.1169714648613,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 224,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": null,
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 4800.706112827357,
                                                    "Dynamic.TotalDesks": 4800.706112827357,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 446,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              ￡9,898
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              15
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              Dec
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_88"
                        images={
                          Array [
                            Object {
                              "alt": "no photo",
                              "url": "building.svg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="4"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="4th PROPCARD_FLOOR"
                        title="Space Headline SS_BUILDING_010"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_88"
                          images={
                            Array [
                              Object {
                                "alt": "no photo",
                                "url": "building.svg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="4th PROPCARD_FLOOR"
                          title="Space Headline SS_BUILDING_010"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_88"
                            images={
                              Array [
                                Object {
                                  "alt": "no photo",
                                  "url": "building.svg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="4th PROPCARD_FLOOR"
                            title="Space Headline SS_BUILDING_010"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_88"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_88"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_88"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "no photo",
                                          "url": "building.svg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "no photo",
                                            "url": "building.svg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "no photo",
                                              "url": "building.svg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "building.svg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-building.svg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="building.svg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Space Headline SS_BUILDING_010
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          4th PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "Norway",
                                                      "Common.PostCode": "28036",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "es-ES",
                                                          "Common.Line1": "Calle Bambú, 12, 28036 Madrid, España",
                                                          "Common.Locallity": "Madrid",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-10-29",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 6,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-10-29",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "2e2e81fd-6da4-4bba-b2da-526b08e62a84",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 2190,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "GBP",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "sqft",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 2290,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "GBP",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 40.475227,
                                                      "lon": -3.6768017,
                                                    },
                                                    "Common.FitOutOptions": Array [
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 2452,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "GBP",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "fitout desc",
                                                          },
                                                        ],
                                                        "Common.Identifier": "fitout",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "fitout name",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_88",
                                                      },
                                                    ],
                                                    "Common.FloorNumber": 4,
                                                    "Common.FloorPlans": Array [],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "es-ES",
                                                            "Common.Text": "Highlights data",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-20T10:46:05.4580914Z",
                                                    "Common.LastUpdated": "2020-02-20T10:44:59.2693756Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "es-ES",
                                                        "Common.Text": "Here is small fixed space detail for SS_BUILDING_010",
                                                      },
                                                    ],
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 129,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_0004",
                                                    "Common.Photos": Array [],
                                                    "Common.PrimaryKey": "SS_SPACE_88",
                                                    "Common.PropertySubType": "OfficeLand",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 129,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 274,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-02-20T10:44:36.464474Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "es-ES",
                                                        "Common.Text": "Space Headline SS_BUILDING_010",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 274,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Walkthrough": "http://sf",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 2190,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 1388.5450416025317,
                                                    "Dynamic.MinDesks": 1388.5450416025317,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 129,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": null,
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 2949.312724023982,
                                                    "Dynamic.TotalDesks": 2949.312724023982,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 274,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              ￡2,190
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              9
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_664"
                        images={
                          Array [
                            Object {
                              "alt": "SS_SPACE_1.jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="5"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="11st PROPCARD_FLOOR"
                        title="Praveen Space SpaceSpot-4"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_664"
                          images={
                            Array [
                              Object {
                                "alt": "SS_SPACE_1.jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="11st PROPCARD_FLOOR"
                          title="Praveen Space SpaceSpot-4"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_664"
                            images={
                              Array [
                                Object {
                                  "alt": "SS_SPACE_1.jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="11st PROPCARD_FLOOR"
                            title="Praveen Space SpaceSpot-4"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_664"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_664"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_664"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "SS_SPACE_1.jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "SS_SPACE_1.jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "SS_SPACE_1.jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Praveen Space SpaceSpot-4
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          11st PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "Norway",
                                                      "Common.PostCode": "28036",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Pease de Castallina, 12, 28036 Madrid, España",
                                                          "Common.Locallity": "Madrid",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-03-31",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 10,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-03-31",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "c700793a-1963-4b2b-996f-1939f853cc10",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 10000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 11000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 40.475227,
                                                      "lon": -3.6768017,
                                                    },
                                                    "Common.FitOutOptions": Array [
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 9999.99,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 1 Desc",
                                                          },
                                                        ],
                                                        "Common.Identifier": "1",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 1",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_664",
                                                      },
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 99999.999,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 2 Desc",
                                                          },
                                                        ],
                                                        "Common.Identifier": "2",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 2",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_664",
                                                      },
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 3333,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 3q",
                                                          },
                                                        ],
                                                        "Common.Identifier": "3",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Customer Fitout 3",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_664",
                                                      },
                                                    ],
                                                    "Common.FloorNumber": 11,
                                                    "Common.FloorPlans": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SS_SPACE_FloorPlan_1.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Image.Height": 195,
                                                            "Common.Image.Width": 258,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/3c4eff99/SS_SPACE_FloorPlan_1.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Praveen Space SpaceSpot-4",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-03-13T12:19:16.3639572Z",
                                                    "Common.LastUpdated": "2020-03-13T12:17:50.8735335Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Praveen Space SpaceSpot-4",
                                                      },
                                                    ],
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 1500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_28474",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 167,
                                                            "Common.Image.Width": 301,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 355,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 710,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 887,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_664",
                                                    "Common.PropertySubType": "RetailLand",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 1500,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 3050,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-03-13T12:17:50.272463Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Praveen Space SpaceSpot-4",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 3050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 996.21,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 16145.872576773625,
                                                    "Dynamic.MinDesks": 16145.872576773625,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 1500,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "SS_SPACE_1.jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 167,
                                                          "Common.Image.Width": 301,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 355,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 710,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 887,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_664/5f871249/SS_SPACE_1.jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 32829.94090610637,
                                                    "Dynamic.TotalDesks": 32829.94090610637,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 3050,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              10,000kr
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              100
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#6CB9D5",
                            "text": "PROPCARD_CHIP_FIXED",
                          }
                        }
                        id="space-SS_SPACE_29"
                        images={
                          Array [
                            Object {
                              "alt": "398857109.png",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="6"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle="15th PROPCARD_FLOOR"
                        title="Space Headline"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#6CB9D5",
                              "text": "PROPCARD_CHIP_FIXED",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_29"
                          images={
                            Array [
                              Object {
                                "alt": "398857109.png",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle="15th PROPCARD_FLOOR"
                          title="Space Headline"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#6CB9D5",
                                "text": "PROPCARD_CHIP_FIXED",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_29"
                            images={
                              Array [
                                Object {
                                  "alt": "398857109.png",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle="15th PROPCARD_FLOOR"
                            title="Space Headline"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_29"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_29"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_29"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#6CB9D5"
                                        >
                                          <StyledComponent
                                            color="#6CB9D5"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY hcGwtM"
                                              color="#6CB9D5"
                                            >
                                               
                                              PROPCARD_CHIP_FIXED
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "398857109.png",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "398857109.png",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "398857109.png",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          Space Headline
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        >
                                                          15th PROPCARD_FLOOR
                                                        </h6>
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFixed
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "NL",
                                                      "Common.PostCode": "12345",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Amsterdam, Netherlands",
                                                          "Common.Locallity": "Amsterdam",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Availability": Object {
                                                      "Common.AvailabilityDate": "2020-02-27",
                                                      "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                      "Common.MinLeaseTerm": Object {
                                                        "Common.TermDuration": 5,
                                                      },
                                                    },
                                                    "Common.AvailableFrom": "2020-02-27",
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                                                    "Common.Charges": Array [
                                                      Object {
                                                        "Common.Amount": 10000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "Rent",
                                                        "Common.ChargeModifer": "PriceIsNegotiable",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                      Object {
                                                        "Common.Amount": 12000,
                                                        "Common.AmountKind": "Value",
                                                        "Common.ChargeKind": "ServiceCharge",
                                                        "Common.ChargeModifer": "Fixed",
                                                        "Common.CurrencyCode": "NOK",
                                                        "Common.Interval": "Monthly",
                                                        "Common.OnApplication": false,
                                                        "Common.PerUnit": "Whole",
                                                        "Common.TaxModifer": "PlusVAT",
                                                      },
                                                    ],
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 52.366695,
                                                      "lon": 4.89454,
                                                    },
                                                    "Common.FitOutOptions": Array [
                                                      Object {
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 200,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "PropertyAccommodation",
                                                            "Common.ChargeModifer": "Fixed",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Monthly",
                                                            "Common.OnApplication": true,
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.Description": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Fitout description",
                                                          },
                                                        ],
                                                        "Common.Identifier": "fitout",
                                                        "Common.Name": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Fitout headline",
                                                          },
                                                        ],
                                                        "Common.SpaceID": "SS_SPACE_29",
                                                      },
                                                    ],
                                                    "Common.FloorNumber": 15,
                                                    "Common.FloorPlans": Array [],
                                                    "Common.FlooredURL": "https://google.com",
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Space Highlights",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-27T06:27:16.6022713Z",
                                                    "Common.LastUpdated": "2020-02-27T06:25:46.4366002Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Space desc",
                                                      },
                                                    ],
                                                    "Common.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 1000,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_28",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "398857109.png",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 1520,
                                                            "Common.Image.Width": 720,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 480,
                                                            "Common.Image.Width": 227,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 960,
                                                            "Common.Image.Width": 454,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 1200,
                                                            "Common.Image.Width": 568,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_29",
                                                    "Common.PropertySubType": "OfficeLand",
                                                    "Common.Sizes": Array [
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 1000,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "MinimumSize",
                                                      },
                                                      Object {
                                                        "Common.Dimensions": Array [
                                                          Object {
                                                            "Common.Amount": 2200,
                                                            "Common.DimensionsUnits": "sqm",
                                                          },
                                                        ],
                                                        "Common.SizeKind": "TotalSize",
                                                      },
                                                    ],
                                                    "Common.SourceLastupdated": "2020-02-27T06:25:45.927568Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "Space Headline",
                                                      },
                                                    ],
                                                    "Common.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 2200,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Common.UsageType": "Office",
                                                    "Common.Walkthrough": "https://google.com",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": 996.21,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": 10763.915051182415,
                                                    "Dynamic.MinDesks": 10763.915051182415,
                                                    "Dynamic.MinimumSize": Array [
                                                      Object {
                                                        "Common.Size": 1000,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "398857109.png",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 1520,
                                                          "Common.Image.Width": 720,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 480,
                                                          "Common.Image.Width": 227,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 960,
                                                          "Common.Image.Width": 454,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 1200,
                                                          "Common.Image.Width": 568,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_29/9e778550/398857109_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_29/9e778550/398857109.png",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": 23680.613112601317,
                                                    "Dynamic.TotalDesks": 23680.613112601317,
                                                    "Dynamic.TotalSize": Array [
                                                      Object {
                                                        "Common.Size": 2200,
                                                        "Common.Units": "sqm",
                                                      },
                                                    ],
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-eilVRo",
                                                          "isStatic": false,
                                                          "lastClassName": "gUjtCQ",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-eilVRo",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-eilVRo gUjtCQ"
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <span>
                                                              10,000kr
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="people"
                                                              src="people.svg"
                                                            />
                                                            <span>
                                                              67
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-eerKOB",
                                                                "isStatic": false,
                                                                "lastClassName": "fkAEMa",
                                                                "rules": Array [
                                                                  "
  display: flex;
  align-items: flex-start;
  img {
    margin-right: 5px;
  }
  span {
    font-size: 16px;
    font-weight: 400;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-eerKOB",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-eerKOB fkAEMa"
                                                          >
                                                            <img
                                                              alt="calendar"
                                                              src="calendar.svg"
                                                            />
                                                            <span>
                                                              PROPCARD_AVAILABLE_NOW
                                                            </span>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFixed>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#EBBF59",
                            "text": "PROPCARD_CHIP_FLEX",
                          }
                        }
                        id="space-SS_SPACE_30"
                        images={
                          Array [
                            Object {
                              "alt": "download3.jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="7"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle=""
                        title="UAT Building by SS - Flex space"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#EBBF59",
                              "text": "PROPCARD_CHIP_FLEX",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_30"
                          images={
                            Array [
                              Object {
                                "alt": "download3.jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle=""
                          title="UAT Building by SS - Flex space"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#EBBF59",
                                "text": "PROPCARD_CHIP_FLEX",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_30"
                            images={
                              Array [
                                Object {
                                  "alt": "download3.jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle=""
                            title="UAT Building by SS - Flex space"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_30"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_30"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_30"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#EBBF59"
                                        >
                                          <StyledComponent
                                            color="#EBBF59"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY inxlbE"
                                              color="#EBBF59"
                                            >
                                               
                                              PROPCARD_CHIP_FLEX
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "download3.jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "download3.jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "download3.jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          UAT Building by SS - Flex space
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        />
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFlex
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "NL",
                                                      "Common.PostCode": "12345",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Amsterdam, Netherlands",
                                                          "Common.Locallity": "Amsterdam",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 52.366695,
                                                      "lon": 4.89454,
                                                    },
                                                    "Common.FloorPlans": Array [],
                                                    "Common.FloorsAndUnits": Array [
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 4,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-28",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 4,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-28",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 400,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "HotDesk",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "HotDesk",
                                                      },
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 5,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-28",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 5,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-28",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 500,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "FixedDesk",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "FixedDesk",
                                                      },
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 6,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-28",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 6,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-28",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 600,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "ServicedOffice",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "ServicedOffice",
                                                      },
                                                    ],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "Highlights",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-27T10:42:14.2706132Z",
                                                    "Common.LastUpdated": "2020-02-27T10:40:56.1540577Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "desc",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_28",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "download3.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 194,
                                                            "Common.Image.Width": 259,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 479,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 958,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 1198,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_30",
                                                    "Common.SourceLastupdated": "2020-02-27T10:40:55.431779Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "UAT Building by SS - Flex space",
                                                      },
                                                    ],
                                                    "Common.UsageType": "FlexOffice",
                                                    "Common.Walkthrough": "https://google.com",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": null,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": "0",
                                                    "Dynamic.MinDesks": "0",
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "download3.jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 194,
                                                          "Common.Image.Width": 259,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 479,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 958,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 1198,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_30/a6320a21/download3_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_30/a6320a21/download3.jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": null,
                                                    "Dynamic.TotalDesks": null,
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-emmjRN",
                                                          "isStatic": false,
                                                          "lastClassName": "hadXae",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
  & > div {
    margin-right: 20px;
    text-overflow: clip;
    overflow: hidden;
    white-space: nowrap;
  }
  h5 {
    margin: 0;
    font-size: 16px;
    font-weight: 400;
  }
  div > div {
    font-size: 14px;
    color: #828286;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-emmjRN",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-emmjRN hadXae"
                                                    >
                                                      <div>
                                                        <h5>
                                                          5
                                                           
                                                          PROPCARD_DESKS
                                                        </h5>
                                                        <div>
                                                          PROPCARD_FROM 400kr
                                                        </div>
                                                      </div>
                                                      <div>
                                                        <h5>
                                                           
                                                          1 PROPCARD_SERVICED_OFFICES
                                                           
                                                        </h5>
                                                        <div>
                                                          PROPCARD_FROM 600kr
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFlex>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                      <Styled(PropertyCard)
                        chip={
                          Object {
                            "color": "#EBBF59",
                            "text": "PROPCARD_CHIP_FLEX",
                          }
                        }
                        id="space-SS_SPACE_32"
                        images={
                          Array [
                            Object {
                              "alt": "download3.jpg",
                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                            },
                          ]
                        }
                        isFavorite={false}
                        key="8"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        selected={false}
                        subTitle=""
                        title="flex headline"
                      >
                        <StyledComponent
                          chip={
                            Object {
                              "color": "#EBBF59",
                              "text": "PROPCARD_CHIP_FLEX",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cpmLhU",
                                "isStatic": false,
                                "lastClassName": "dTKsoX",
                                "rules": Array [
                                  "
  box-shadow: ",
                                  [Function],
                                  ";
  border: ",
                                  [Function],
                                  ";
  :hover {
    box-shadow: 0px 0px 1px 1px #6cb9d5;
    border: 1px solid #6cb9d5;
  }
",
                                ],
                              },
                              "displayName": "Styled(PropertyCard)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cpmLhU",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="space-SS_SPACE_32"
                          images={
                            Array [
                              Object {
                                "alt": "download3.jpg",
                                "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                              },
                            ]
                          }
                          isFavorite={false}
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          selected={false}
                          subTitle=""
                          title="flex headline"
                        >
                          <PropertyCard
                            chip={
                              Object {
                                "color": "#EBBF59",
                                "text": "PROPCARD_CHIP_FLEX",
                              }
                            }
                            className="sc-cpmLhU dTKsoX"
                            id="space-SS_SPACE_32"
                            images={
                              Array [
                                Object {
                                  "alt": "download3.jpg",
                                  "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                },
                              ]
                            }
                            isFavorite={false}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            selected={false}
                            subTitle=""
                            title="flex headline"
                          >
                            <styled.div
                              className="sc-cpmLhU dTKsoX"
                              id="space-SS_SPACE_32"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <StyledComponent
                                className="sc-cpmLhU dTKsoX"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-RefOD",
                                      "isStatic": false,
                                      "lastClassName": "blnBSG",
                                      "rules": Array [
                                        "
  border: 1px solid #dddddd;
  border-radius: 4px;
  height: 300px;
  width: 100%;
  margin-right: 5px;
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-RefOD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="space-SS_SPACE_32"
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <div
                                  className="sc-RefOD blnBSG sc-cpmLhU dTKsoX"
                                  id="space-SS_SPACE_32"
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eXEjpC",
                                            "isStatic": false,
                                            "lastClassName": "fSctdt",
                                            "rules": Array [
                                              "
  position: relative;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eXEjpC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-eXEjpC fSctdt"
                                      >
                                        <styled.div
                                          color="#EBBF59"
                                        >
                                          <StyledComponent
                                            color="#EBBF59"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ibxdXY",
                                                  "isStatic": false,
                                                  "lastClassName": "inxlbE",
                                                  "rules": Array [
                                                    "
  position: absolute;
  top: 8px;
  left: 10px;
  border-radius: 12.5px;
  padding: 3px 8px;
  font-size: 12px;
  line-height: 18px;
  font-weight: 450;
  color: #fff;
  z-index: 1;
  box-shadow: 1px 1px 3px #6f6f6f;
  background: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-ibxdXY",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-ibxdXY inxlbE"
                                              color="#EBBF59"
                                            >
                                               
                                              PROPCARD_CHIP_FLEX
                                               
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Styled(Component)
                                    images={
                                      Array [
                                        Object {
                                          "alt": "download3.jpg",
                                          "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                        },
                                      ]
                                    }
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kIPQKe",
                                            "isStatic": false,
                                            "lastClassName": "cUSlPT",
                                            "rules": Array [
                                              "
  :hover {
    ",
                                              ".sc-hwwEjo",
                                              " {
      display: block;
    }
  }
  .image-gallery,
  .image-gallery-slide-wrapper,
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    height: 200px;
  }
  .image-gallery-content .image-gallery-slide .image-gallery-image {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .image-gallery-bullets .image-gallery-bullet {
    box-shadow: unset;
    border: none;
    background: #fff;
    margin: 0 2px;
    padding: 2.6px;
  }

  .image-gallery-bullets .image-gallery-bullet:focus,
  .image-gallery-bullets .image-gallery-bullet:hover,
  .image-gallery-bullets .image-gallery-bullet.active {
    background: #fff;
    transform: scale(1.5);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kIPQKe",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      images={
                                        Array [
                                          Object {
                                            "alt": "download3.jpg",
                                            "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                          },
                                        ]
                                      }
                                      onClick={[Function]}
                                    >
                                      <Component
                                        className="sc-kIPQKe cUSlPT"
                                        images={
                                          Array [
                                            Object {
                                              "alt": "download3.jpg",
                                              "url": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                            },
                                          ]
                                        }
                                        onClick={[Function]}
                                      >
                                        <styled.div
                                          className="sc-kIPQKe cUSlPT"
                                        >
                                          <StyledComponent
                                            className="sc-kIPQKe cUSlPT"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-esjQYD",
                                                  "isStatic": false,
                                                  "lastClassName": "efhTlZ",
                                                  "rules": Array [
                                                    "
  overflow: hidden;
  height: ",
                                                    [Function],
                                                    "px;
  width: 100%;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-esjQYD",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-esjQYD efhTlZ sc-kIPQKe cUSlPT"
                                            >
                                              <ImageGallery
                                                additionalClass=""
                                                autoPlay={false}
                                                disableArrowKeys={false}
                                                disableKeyDown={false}
                                                disableSwipe={false}
                                                disableThumbnailScroll={false}
                                                flickThreshold={0.4}
                                                indexSeparator=" / "
                                                infinite={true}
                                                isRTL={false}
                                                items={
                                                  Array [
                                                    Object {
                                                      "original": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                    },
                                                  ]
                                                }
                                                lazyLoad={false}
                                                onBeforeSlide={null}
                                                onClick={[Function]}
                                                onErrorImageURL=""
                                                onImageError={null}
                                                onImageLoad={null}
                                                onMouseLeave={null}
                                                onMouseOver={null}
                                                onPause={null}
                                                onPlay={null}
                                                onScreenChange={null}
                                                onSlide={null}
                                                onThumbnailClick={null}
                                                onThumbnailError={null}
                                                onTouchEnd={null}
                                                onTouchMove={null}
                                                onTouchStart={null}
                                                preventDefaultTouchmoveEvent={false}
                                                renderCustomControls={null}
                                                renderFullscreenButton={[Function]}
                                                renderItem={null}
                                                renderLeftNav={[Function]}
                                                renderPlayPauseButton={[Function]}
                                                renderRightNav={[Function]}
                                                renderThumbInner={null}
                                                showBullets={false}
                                                showFullscreenButton={false}
                                                showIndex={false}
                                                showNav={true}
                                                showPlayButton={false}
                                                showThumbnails={false}
                                                slideDuration={450}
                                                slideInterval={3000}
                                                slideOnThumbnailOver={false}
                                                startIndex={0}
                                                stopPropagation={false}
                                                swipeThreshold={30}
                                                swipingTransitionDuration={0}
                                                thumbnailPosition="bottom"
                                                useBrowserFullscreen={true}
                                                useTranslate3D={true}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="image-gallery"
                                                >
                                                  <div
                                                    className="image-gallery-content bottom"
                                                  >
                                                    <div
                                                      className="image-gallery-slide-wrapper bottom"
                                                    >
                                                      <div
                                                        className="image-gallery-slides"
                                                      >
                                                        <div
                                                          className="image-gallery-slide  center "
                                                          key="slide-https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg"
                                                          onClick={[Function]}
                                                          onFocus={null}
                                                          onKeyUp={[Function]}
                                                          onMouseLeave={null}
                                                          onMouseOver={null}
                                                          onTouchEnd={null}
                                                          onTouchMove={null}
                                                          onTouchStart={null}
                                                          role="button"
                                                          style={
                                                            Object {
                                                              "MozTransform": "translate3d(0%, 0, 0)",
                                                              "OTransform": "translate3d(0%, 0, 0)",
                                                              "WebkitTransform": "translate3d(0%, 0, 0)",
                                                              "msTransform": "translate3d(0%, 0, 0)",
                                                              "transform": "translate3d(0%, 0, 0)",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div>
                                                            <img
                                                              className="image-gallery-image"
                                                              onError={[Function]}
                                                              onLoad={[Function]}
                                                              src="https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </ImageGallery>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <styled.div
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iQKALj",
                                            "isStatic": false,
                                            "lastClassName": "jfjImU",
                                            "rules": Array [
                                              "
  padding: ",
                                              [Function],
                                              ";
  height: 80px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iQKALj",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="sc-iQKALj jfjImU"
                                        onClick={[Function]}
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwCtUz",
                                                  "isStatic": false,
                                                  "lastClassName": "gBfRIM",
                                                  "rules": Array [
                                                    "
  display: flex;
  justify-content: space-between;
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwCtUz",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-bwCtUz gBfRIM"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gwVKww",
                                                        "isStatic": false,
                                                        "lastClassName": "jURmTx",
                                                        "rules": Array [
                                                          "
  max-width: calc(100% - 45px);
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gwVKww",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-gwVKww jURmTx"
                                                  >
                                                    <styled.h4>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-hXRMBi",
                                                              "isStatic": false,
                                                              "lastClassName": "jeIXkp",
                                                              "rules": Array [
                                                                "
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 1px;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #000;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h4",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-hXRMBi",
                                                            "target": "h4",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h4
                                                          className="sc-hXRMBi jeIXkp"
                                                        >
                                                          flex headline
                                                        </h4>
                                                      </StyledComponent>
                                                    </styled.h4>
                                                    <styled.h6>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-eTuwsz",
                                                              "isStatic": false,
                                                              "lastClassName": "cIMahU",
                                                              "rules": Array [
                                                                "
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 5px;
  color: #828286;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.h6",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-eTuwsz",
                                                            "target": "h6",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <h6
                                                          className="sc-eTuwsz cIMahU"
                                                        />
                                                      </StyledComponent>
                                                    </styled.h6>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <Styled(FavoriteBorderIcon)
                                                onClick={[Function]}
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "compare": null,
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iQNlJl",
                                                        "isStatic": false,
                                                        "lastClassName": "ipgCjo",
                                                        "rules": Array [
                                                          "
  color: #ddd;
",
                                                        ],
                                                      },
                                                      "displayName": "Styled(FavoriteBorderIcon)",
                                                      "foldedComponentIds": Array [],
                                                      "muiName": "SvgIcon",
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iQNlJl",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "FavoriteBorderIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef
                                                    className="sc-iQNlJl ipgCjo"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="sc-iQNlJl ipgCjo"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="sc-iQNlJl ipgCjo"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root sc-iQNlJl ipgCjo"
                                                          focusable="false"
                                                          onClick={[Function]}
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </StyledComponent>
                                              </Styled(FavoriteBorderIcon)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-hrWEMg",
                                                  "isStatic": false,
                                                  "lastClassName": "fOsrtz",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-hrWEMg",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-hrWEMg fOsrtz"
                                            >
                                              <DetailFlex
                                                space={
                                                  Object {
                                                    "Common.ActualAddress": Object {
                                                      "Common.Country": "NL",
                                                      "Common.PostCode": "12345",
                                                      "Common.PostalAddresses": Array [
                                                        Object {
                                                          "Common.Language": "en-US",
                                                          "Common.Line1": "Amsterdam, Netherlands",
                                                          "Common.Locallity": "Amsterdam",
                                                        },
                                                      ],
                                                    },
                                                    "Common.Brochures": Array [],
                                                    "Common.BuildingOperatorID": "ee5e700a-b7de-4e01-aab9-2b5ee9d47821",
                                                    "Common.ContactGroup": Object {
                                                      "Common.GroupType": "AreaOffice",
                                                    },
                                                    "Common.Coordinate": Object {
                                                      "lat": 52.366695,
                                                      "lon": 4.89454,
                                                    },
                                                    "Common.FloorPlans": Array [],
                                                    "Common.FloorsAndUnits": Array [
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 4,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-29",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 4,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-29",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 400,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "HotDesk",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "HotDesk",
                                                      },
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 5,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-28",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 5,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-28",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 500,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "FixedDesk",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "FixedDesk",
                                                      },
                                                      Object {
                                                        "Common.Areas": Array [
                                                          Object {
                                                            "Common.Area": 1,
                                                            "Common.MaxArea": 6,
                                                            "Common.MinArea": 1,
                                                            "Common.Units": "pp",
                                                          },
                                                        ],
                                                        "Common.Availability": Object {
                                                          "Common.AvailabilityDate": "2020-02-28",
                                                          "Common.AvailabilityKind": "AvailableFromKnownDate",
                                                          "Common.MinLeaseTerm": Object {
                                                            "Common.TermDuration": 6,
                                                          },
                                                        },
                                                        "Common.AvailableFrom": "2020-02-28",
                                                        "Common.Charges": Array [
                                                          Object {
                                                            "Common.Amount": 600,
                                                            "Common.AmountKind": "Value",
                                                            "Common.ChargeKind": "Rent",
                                                            "Common.ChargeModifer": "PriceIsNegotiable",
                                                            "Common.CurrencyCode": "NOK",
                                                            "Common.Interval": "Daily",
                                                            "Common.OnApplication": false,
                                                            "Common.PerUnit": "unit",
                                                            "Common.TaxModifer": "PlusVAT",
                                                          },
                                                        ],
                                                        "Common.SubdivisionName": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "ServicedOffice",
                                                          },
                                                        ],
                                                        "Common.Unit.Status": "Available",
                                                        "Common.Unit.Use": "ServicedOffice",
                                                      },
                                                    ],
                                                    "Common.Highlights": Array [
                                                      Object {
                                                        "Common.Highlight": Array [
                                                          Object {
                                                            "Common.CultureCode": "en-US",
                                                            "Common.Text": "flex highlights",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.HomeSite": "no-comm",
                                                    "Common.IsParent": false,
                                                    "Common.LastProcessed": "2020-02-27T10:55:10.3725466Z",
                                                    "Common.LastUpdated": "2020-02-27T10:53:31.6975532Z",
                                                    "Common.LongDescription": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "flex desc",
                                                      },
                                                    ],
                                                    "Common.ParentProperty": "SS_BUILDING_28",
                                                    "Common.Photos": Array [
                                                      Object {
                                                        "Common.ImageCaption": "download3.jpg",
                                                        "Common.ImageResources": Array [
                                                          Object {
                                                            "Common.Breakpoint": "original",
                                                            "Common.Image.Height": 194,
                                                            "Common.Image.Width": 259,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "small",
                                                            "Common.Image.Height": 479,
                                                            "Common.Image.Width": 640,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_small.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "medium",
                                                            "Common.Image.Height": 958,
                                                            "Common.Image.Width": 1280,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_medium.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                          },
                                                          Object {
                                                            "Common.Breakpoint": "large",
                                                            "Common.Image.Height": 1198,
                                                            "Common.Image.Width": 1600,
                                                            "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_large.jpg",
                                                            "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "Common.PrimaryKey": "SS_SPACE_32",
                                                    "Common.SourceLastupdated": "2020-02-27T10:53:31.287163Z",
                                                    "Common.Strapline": Array [
                                                      Object {
                                                        "Common.CultureCode": "en-US",
                                                        "Common.Text": "flex headline",
                                                      },
                                                    ],
                                                    "Common.UsageType": "FlexOffice",
                                                    "Common.Walkthrough": "https://google.com",
                                                    "Common.Website": "https://www.spacespot.com",
                                                    "Dynamic.DevelopmentOpportunity": false,
                                                    "Dynamic.FlexCharge": null,
                                                    "Dynamic.Furnished": "unfurnished",
                                                    "Dynamic.Has24HourAccess": false,
                                                    "Dynamic.HasAccessControl": false,
                                                    "Dynamic.HasBalcony": false,
                                                    "Dynamic.HasBarCafeteria": false,
                                                    "Dynamic.HasBicycleRack": false,
                                                    "Dynamic.HasBreakoutSpace": false,
                                                    "Dynamic.HasBusinessLounge": false,
                                                    "Dynamic.HasCleaning": false,
                                                    "Dynamic.HasCoworkingArea": false,
                                                    "Dynamic.HasDayCare": false,
                                                    "Dynamic.HasDoorkeeper": false,
                                                    "Dynamic.HasElevators": false,
                                                    "Dynamic.HasFixedDesks": false,
                                                    "Dynamic.HasFloorsRaised": false,
                                                    "Dynamic.HasFoodService-Cafeteria": false,
                                                    "Dynamic.HasFreeMeetingRooms": false,
                                                    "Dynamic.HasGarden": false,
                                                    "Dynamic.HasGenerator": false,
                                                    "Dynamic.HasGym": false,
                                                    "Dynamic.HasHotDesks": false,
                                                    "Dynamic.HasLift": false,
                                                    "Dynamic.HasParking": false,
                                                    "Dynamic.HasReception": false,
                                                    "Dynamic.HasRoofTerrace": false,
                                                    "Dynamic.HasSecurity-24hours/7days": false,
                                                    "Dynamic.HasServicedOffices": false,
                                                    "Dynamic.HasShowers": false,
                                                    "Dynamic.HasStorageArchives": false,
                                                    "Dynamic.HasSwimmingPool": false,
                                                    "Dynamic.HasTeaCoffee": false,
                                                    "Dynamic.HasTerrace": false,
                                                    "Dynamic.HasWheelchairAccess": false,
                                                    "Dynamic.HasWheelchairAccessToilets": false,
                                                    "Dynamic.IsPenthouse": false,
                                                    "Dynamic.LetUnderOffer": false,
                                                    "Dynamic.LettingCharge": null,
                                                    "Dynamic.MaxArea": null,
                                                    "Dynamic.MinArea": "0",
                                                    "Dynamic.MinDesks": "0",
                                                    "Dynamic.NetCharge": null,
                                                    "Dynamic.NewHome": false,
                                                    "Dynamic.PrimaryImage": Object {
                                                      "Common.ImageCaption": "download3.jpg",
                                                      "Common.ImageResources": Array [
                                                        Object {
                                                          "Common.Breakpoint": "original",
                                                          "Common.Image.Height": 194,
                                                          "Common.Image.Width": 259,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "small",
                                                          "Common.Image.Height": 479,
                                                          "Common.Image.Width": 640,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_small.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "medium",
                                                          "Common.Image.Height": 958,
                                                          "Common.Image.Width": 1280,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_medium.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                        },
                                                        Object {
                                                          "Common.Breakpoint": "large",
                                                          "Common.Image.Height": 1198,
                                                          "Common.Image.Width": 1600,
                                                          "Common.Resource.Uri": "/resources/fileassets/SS_SPACE_32/a6320a21/download3_Photo_1_large.jpg",
                                                          "Source.Uri": "https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/SS_SPACE_32/a6320a21/download3.jpg",
                                                        },
                                                      ],
                                                    },
                                                    "Dynamic.SalePrice": null,
                                                    "Dynamic.TotalArea": null,
                                                    "Dynamic.TotalDesks": null,
                                                    "Dynamic.UnderOffer": false,
                                                  }
                                                }
                                              >
                                                <styled.div>
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-emmjRN",
                                                          "isStatic": false,
                                                          "lastClassName": "hadXae",
                                                          "rules": Array [
                                                            "
  display: flex;
  justify-content: space-between;
  & > div {
    margin-right: 20px;
    text-overflow: clip;
    overflow: hidden;
    white-space: nowrap;
  }
  h5 {
    margin: 0;
    font-size: 16px;
    font-weight: 400;
  }
  div > div {
    font-size: 14px;
    color: #828286;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-emmjRN",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-emmjRN hadXae"
                                                    >
                                                      <div>
                                                        <h5>
                                                          5
                                                           
                                                          PROPCARD_DESKS
                                                        </h5>
                                                        <div>
                                                          PROPCARD_FROM 400kr
                                                        </div>
                                                      </div>
                                                      <div>
                                                        <h5>
                                                           
                                                          1 PROPCARD_SERVICED_OFFICES
                                                           
                                                        </h5>
                                                        <div>
                                                          PROPCARD_FROM 600kr
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </DetailFlex>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </PropertyCard>
                        </StyledComponent>
                      </Styled(PropertyCard)>
                    </PropertyListing>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-fhYwyz",
                  "isStatic": false,
                  "lastClassName": "jVeHKV",
                  "rules": Array [
                    "
  flex: 1 1 auto;
  padding-left: 20px;
  @media ",
                    "(max-width: 767px)",
                    " {
    padding-left: 0;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-fhYwyz",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-fhYwyz jVeHKV"
            >
              <Comp>
                <Comp>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-jzgbtB",
                            "isStatic": false,
                            "lastClassName": "iTrocL",
                            "rules": Array [
                              "
    position: sticky;
    top: 65px;
  ",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-jzgbtB",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-jzgbtB iTrocL"
                      >
                        <GoogleMap
                          mapContainerStyle={
                            Object {
                              "height": "calc(100vh - 65px)",
                              "width": "100%",
                            }
                          }
                          onBoundsChanged={[Function]}
                          onLoad={[Function]}
                          test-id="map"
                          zoom={14}
                        >
                          <div>
                            <MarkerClusterer
                              calculator={[Function]}
                              onClick={[Function]}
                              onLoad={[Function]}
                              styles={
                                Array [
                                  Object {
                                    "anchorIcon": Array [
                                      40,
                                      20,
                                    ],
                                    "anchorText": Array [
                                      -5,
                                      0,
                                    ],
                                    "fontFamily": "futura-pt, sans-serif",
                                    "fontWeight": "400",
                                    "height": 40,
                                    "textColor": "white",
                                    "textSize": 13,
                                    "url": "spot-dark.svg",
                                    "width": 40,
                                  },
                                  Object {
                                    "anchorIcon": Array [
                                      40,
                                      20,
                                    ],
                                    "anchorText": Array [
                                      -5,
                                      0,
                                    ],
                                    "fontFamily": "futura-pt, sans-serif",
                                    "fontWeight": "400",
                                    "height": 40,
                                    "textColor": "black",
                                    "textSize": 13,
                                    "url": "spot-orange.svg",
                                    "width": 40,
                                  },
                                ]
                              }
                              zoomOnClick={false}
                            >
                              <div>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="0"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 37.391354,
                                      "lng": -6.0037513,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="1"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 40.462543,
                                      "lng": -3.6886625,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="2"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 40.475227,
                                      "lng": -3.6768017,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="3"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 40.475227,
                                      "lng": -3.6768017,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="4"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 40.475227,
                                      "lng": -3.6768017,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="5"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 40.475227,
                                      "lng": -3.6768017,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="6"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 52.366695,
                                      "lng": 4.89454,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="7"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 52.366695,
                                      "lng": 4.89454,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                                <Marker
                                  clusterer={null}
                                  icon={
                                    Object {
                                      "anchor": Point {},
                                      "fillColor": "#000",
                                      "fillOpacity": 1,
                                      "labelOrigin": Point {},
                                      "path": "
M6.46743652,16.5736831 C10.4847985,12.2842963 12.4934794,8.98795917 12.4934794,6.68467165
C12.4934794,3.20295796 9.86880297,0.738975967 6.46743652,0.738975967
C3.06607007,0.738975967 0.4413936,3.20295796 0.4413936,6.68467165
C0.4413936,8.98795917 2.45007457,12.2842963 6.46743652,16.5736831 Z
M6.46743652,10.3002974 C4.40519072,10.3002974 3.1196349,8.88082952 3.1196349,6.71145406
C3.1196349,4.14034242 4.80692692,3.09582831 6.46743652,3.09582831
C8.12794613,3.09582831 9.81523815,4.14034242 9.81523815,6.71145406
C9.81523815,8.88082952 8.52968232,10.3002974 6.46743652,10.3002974 Z",
                                      "scale": 2,
                                      "strokeColor": "#000",
                                      "strokeWeight": 1,
                                    }
                                  }
                                  key="8"
                                  onClick={[Function]}
                                  position={
                                    Object {
                                      "lat": 52.366695,
                                      "lng": 4.89454,
                                    }
                                  }
                                >
                                  <div />
                                </Marker>
                              </div>
                            </MarkerClusterer>
                          </div>
                        </GoogleMap>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </Comp>
              </Comp>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</PropertyListings>
`;
