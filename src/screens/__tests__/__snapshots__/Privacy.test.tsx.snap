// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing  1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getAction": [Function],
      "getActions": [Function],
      "getState": [Function],
      "isActionDispatched": [Function],
      "isActionTypeDispatched": [Function],
      "subscribe": [Function],
    }
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Privacy>
      <HelmetWrapper
        defer={true}
        encodeSpecialCharacters={true}
      >
        <SideEffect(NullComponent)
          defer={true}
          encodeSpecialCharacters={true}
          link={
            Array [
              Object {
                "href": "https://www.spacespot.no/en-no/privacy",
                "rel": "canonical",
              },
            ]
          }
          meta={
            Array [
              Object {
                "content": "SEO_DESCRIPTION_PRIVACY",
                "name": "description",
              },
            ]
          }
          title="SEO_TITLE_PRIVACY"
          titleAttributes={Object {}}
        >
          <NullComponent
            defer={true}
            encodeSpecialCharacters={true}
            link={
              Array [
                Object {
                  "href": "https://www.spacespot.no/en-no/privacy",
                  "rel": "canonical",
                },
              ]
            }
            meta={
              Array [
                Object {
                  "content": "SEO_DESCRIPTION_PRIVACY",
                  "name": "description",
                },
              ]
            }
            title="SEO_TITLE_PRIVACY"
            titleAttributes={Object {}}
          />
        </SideEffect(NullComponent)>
      </HelmetWrapper>
      <OnBoardingLayout
        hasFooter={true}
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-uJMKN",
                  "isStatic": false,
                  "lastClassName": "koSzpN",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-uJMKN",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-uJMKN koSzpN"
            >
              <Header>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gPEVay",
                          "isStatic": false,
                          "lastClassName": "kIXbXz",
                          "rules": Array [
                            "
  display: flex;
  overflow: hidden;
  justify-content: space-between;
  align-items: center;
  height: 24px;
  padding: 13px 19px 13px 19px;
  background-color: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gPEVay",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-gPEVay kIXbXz"
                    >
                      <SessionDialog>
                        <WithStyles(ForwardRef(Dialog))
                          onClose={[Function]}
                          open={false}
                        >
                          <ForwardRef(Dialog)
                            classes={
                              Object {
                                "container": "MuiDialog-container",
                                "paper": "MuiDialog-paper",
                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                "root": "MuiDialog-root",
                                "scrollBody": "MuiDialog-scrollBody",
                                "scrollPaper": "MuiDialog-scrollPaper",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                          >
                            <ForwardRef(Modal)
                              BackdropComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "invisible": [Function],
                                      "open": [Function],
                                      "transitionDuration": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "defaultProps": undefined,
                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiBackdrop",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                }
                              }
                              BackdropProps={
                                Object {
                                  "transitionDuration": Object {
                                    "enter": 225,
                                    "exit": 195,
                                  },
                                }
                              }
                              className="MuiDialog-root"
                              closeAfterTransition={true}
                              disableBackdropClick={false}
                              disableEscapeKeyDown={false}
                              onClose={[Function]}
                              open={false}
                            />
                          </ForwardRef(Dialog)>
                        </WithStyles(ForwardRef(Dialog))>
                      </SessionDialog>
                      <CookieDialog>
                        <WithStyles(ForwardRef(Dialog))
                          onClose={[Function]}
                          open={true}
                        >
                          <ForwardRef(Dialog)
                            classes={
                              Object {
                                "container": "MuiDialog-container",
                                "paper": "MuiDialog-paper",
                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                "root": "MuiDialog-root",
                                "scrollBody": "MuiDialog-scrollBody",
                                "scrollPaper": "MuiDialog-scrollPaper",
                              }
                            }
                            onClose={[Function]}
                            open={true}
                          >
                            <ForwardRef(Modal)
                              BackdropComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "invisible": [Function],
                                      "open": [Function],
                                      "transitionDuration": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "defaultProps": undefined,
                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiBackdrop",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                }
                              }
                              BackdropProps={
                                Object {
                                  "transitionDuration": Object {
                                    "enter": 225,
                                    "exit": 195,
                                  },
                                }
                              }
                              className="MuiDialog-root"
                              closeAfterTransition={true}
                              disableBackdropClick={false}
                              disableEscapeKeyDown={false}
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Portal)
                                disablePortal={false}
                              >
                                <Portal
                                  containerInfo={
                                    <body
                                      style="padding-right: 0px; overflow: hidden;"
                                    >
                                      <div
                                        class="MuiDialog-root"
                                        role="presentation"
                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                      >
                                        <div
                                          aria-hidden="true"
                                          class="MuiBackdrop-root"
                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                        />
                                        <div
                                          data-test="sentinelStart"
                                          tabindex="0"
                                        />
                                        <div
                                          class="MuiDialog-container MuiDialog-scrollPaper"
                                          role="none presentation"
                                          style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                          tabindex="-1"
                                        >
                                          <div
                                            class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                            role="dialog"
                                          >
                                            <div
                                              class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                            >
                                              <h2
                                                class="MuiTypography-root MuiTypography-h6"
                                              >
                                                <img
                                                  alt="cookie"
                                                  src="cookie.svg"
                                                />
                                                COOKIE_TITLE
                                              </h2>
                                            </div>
                                            <div
                                              class="MuiDialogContent-root sc-htoDjs hOVInI"
                                            >
                                              <div
                                                class="sc-dnqmqq cTMciD"
                                              />
                                            </div>
                                            <div
                                              class="MuiDialogActions-root MuiDialogActions-spacing"
                                            >
                                              <div
                                                class="sc-gzVnrw dfuvhJ"
                                              >
                                                <button
                                                  class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                  color="primary"
                                                  id="cookieDialogOK"
                                                >
                                                  COOKIE_ACCEPT
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                        <div
                                          data-test="sentinelEnd"
                                          tabindex="0"
                                        />
                                      </div>
                                    </body>
                                  }
                                >
                                  <div
                                    className="MuiDialog-root"
                                    onKeyDown={[Function]}
                                    role="presentation"
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "fixed",
                                        "right": 0,
                                        "top": 0,
                                        "zIndex": 1300,
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Backdrop))
                                      onClick={[Function]}
                                      open={true}
                                      transitionDuration={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                    >
                                      <ForwardRef(Backdrop)
                                        classes={
                                          Object {
                                            "invisible": "MuiBackdrop-invisible",
                                            "root": "MuiBackdrop-root",
                                          }
                                        }
                                        onClick={[Function]}
                                        open={true}
                                        transitionDuration={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <ForwardRef(Fade)
                                          in={true}
                                          onClick={[Function]}
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <Transition
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onClick={[Function]}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <div
                                              aria-hidden={true}
                                              className="MuiBackdrop-root"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "opacity": 1,
                                                  "visibility": undefined,
                                                }
                                              }
                                            />
                                          </Transition>
                                        </ForwardRef(Fade)>
                                      </ForwardRef(Backdrop)>
                                    </WithStyles(ForwardRef(Backdrop))>
                                    <TrapFocus
                                      disableAutoFocus={false}
                                      disableEnforceFocus={false}
                                      disableRestoreFocus={false}
                                      getDoc={[Function]}
                                      isEnabled={[Function]}
                                      open={true}
                                    >
                                      <div
                                        data-test="sentinelStart"
                                        tabIndex={0}
                                      />
                                      <ForwardRef(Fade)
                                        appear={true}
                                        in={true}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        role="none presentation"
                                        tabIndex="-1"
                                        timeout={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <Transition
                                          appear={true}
                                          enter={true}
                                          exit={true}
                                          in={true}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          role="none presentation"
                                          tabIndex="-1"
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiDialog-container MuiDialog-scrollPaper"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            role="none presentation"
                                            style={
                                              Object {
                                                "opacity": 1,
                                                "visibility": undefined,
                                              }
                                            }
                                            tabIndex="-1"
                                          >
                                            <WithStyles(ForwardRef(Paper))
                                              className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                              elevation={24}
                                              role="dialog"
                                            >
                                              <ForwardRef(Paper)
                                                className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                classes={
                                                  Object {
                                                    "elevation0": "MuiPaper-elevation0",
                                                    "elevation1": "MuiPaper-elevation1",
                                                    "elevation10": "MuiPaper-elevation10",
                                                    "elevation11": "MuiPaper-elevation11",
                                                    "elevation12": "MuiPaper-elevation12",
                                                    "elevation13": "MuiPaper-elevation13",
                                                    "elevation14": "MuiPaper-elevation14",
                                                    "elevation15": "MuiPaper-elevation15",
                                                    "elevation16": "MuiPaper-elevation16",
                                                    "elevation17": "MuiPaper-elevation17",
                                                    "elevation18": "MuiPaper-elevation18",
                                                    "elevation19": "MuiPaper-elevation19",
                                                    "elevation2": "MuiPaper-elevation2",
                                                    "elevation20": "MuiPaper-elevation20",
                                                    "elevation21": "MuiPaper-elevation21",
                                                    "elevation22": "MuiPaper-elevation22",
                                                    "elevation23": "MuiPaper-elevation23",
                                                    "elevation24": "MuiPaper-elevation24",
                                                    "elevation3": "MuiPaper-elevation3",
                                                    "elevation4": "MuiPaper-elevation4",
                                                    "elevation5": "MuiPaper-elevation5",
                                                    "elevation6": "MuiPaper-elevation6",
                                                    "elevation7": "MuiPaper-elevation7",
                                                    "elevation8": "MuiPaper-elevation8",
                                                    "elevation9": "MuiPaper-elevation9",
                                                    "root": "MuiPaper-root",
                                                    "rounded": "MuiPaper-rounded",
                                                  }
                                                }
                                                elevation={24}
                                                role="dialog"
                                              >
                                                <div
                                                  className="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                  role="dialog"
                                                >
                                                  <Styled(WithStyles(ForwardRef(DialogTitle)))>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "disableTypography": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-iwsKbI",
                                                            "isStatic": false,
                                                            "lastClassName": "jrVdvK",
                                                            "rules": Array [
                                                              "
  text-align: left;
  padding: 30px;
  h2 {
    display: flex;
    color: #000000;
    font-size: 28px;
    font-weight: 400;
    letter-spacing: -0.25px;
    line-height: 35px;
    img {
      margin-right: 10px;
    }
  }
",
                                                            ],
                                                          },
                                                          "displayName": "Styled(WithStyles(ForwardRef(DialogTitle)))",
                                                          "foldedComponentIds": Array [],
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "hover": "rgba(0, 0, 0, 0.08)",
                                                                  "hoverOpacity": 0.08,
                                                                  "selected": "rgba(0, 0, 0, 0.14)",
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiDialogTitle",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "sc-iwsKbI",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "Naked": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "disableTypography": [Function],
                                                              },
                                                              "render": [Function],
                                                            },
                                                            "defaultProps": undefined,
                                                            "displayName": "WithStyles(ForwardRef(DialogTitle))",
                                                            "options": Object {
                                                              "defaultTheme": Object {
                                                                "breakpoints": Object {
                                                                  "between": [Function],
                                                                  "down": [Function],
                                                                  "keys": Array [
                                                                    "xs",
                                                                    "sm",
                                                                    "md",
                                                                    "lg",
                                                                    "xl",
                                                                  ],
                                                                  "only": [Function],
                                                                  "up": [Function],
                                                                  "values": Object {
                                                                    "lg": 1280,
                                                                    "md": 960,
                                                                    "sm": 600,
                                                                    "xl": 1920,
                                                                    "xs": 0,
                                                                  },
                                                                  "width": [Function],
                                                                },
                                                                "direction": "ltr",
                                                                "mixins": Object {
                                                                  "gutters": [Function],
                                                                  "toolbar": Object {
                                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                      "minHeight": 48,
                                                                    },
                                                                    "@media (min-width:600px)": Object {
                                                                      "minHeight": 64,
                                                                    },
                                                                    "minHeight": 56,
                                                                  },
                                                                },
                                                                "overrides": Object {},
                                                                "palette": Object {
                                                                  "action": Object {
                                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                    "hover": "rgba(0, 0, 0, 0.08)",
                                                                    "hoverOpacity": 0.08,
                                                                    "selected": "rgba(0, 0, 0, 0.14)",
                                                                  },
                                                                  "augmentColor": [Function],
                                                                  "background": Object {
                                                                    "default": "#fafafa",
                                                                    "paper": "#fff",
                                                                  },
                                                                  "common": Object {
                                                                    "black": "#000",
                                                                    "white": "#fff",
                                                                  },
                                                                  "contrastThreshold": 3,
                                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                                  "error": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#d32f2f",
                                                                    "light": "#e57373",
                                                                    "main": "#f44336",
                                                                  },
                                                                  "getContrastText": [Function],
                                                                  "grey": Object {
                                                                    "100": "#f5f5f5",
                                                                    "200": "#eeeeee",
                                                                    "300": "#e0e0e0",
                                                                    "400": "#bdbdbd",
                                                                    "50": "#fafafa",
                                                                    "500": "#9e9e9e",
                                                                    "600": "#757575",
                                                                    "700": "#616161",
                                                                    "800": "#424242",
                                                                    "900": "#212121",
                                                                    "A100": "#d5d5d5",
                                                                    "A200": "#aaaaaa",
                                                                    "A400": "#303030",
                                                                    "A700": "#616161",
                                                                  },
                                                                  "primary": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#303f9f",
                                                                    "light": "#7986cb",
                                                                    "main": "#3f51b5",
                                                                  },
                                                                  "secondary": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#c51162",
                                                                    "light": "#ff4081",
                                                                    "main": "#f50057",
                                                                  },
                                                                  "text": Object {
                                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                                  },
                                                                  "tonalOffset": 0.2,
                                                                  "type": "light",
                                                                },
                                                                "props": Object {},
                                                                "shadows": Array [
                                                                  "none",
                                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                ],
                                                                "shape": Object {
                                                                  "borderRadius": 4,
                                                                },
                                                                "spacing": [Function],
                                                                "transitions": Object {
                                                                  "create": [Function],
                                                                  "duration": Object {
                                                                    "complex": 375,
                                                                    "enteringScreen": 225,
                                                                    "leavingScreen": 195,
                                                                    "short": 250,
                                                                    "shorter": 200,
                                                                    "shortest": 150,
                                                                    "standard": 300,
                                                                  },
                                                                  "easing": Object {
                                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                  },
                                                                  "getAutoHeightDuration": [Function],
                                                                },
                                                                "typography": Object {
                                                                  "body1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00938em",
                                                                    "lineHeight": 1.5,
                                                                  },
                                                                  "body2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.01071em",
                                                                    "lineHeight": 1.43,
                                                                  },
                                                                  "button": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.02857em",
                                                                    "lineHeight": 1.75,
                                                                    "textTransform": "uppercase",
                                                                  },
                                                                  "caption": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.75rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.03333em",
                                                                    "lineHeight": 1.66,
                                                                  },
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": 14,
                                                                  "fontWeightBold": 700,
                                                                  "fontWeightLight": 300,
                                                                  "fontWeightMedium": 500,
                                                                  "fontWeightRegular": 400,
                                                                  "h1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "6rem",
                                                                    "fontWeight": 300,
                                                                    "letterSpacing": "-0.01562em",
                                                                    "lineHeight": 1.167,
                                                                  },
                                                                  "h2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "3.75rem",
                                                                    "fontWeight": 300,
                                                                    "letterSpacing": "-0.00833em",
                                                                    "lineHeight": 1.2,
                                                                  },
                                                                  "h3": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "3rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0em",
                                                                    "lineHeight": 1.167,
                                                                  },
                                                                  "h4": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "2.125rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00735em",
                                                                    "lineHeight": 1.235,
                                                                  },
                                                                  "h5": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1.5rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0em",
                                                                    "lineHeight": 1.334,
                                                                  },
                                                                  "h6": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1.25rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.0075em",
                                                                    "lineHeight": 1.6,
                                                                  },
                                                                  "htmlFontSize": 16,
                                                                  "overline": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.75rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.08333em",
                                                                    "lineHeight": 2.66,
                                                                    "textTransform": "uppercase",
                                                                  },
                                                                  "pxToRem": [Function],
                                                                  "round": [Function],
                                                                  "subtitle1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00938em",
                                                                    "lineHeight": 1.75,
                                                                  },
                                                                  "subtitle2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.00714em",
                                                                    "lineHeight": 1.57,
                                                                  },
                                                                },
                                                                "zIndex": Object {
                                                                  "appBar": 1100,
                                                                  "drawer": 1200,
                                                                  "mobileStepper": 1000,
                                                                  "modal": 1300,
                                                                  "snackbar": 1400,
                                                                  "speedDial": 1050,
                                                                  "tooltip": 1500,
                                                                },
                                                              },
                                                              "name": "MuiDialogTitle",
                                                            },
                                                            "propTypes": Object {
                                                              "classes": [Function],
                                                              "innerRef": [Function],
                                                            },
                                                            "render": [Function],
                                                            "useStyles": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "useStyles": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <WithStyles(ForwardRef(DialogTitle))
                                                        className="sc-iwsKbI jrVdvK"
                                                      >
                                                        <ForwardRef(DialogTitle)
                                                          className="sc-iwsKbI jrVdvK"
                                                          classes={
                                                            Object {
                                                              "root": "MuiDialogTitle-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              component="h2"
                                                              variant="h6"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="h2"
                                                                variant="h6"
                                                              >
                                                                <h2
                                                                  className="MuiTypography-root MuiTypography-h6"
                                                                >
                                                                  <img
                                                                    alt="cookie"
                                                                    src="cookie.svg"
                                                                  />
                                                                  COOKIE_TITLE
                                                                </h2>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(DialogTitle)>
                                                      </WithStyles(ForwardRef(DialogTitle))>
                                                    </StyledComponent>
                                                  </Styled(WithStyles(ForwardRef(DialogTitle)))>
                                                  <Styled(WithStyles(ForwardRef(DialogContent)))>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "dividers": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htoDjs",
                                                            "isStatic": false,
                                                            "lastClassName": "hOVInI",
                                                            "rules": Array [
                                                              "
  padding: 0 30px;
",
                                                            ],
                                                          },
                                                          "displayName": "Styled(WithStyles(ForwardRef(DialogContent)))",
                                                          "foldedComponentIds": Array [],
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "hover": "rgba(0, 0, 0, 0.08)",
                                                                  "hoverOpacity": 0.08,
                                                                  "selected": "rgba(0, 0, 0, 0.14)",
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiDialogContent",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htoDjs",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "Naked": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "dividers": [Function],
                                                              },
                                                              "render": [Function],
                                                            },
                                                            "defaultProps": undefined,
                                                            "displayName": "WithStyles(ForwardRef(DialogContent))",
                                                            "options": Object {
                                                              "defaultTheme": Object {
                                                                "breakpoints": Object {
                                                                  "between": [Function],
                                                                  "down": [Function],
                                                                  "keys": Array [
                                                                    "xs",
                                                                    "sm",
                                                                    "md",
                                                                    "lg",
                                                                    "xl",
                                                                  ],
                                                                  "only": [Function],
                                                                  "up": [Function],
                                                                  "values": Object {
                                                                    "lg": 1280,
                                                                    "md": 960,
                                                                    "sm": 600,
                                                                    "xl": 1920,
                                                                    "xs": 0,
                                                                  },
                                                                  "width": [Function],
                                                                },
                                                                "direction": "ltr",
                                                                "mixins": Object {
                                                                  "gutters": [Function],
                                                                  "toolbar": Object {
                                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                      "minHeight": 48,
                                                                    },
                                                                    "@media (min-width:600px)": Object {
                                                                      "minHeight": 64,
                                                                    },
                                                                    "minHeight": 56,
                                                                  },
                                                                },
                                                                "overrides": Object {},
                                                                "palette": Object {
                                                                  "action": Object {
                                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                    "hover": "rgba(0, 0, 0, 0.08)",
                                                                    "hoverOpacity": 0.08,
                                                                    "selected": "rgba(0, 0, 0, 0.14)",
                                                                  },
                                                                  "augmentColor": [Function],
                                                                  "background": Object {
                                                                    "default": "#fafafa",
                                                                    "paper": "#fff",
                                                                  },
                                                                  "common": Object {
                                                                    "black": "#000",
                                                                    "white": "#fff",
                                                                  },
                                                                  "contrastThreshold": 3,
                                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                                  "error": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#d32f2f",
                                                                    "light": "#e57373",
                                                                    "main": "#f44336",
                                                                  },
                                                                  "getContrastText": [Function],
                                                                  "grey": Object {
                                                                    "100": "#f5f5f5",
                                                                    "200": "#eeeeee",
                                                                    "300": "#e0e0e0",
                                                                    "400": "#bdbdbd",
                                                                    "50": "#fafafa",
                                                                    "500": "#9e9e9e",
                                                                    "600": "#757575",
                                                                    "700": "#616161",
                                                                    "800": "#424242",
                                                                    "900": "#212121",
                                                                    "A100": "#d5d5d5",
                                                                    "A200": "#aaaaaa",
                                                                    "A400": "#303030",
                                                                    "A700": "#616161",
                                                                  },
                                                                  "primary": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#303f9f",
                                                                    "light": "#7986cb",
                                                                    "main": "#3f51b5",
                                                                  },
                                                                  "secondary": Object {
                                                                    "contrastText": "#fff",
                                                                    "dark": "#c51162",
                                                                    "light": "#ff4081",
                                                                    "main": "#f50057",
                                                                  },
                                                                  "text": Object {
                                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                                  },
                                                                  "tonalOffset": 0.2,
                                                                  "type": "light",
                                                                },
                                                                "props": Object {},
                                                                "shadows": Array [
                                                                  "none",
                                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                ],
                                                                "shape": Object {
                                                                  "borderRadius": 4,
                                                                },
                                                                "spacing": [Function],
                                                                "transitions": Object {
                                                                  "create": [Function],
                                                                  "duration": Object {
                                                                    "complex": 375,
                                                                    "enteringScreen": 225,
                                                                    "leavingScreen": 195,
                                                                    "short": 250,
                                                                    "shorter": 200,
                                                                    "shortest": 150,
                                                                    "standard": 300,
                                                                  },
                                                                  "easing": Object {
                                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                  },
                                                                  "getAutoHeightDuration": [Function],
                                                                },
                                                                "typography": Object {
                                                                  "body1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00938em",
                                                                    "lineHeight": 1.5,
                                                                  },
                                                                  "body2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.01071em",
                                                                    "lineHeight": 1.43,
                                                                  },
                                                                  "button": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.02857em",
                                                                    "lineHeight": 1.75,
                                                                    "textTransform": "uppercase",
                                                                  },
                                                                  "caption": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.75rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.03333em",
                                                                    "lineHeight": 1.66,
                                                                  },
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": 14,
                                                                  "fontWeightBold": 700,
                                                                  "fontWeightLight": 300,
                                                                  "fontWeightMedium": 500,
                                                                  "fontWeightRegular": 400,
                                                                  "h1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "6rem",
                                                                    "fontWeight": 300,
                                                                    "letterSpacing": "-0.01562em",
                                                                    "lineHeight": 1.167,
                                                                  },
                                                                  "h2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "3.75rem",
                                                                    "fontWeight": 300,
                                                                    "letterSpacing": "-0.00833em",
                                                                    "lineHeight": 1.2,
                                                                  },
                                                                  "h3": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "3rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0em",
                                                                    "lineHeight": 1.167,
                                                                  },
                                                                  "h4": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "2.125rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00735em",
                                                                    "lineHeight": 1.235,
                                                                  },
                                                                  "h5": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1.5rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0em",
                                                                    "lineHeight": 1.334,
                                                                  },
                                                                  "h6": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1.25rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.0075em",
                                                                    "lineHeight": 1.6,
                                                                  },
                                                                  "htmlFontSize": 16,
                                                                  "overline": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.75rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.08333em",
                                                                    "lineHeight": 2.66,
                                                                    "textTransform": "uppercase",
                                                                  },
                                                                  "pxToRem": [Function],
                                                                  "round": [Function],
                                                                  "subtitle1": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "1rem",
                                                                    "fontWeight": 400,
                                                                    "letterSpacing": "0.00938em",
                                                                    "lineHeight": 1.75,
                                                                  },
                                                                  "subtitle2": Object {
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": "0.875rem",
                                                                    "fontWeight": 500,
                                                                    "letterSpacing": "0.00714em",
                                                                    "lineHeight": 1.57,
                                                                  },
                                                                },
                                                                "zIndex": Object {
                                                                  "appBar": 1100,
                                                                  "drawer": 1200,
                                                                  "mobileStepper": 1000,
                                                                  "modal": 1300,
                                                                  "snackbar": 1400,
                                                                  "speedDial": 1050,
                                                                  "tooltip": 1500,
                                                                },
                                                              },
                                                              "name": "MuiDialogContent",
                                                            },
                                                            "propTypes": Object {
                                                              "classes": [Function],
                                                              "innerRef": [Function],
                                                            },
                                                            "render": [Function],
                                                            "useStyles": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "useStyles": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <WithStyles(ForwardRef(DialogContent))
                                                        className="sc-htoDjs hOVInI"
                                                      >
                                                        <ForwardRef(DialogContent)
                                                          className="sc-htoDjs hOVInI"
                                                          classes={
                                                            Object {
                                                              "dividers": "MuiDialogContent-dividers",
                                                              "root": "MuiDialogContent-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogContent-root sc-htoDjs hOVInI"
                                                          >
                                                            <styled.div
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "",
                                                                }
                                                              }
                                                            >
                                                              <StyledComponent
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "",
                                                                  }
                                                                }
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dnqmqq",
                                                                      "isStatic": false,
                                                                      "lastClassName": "cTMciD",
                                                                      "rules": Array [
                                                                        "
  p {
    color: black;
    margin: 0;
    font-size: 16px;
    font-weight: 400;
    max-width: 500px;
  }
  a {
    text-decoration: none;
    color: #4fbbd8;
  }
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dnqmqq",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dnqmqq cTMciD"
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "",
                                                                    }
                                                                  }
                                                                />
                                                              </StyledComponent>
                                                            </styled.div>
                                                          </div>
                                                        </ForwardRef(DialogContent)>
                                                      </WithStyles(ForwardRef(DialogContent))>
                                                    </StyledComponent>
                                                  </Styled(WithStyles(ForwardRef(DialogContent)))>
                                                  <WithStyles(ForwardRef(DialogActions))>
                                                    <ForwardRef(DialogActions)
                                                      classes={
                                                        Object {
                                                          "root": "MuiDialogActions-root",
                                                          "spacing": "MuiDialogActions-spacing",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiDialogActions-root MuiDialogActions-spacing"
                                                      >
                                                        <styled.div>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "dfuvhJ",
                                                                  "rules": Array [
                                                                    "
  padding: 30px 22px;
  @media ",
                                                                    "(max-width: 767px)",
                                                                    " {
    width: 100%;
  }
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="sc-gzVnrw dfuvhJ"
                                                            >
                                                              <Styled(styled.button)
                                                                autoFocus={true}
                                                                color="primary"
                                                                id="cookieDialogOK"
                                                                onClick={[Function]}
                                                              >
                                                                <StyledComponent
                                                                  autoFocus={true}
                                                                  color="primary"
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "sc-gZMcBi",
                                                                        "isStatic": false,
                                                                        "lastClassName": "fbqngS",
                                                                        "rules": Array [
                                                                          "
  font-size: 14px;
  font-weight: 550;
  line-height: 18px;
  border: none;
  background-color: #6cb9d5;
  color: #ffffff;
  border-radius: 2px;
  cursor: pointer;
  text-transform: uppercase;
  height: 37px;
  padding: 0 20px;
",
                                                                          "
  background: #404042;
  outline: none;
  @media ",
                                                                          "(max-width: 767px)",
                                                                          " {
    width: 100%;
  }
",
                                                                        ],
                                                                      },
                                                                      "displayName": "Styled(styled.button)",
                                                                      "foldedComponentIds": Array [
                                                                        "sc-bwzfXH",
                                                                      ],
                                                                      "render": [Function],
                                                                      "styledComponentId": "sc-gZMcBi",
                                                                      "target": "button",
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                  id="cookieDialogOK"
                                                                  onClick={[Function]}
                                                                >
                                                                  <button
                                                                    autoFocus={true}
                                                                    className="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                    color="primary"
                                                                    id="cookieDialogOK"
                                                                    onClick={[Function]}
                                                                  >
                                                                    COOKIE_ACCEPT
                                                                  </button>
                                                                </StyledComponent>
                                                              </Styled(styled.button)>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </div>
                                                    </ForwardRef(DialogActions)>
                                                  </WithStyles(ForwardRef(DialogActions))>
                                                </div>
                                              </ForwardRef(Paper)>
                                            </WithStyles(ForwardRef(Paper))>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Fade)>
                                      <div
                                        data-test="sentinelEnd"
                                        tabIndex={0}
                                      />
                                    </TrapFocus>
                                  </div>
                                </Portal>
                              </ForwardRef(Portal)>
                            </ForwardRef(Modal)>
                          </ForwardRef(Dialog)>
                        </WithStyles(ForwardRef(Dialog))>
                      </CookieDialog>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-iRbamj",
                                "isStatic": false,
                                "lastClassName": "hcvHvc",
                                "rules": Array [
                                  "
  margin-left: 24px;
  height: 28px;
  @media ",
                                  "(max-width: 767px)",
                                  " {
    margin-left: 0;
  }
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-iRbamj",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-iRbamj hcvHvc"
                          >
                            <Link
                              onClick={[Function]}
                              to="/"
                            >
                              <LinkAnchor
                                href="/"
                                navigate={[Function]}
                                onClick={[Function]}
                              >
                                <a
                                  href="/"
                                  onClick={[Function]}
                                >
                                  <img
                                    alt="SpaceSpot Logo"
                                    height="28px"
                                    src="logo.svg"
                                  />
                                </a>
                              </LinkAnchor>
                            </Link>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <styled.ul>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-Rmtcm",
                                "isStatic": false,
                                "lastClassName": "gdDPHr",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0;
",
                                ],
                              },
                              "displayName": "styled.ul",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-Rmtcm",
                              "target": "ul",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <ul
                            className="sc-Rmtcm gdDPHr"
                          >
                            <styled.li>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bRBYWo",
                                      "isStatic": false,
                                      "lastClassName": "eQTZbY",
                                      "rules": Array [
                                        "
  position: relative;
  margin-left: 2em;
  white-space: nowrap;
  display: inline-block;
  color: #ffffff;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  a {
    display: flex;
    align-items: center;
    border: 2px solid transparent;
    padding: 4px 5px;
    text-decoration: none;
    transition: 0.3s;
    color: #ffffff;
    outline: none;
    img {
      margin-right: 6px;
    }
    :hover {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
    :focus {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
  }
  @media ",
                                        "(max-width: 767px)",
                                        " {
    margin-left: 1em;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.li",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bRBYWo",
                                    "target": "li",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <li
                                  className="sc-bRBYWo eQTZbY"
                                >
                                  <Styled(styled.button)
                                    data-testid="signin"
                                    onClick={[Function]}
                                    upperCase={false}
                                  >
                                    <StyledComponent
                                      data-testid="signin"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-fBuWsC",
                                            "isStatic": false,
                                            "lastClassName": "ljShwJ",
                                            "rules": Array [
                                              "
  display: flex;
  align-items: center;
  text-transform: ",
                                              [Function],
                                              "
  font-size: 16px;
  font-weight: 500;
  color: inherit;
  background: transparent;
  border: none;
  cursor: pointer;
  img {
    margin-right: 6px;
  }
  ",
                                              "
  border-bottom: 2px solid transparent;
  outline: none;
  :hover {
    border-bottom: 2px solid white;
  }
  :focus {
    border-bottom: 2px solid white;
  }
  padding: 8px 5px 7px 5px;
",
                                            ],
                                          },
                                          "displayName": "Styled(styled.button)",
                                          "foldedComponentIds": Array [
                                            "sc-jhAzac",
                                          ],
                                          "render": [Function],
                                          "styledComponentId": "sc-fBuWsC",
                                          "target": "button",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      upperCase={false}
                                    >
                                      <button
                                        className="sc-jhAzac sc-fBuWsC ljShwJ"
                                        data-testid="signin"
                                        onClick={[Function]}
                                      >
                                        <img
                                          alt="sign in"
                                          height="23px"
                                          src="login.svg"
                                        />
                                        HEADER_SIGN_IN
                                      </button>
                                    </StyledComponent>
                                  </Styled(styled.button)>
                                </li>
                              </StyledComponent>
                            </styled.li>
                            <styled.li>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bRBYWo",
                                      "isStatic": false,
                                      "lastClassName": "eQTZbY",
                                      "rules": Array [
                                        "
  position: relative;
  margin-left: 2em;
  white-space: nowrap;
  display: inline-block;
  color: #ffffff;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  a {
    display: flex;
    align-items: center;
    border: 2px solid transparent;
    padding: 4px 5px;
    text-decoration: none;
    transition: 0.3s;
    color: #ffffff;
    outline: none;
    img {
      margin-right: 6px;
    }
    :hover {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
    :focus {
      color: #ffffff;
      border-bottom: 2px solid white;
    }
  }
  @media ",
                                        "(max-width: 767px)",
                                        " {
    margin-left: 1em;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.li",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bRBYWo",
                                    "target": "li",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <li
                                  className="sc-bRBYWo eQTZbY"
                                >
                                  <Styled(styled.button)
                                    data-testid="signup"
                                    onClick={[Function]}
                                    upperCase={false}
                                  >
                                    <StyledComponent
                                      data-testid="signup"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dVhcbM",
                                            "isStatic": false,
                                            "lastClassName": "kRSQUK",
                                            "rules": Array [
                                              "
  display: flex;
  align-items: center;
  text-transform: ",
                                              [Function],
                                              "
  font-size: 16px;
  font-weight: 500;
  color: inherit;
  background: transparent;
  border: none;
  cursor: pointer;
  img {
    margin-right: 6px;
  }
  ",
                                              "
  border: 1px solid white;
  border-radius: 18px;
  padding: 5px 15px;
  outline: none;
  :hover {
    background-color: rgba(256, 256, 256, 0.15);
  }
  :focus {
    background-color: rgba(256, 256, 256, 0.15);
  }
",
                                            ],
                                          },
                                          "displayName": "Styled(styled.button)",
                                          "foldedComponentIds": Array [
                                            "sc-jhAzac",
                                          ],
                                          "render": [Function],
                                          "styledComponentId": "sc-dVhcbM",
                                          "target": "button",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      upperCase={false}
                                    >
                                      <button
                                        className="sc-jhAzac sc-dVhcbM kRSQUK"
                                        data-testid="signup"
                                        onClick={[Function]}
                                      >
                                        HEADER_SIGN_UP
                                      </button>
                                    </StyledComponent>
                                  </Styled(styled.button)>
                                </li>
                              </StyledComponent>
                            </styled.li>
                          </ul>
                        </StyledComponent>
                      </styled.ul>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Header>
              <Toaster>
                <div />
              </Toaster>
              <styled.div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "",
                  }
                }
              >
                <StyledComponent
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "",
                    }
                  }
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bbmXgH",
                        "isStatic": false,
                        "lastClassName": "jigVgP",
                        "rules": Array [
                          "
  @media (min-width: 1064px) {
    margin: 0 auto;
    padding: 0 20px;
    width: 1024px;
  }
  @media (min-width: 768px) and (max-width: 1063px) {
    margin: 0;
    padding: 0 20px;
  }
  @media (max-width: 767px) {
    margin: 0;
    padding: 0 10px;
  }
  h1 {
    color: #404042;
    font-size: 40px;
    font-weight: 300;
  }
  h2 {
    color: #000000;
    font-size: 28px;
    font-weight: 400;
    padding-top: 50px;
  }
  h3 {
    color: #000000;
    font-size: 22px;
    font-weight: 400;
    line-height: 29px;
  }
  p {
    color: #000000;
    font-size: 16px;
    font-weight: 400;
  }
  strong {
    font-weight: 500;
  }
  a {
    text-decoration: none;
    color: #0081a2;
  }
  .table-scroll {
    overflow-x: auto;
    padding-bottom: 60px;
  }
  table {
    border: 1px solid #dddddd;
    border-spacing: 0;
    width: 100%;
  }
  thead {
    border-radius: 3px 3px 0 0;
    background-color: #ffffff;
    th {
      color: #000000;
      text-align: left;
      font-size: 16px;
      font-weight: 400;
      padding: 10px 10px 10px 30px;
    }
  }
  td {
    border-top: none;
    border-bottom: 1px solid #dddddd;
    border-left: 1px solid #dddddd;
    border-right: 1px solid #dddddd;
    padding: 30px;
    text-align: left;
    min-width: 150px;
    @media (max-width: 767px) {
      padding: 15px;
    }
    br {
      content: '';
      margin: 2em;
      display: block;
      font-size: 24%;
    }
  }
  td:first-child {
    border-right: none;
  }
  td:last-child {
    border-left: none;
  }
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bbmXgH",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-bbmXgH jigVgP"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "",
                      }
                    }
                  />
                </StyledComponent>
              </styled.div>
              <Footer>
                <styled.div
                  data-auto="footer"
                >
                  <StyledComponent
                    data-auto="footer"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jbKcbu",
                          "isStatic": false,
                          "lastClassName": "bSnRLO",
                          "rules": Array [
                            "
  width: 100%;
  text-align: center;
  background-color: #404042;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jbKcbu",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-jbKcbu bSnRLO"
                      data-auto="footer"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dNLxif",
                                "isStatic": false,
                                "lastClassName": "ggAycf",
                                "rules": Array [
                                  "
  display: flex;
  justify-content: space-between;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-dNLxif",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-dNLxif ggAycf"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-frDJqD",
                                      "isStatic": false,
                                      "lastClassName": "jSpeIg",
                                      "rules": Array [
                                        "
  padding: 52px 0 64px 84px;
  ul {
    margin: 0;
    padding: 15px 0 0;
  }
  li {
    display: inline-block;
    margin: 0 2em;
    @media ",
                                        "(max-width: 1365px)",
                                        " {
      display: block;
      margin: 0;
      text-align: left;
      white-space: nowrap;
      margin: 10px 0;
    }
  }
  li:first-child {
    margin-left: 0;
  }
  a {
    cursor: pointer;
    text-decoration: none;
    color: white;
    :focus {
      outline-color: ",
                                        "#F35C2B",
                                        ";
    }
  }
  @media ",
                                        "(max-width: 1365px)",
                                        " {
    padding: 15px 50px;
  }
  @media ",
                                        "(max-width: 767px)",
                                        " {
    padding: 15px;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-frDJqD",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-frDJqD jSpeIg"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-hmzhuo",
                                            "isStatic": false,
                                            "lastClassName": "hZgdAi",
                                            "rules": Array [
                                              "
  height: 28px;
  text-align: left;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-hmzhuo",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-hmzhuo hZgdAi"
                                      >
                                        <Link
                                          to="/"
                                        >
                                          <LinkAnchor
                                            href="/"
                                            navigate={[Function]}
                                          >
                                            <a
                                              href="/"
                                              onClick={[Function]}
                                            >
                                              <img
                                                alt="SpaceSpot Logo"
                                                height="28px"
                                                src="logo.svg"
                                              />
                                            </a>
                                          </LinkAnchor>
                                        </Link>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <ul>
                                    <li>
                                      <a
                                        href="mailto:oslo@spacespot.com"
                                      >
                                        FOOTER_CONTACT
                                      </a>
                                    </li>
                                    <li>
                                      <Link
                                        to="/en-no/privacy"
                                      >
                                        <LinkAnchor
                                          href="/en-no/privacy"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/en-no/privacy"
                                            onClick={[Function]}
                                          >
                                            FOOTER_PRIVACY
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </li>
                                    <li>
                                      <Link
                                        to="/en-no/terms"
                                      >
                                        <LinkAnchor
                                          href="/en-no/terms"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/en-no/terms"
                                            onClick={[Function]}
                                          >
                                            FOOTER_TERMS_OF_SERVICE
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </li>
                                    <li>
                                      <Link
                                        to="/en-no/cookie-policy"
                                      >
                                        <LinkAnchor
                                          href="/en-no/cookie-policy"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/en-no/cookie-policy"
                                            onClick={[Function]}
                                          >
                                            FOOTER_COOKIE_POLICY
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </li>
                                    <li>
                                      <Link
                                        to="/en-no/about-us"
                                      >
                                        <LinkAnchor
                                          href="/en-no/about-us"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/en-no/about-us"
                                            onClick={[Function]}
                                          >
                                            FOOTER_ABOUT_US
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </li>
                                    <li>
                                      <Link
                                        to="/en-no/list"
                                      >
                                        <LinkAnchor
                                          href="/en-no/list"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/en-no/list"
                                            onClick={[Function]}
                                          >
                                            FOOTER_SEARCH
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </li>
                                  </ul>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-kvZOFW",
                                      "isStatic": false,
                                      "lastClassName": "hYiypW",
                                      "rules": Array [
                                        "
  padding: 52px 84px 64px 0;
  text-align: right;
  ul {
    margin: 0;
    @media ",
                                        "(max-width: 1365px)",
                                        " {
      display: inline-flex;
    }
  }
  li {
    display: inline-block;
    margin: 0 1em;
  }
  li:last-child {
    margin-right: 0;
  }
  @media ",
                                        "(max-width: 1365px)",
                                        " {
    padding: 15px 0;
    margin-right: 50px;
  }
  @media ",
                                        "(max-width: 767px)",
                                        " {
    margin-right: 15px;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-kvZOFW",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-kvZOFW hYiypW"
                                >
                                  <LangPicker>
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-TOsTZ",
                                              "isStatic": false,
                                              "lastClassName": "huKCmY",
                                              "rules": Array [
                                                "
  margin-bottom: 24px;
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-TOsTZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-TOsTZ huKCmY"
                                        >
                                          <Styled(Dropdown)
                                            id="lang-dd"
                                            label=""
                                            onChange={[Function]}
                                            value="en-UK"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-kgAjT",
                                                    "isStatic": false,
                                                    "lastClassName": "iVcSFV",
                                                    "rules": Array [
                                                      "
  .MuiInputBase-root.MuiInput-root {
    background-color: #404042;
    color: white;
    width: 150px;
  }
  .MuiSelect-select.MuiSelect-selectMenu.MuiInputBase-input.MuiInput-input {
    border: none;
  }
  .MuiSelect-select:focus {
    outline: none;
    border: none;
  }
  .MuiSvgIcon-root.MuiSelect-icon {
    display: none;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Dropdown)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-kgAjT",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="lang-dd"
                                              label=""
                                              onChange={[Function]}
                                              value="en-UK"
                                            >
                                              <Dropdown
                                                className="sc-kgAjT iVcSFV"
                                                id="lang-dd"
                                                label=""
                                                onChange={[Function]}
                                                value="en-UK"
                                              >
                                                <styled.div
                                                  className="sc-kgAjT iVcSFV"
                                                >
                                                  <StyledComponent
                                                    className="sc-kgAjT iVcSFV"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-cHGsZl",
                                                          "isStatic": false,
                                                          "lastClassName": "iolbvz",
                                                          "rules": Array [
                                                            "
  margin: 10px 0 0 0;
  label {
    display: block;
    padding-left: 6px;
    padding-bottom: 2px;
    color: #404042;
    font-size: 16px;
    font-weight: 400;
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-cHGsZl",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="sc-cHGsZl iolbvz sc-kgAjT iVcSFV"
                                                    >
                                                      <Styled(WithStyles(ForwardRef(Select)))
                                                        id="lang-dd"
                                                        onChange={[Function]}
                                                        value="en-UK"
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "Naked": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "muiName": "Select",
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "id": [Function],
                                                                  "input": [Function],
                                                                  "inputProps": [Function],
                                                                  "labelId": [Function],
                                                                  "labelWidth": [Function],
                                                                  "multiple": [Function],
                                                                  "native": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "renderValue": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              },
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-kjoXOD",
                                                                "isStatic": false,
                                                                "lastClassName": "dDDlXm",
                                                                "rules": Array [
                                                                  "
  width: 100%;
  background-color: #ffffff;
  padding: 0;
  border: none;
  :before,
  :focus,
  :after {
    border-bottom: 1px solid transparent !important;
    transition: none;
    content: '';
    background-color: transparent !important;
  }
  .MuiSelect-select {
    border: 1px solid #ced4da;
    border-radius: 3px;
    height: 21px;
    padding: 8px 6px 4px 6px;
  }
  .MuiSelect-select:focus {
    background-color: transparent !important;
    outline: 1px solid ",
                                                                  [Function],
                                                                  ";
    border: 1px solid ",
                                                                  [Function],
                                                                  ";
  }
  .MuiSelect-root {
    font-size: 16px;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "Styled(WithStyles(ForwardRef(Select)))",
                                                              "foldedComponentIds": Array [],
                                                              "muiName": "Select",
                                                              "options": Object {
                                                                "defaultTheme": Object {
                                                                  "breakpoints": Object {
                                                                    "between": [Function],
                                                                    "down": [Function],
                                                                    "keys": Array [
                                                                      "xs",
                                                                      "sm",
                                                                      "md",
                                                                      "lg",
                                                                      "xl",
                                                                    ],
                                                                    "only": [Function],
                                                                    "up": [Function],
                                                                    "values": Object {
                                                                      "lg": 1280,
                                                                      "md": 960,
                                                                      "sm": 600,
                                                                      "xl": 1920,
                                                                      "xs": 0,
                                                                    },
                                                                    "width": [Function],
                                                                  },
                                                                  "direction": "ltr",
                                                                  "mixins": Object {
                                                                    "gutters": [Function],
                                                                    "toolbar": Object {
                                                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                        "minHeight": 48,
                                                                      },
                                                                      "@media (min-width:600px)": Object {
                                                                        "minHeight": 64,
                                                                      },
                                                                      "minHeight": 56,
                                                                    },
                                                                  },
                                                                  "overrides": Object {},
                                                                  "palette": Object {
                                                                    "action": Object {
                                                                      "active": "rgba(0, 0, 0, 0.54)",
                                                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                      "hover": "rgba(0, 0, 0, 0.08)",
                                                                      "hoverOpacity": 0.08,
                                                                      "selected": "rgba(0, 0, 0, 0.14)",
                                                                    },
                                                                    "augmentColor": [Function],
                                                                    "background": Object {
                                                                      "default": "#fafafa",
                                                                      "paper": "#fff",
                                                                    },
                                                                    "common": Object {
                                                                      "black": "#000",
                                                                      "white": "#fff",
                                                                    },
                                                                    "contrastThreshold": 3,
                                                                    "divider": "rgba(0, 0, 0, 0.12)",
                                                                    "error": Object {
                                                                      "contrastText": "#fff",
                                                                      "dark": "#d32f2f",
                                                                      "light": "#e57373",
                                                                      "main": "#f44336",
                                                                    },
                                                                    "getContrastText": [Function],
                                                                    "grey": Object {
                                                                      "100": "#f5f5f5",
                                                                      "200": "#eeeeee",
                                                                      "300": "#e0e0e0",
                                                                      "400": "#bdbdbd",
                                                                      "50": "#fafafa",
                                                                      "500": "#9e9e9e",
                                                                      "600": "#757575",
                                                                      "700": "#616161",
                                                                      "800": "#424242",
                                                                      "900": "#212121",
                                                                      "A100": "#d5d5d5",
                                                                      "A200": "#aaaaaa",
                                                                      "A400": "#303030",
                                                                      "A700": "#616161",
                                                                    },
                                                                    "primary": Object {
                                                                      "contrastText": "#fff",
                                                                      "dark": "#303f9f",
                                                                      "light": "#7986cb",
                                                                      "main": "#3f51b5",
                                                                    },
                                                                    "secondary": Object {
                                                                      "contrastText": "#fff",
                                                                      "dark": "#c51162",
                                                                      "light": "#ff4081",
                                                                      "main": "#f50057",
                                                                    },
                                                                    "text": Object {
                                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                                      "hint": "rgba(0, 0, 0, 0.38)",
                                                                      "primary": "rgba(0, 0, 0, 0.87)",
                                                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                                                    },
                                                                    "tonalOffset": 0.2,
                                                                    "type": "light",
                                                                  },
                                                                  "props": Object {},
                                                                  "shadows": Array [
                                                                    "none",
                                                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                  ],
                                                                  "shape": Object {
                                                                    "borderRadius": 4,
                                                                  },
                                                                  "spacing": [Function],
                                                                  "transitions": Object {
                                                                    "create": [Function],
                                                                    "duration": Object {
                                                                      "complex": 375,
                                                                      "enteringScreen": 225,
                                                                      "leavingScreen": 195,
                                                                      "short": 250,
                                                                      "shorter": 200,
                                                                      "shortest": 150,
                                                                      "standard": 300,
                                                                    },
                                                                    "easing": Object {
                                                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                    },
                                                                    "getAutoHeightDuration": [Function],
                                                                  },
                                                                  "typography": Object {
                                                                    "body1": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "1rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.00938em",
                                                                      "lineHeight": 1.5,
                                                                    },
                                                                    "body2": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "0.875rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.01071em",
                                                                      "lineHeight": 1.43,
                                                                    },
                                                                    "button": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "0.875rem",
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": "0.02857em",
                                                                      "lineHeight": 1.75,
                                                                      "textTransform": "uppercase",
                                                                    },
                                                                    "caption": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "0.75rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.03333em",
                                                                      "lineHeight": 1.66,
                                                                    },
                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                    "fontSize": 14,
                                                                    "fontWeightBold": 700,
                                                                    "fontWeightLight": 300,
                                                                    "fontWeightMedium": 500,
                                                                    "fontWeightRegular": 400,
                                                                    "h1": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "6rem",
                                                                      "fontWeight": 300,
                                                                      "letterSpacing": "-0.01562em",
                                                                      "lineHeight": 1.167,
                                                                    },
                                                                    "h2": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "3.75rem",
                                                                      "fontWeight": 300,
                                                                      "letterSpacing": "-0.00833em",
                                                                      "lineHeight": 1.2,
                                                                    },
                                                                    "h3": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "3rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0em",
                                                                      "lineHeight": 1.167,
                                                                    },
                                                                    "h4": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "2.125rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.00735em",
                                                                      "lineHeight": 1.235,
                                                                    },
                                                                    "h5": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "1.5rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0em",
                                                                      "lineHeight": 1.334,
                                                                    },
                                                                    "h6": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "1.25rem",
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": "0.0075em",
                                                                      "lineHeight": 1.6,
                                                                    },
                                                                    "htmlFontSize": 16,
                                                                    "overline": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "0.75rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.08333em",
                                                                      "lineHeight": 2.66,
                                                                      "textTransform": "uppercase",
                                                                    },
                                                                    "pxToRem": [Function],
                                                                    "round": [Function],
                                                                    "subtitle1": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "1rem",
                                                                      "fontWeight": 400,
                                                                      "letterSpacing": "0.00938em",
                                                                      "lineHeight": 1.75,
                                                                    },
                                                                    "subtitle2": Object {
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": "0.875rem",
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": "0.00714em",
                                                                      "lineHeight": 1.57,
                                                                    },
                                                                  },
                                                                  "zIndex": Object {
                                                                    "appBar": 1100,
                                                                    "drawer": 1200,
                                                                    "mobileStepper": 1000,
                                                                    "modal": 1300,
                                                                    "snackbar": 1400,
                                                                    "speedDial": 1050,
                                                                    "tooltip": 1500,
                                                                  },
                                                                },
                                                                "name": "MuiSelect",
                                                              },
                                                              "propTypes": Object {
                                                                "classes": [Function],
                                                                "innerRef": [Function],
                                                              },
                                                              "render": [Function],
                                                              "styledComponentId": "sc-kjoXOD",
                                                              "target": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "Naked": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "muiName": "Select",
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "id": [Function],
                                                                    "input": [Function],
                                                                    "inputProps": [Function],
                                                                    "labelId": [Function],
                                                                    "labelWidth": [Function],
                                                                    "multiple": [Function],
                                                                    "native": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "renderValue": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                },
                                                                "defaultProps": undefined,
                                                                "displayName": "WithStyles(ForwardRef(Select))",
                                                                "muiName": "Select",
                                                                "options": Object {
                                                                  "defaultTheme": Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "overrides": Object {},
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                                        "hoverOpacity": 0.08,
                                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#d32f2f",
                                                                        "light": "#e57373",
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "type": "light",
                                                                    },
                                                                    "props": Object {},
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": [Function],
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.43,
                                                                      },
                                                                      "button": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightBold": 700,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1.2,
                                                                      },
                                                                      "h3": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h4": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.235,
                                                                      },
                                                                      "h5": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.334,
                                                                      },
                                                                      "h6": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "htmlFontSize": 16,
                                                                      "overline": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subtitle1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "speedDial": 1050,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  },
                                                                  "name": "MuiSelect",
                                                                },
                                                                "propTypes": Object {
                                                                  "classes": [Function],
                                                                  "innerRef": [Function],
                                                                },
                                                                "render": [Function],
                                                                "useStyles": [Function],
                                                              },
                                                              "toString": [Function],
                                                              "useStyles": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="lang-dd"
                                                          onChange={[Function]}
                                                          value="en-UK"
                                                        >
                                                          <WithStyles(ForwardRef(Select))
                                                            className="sc-kjoXOD dDDlXm"
                                                            id="lang-dd"
                                                            onChange={[Function]}
                                                            value="en-UK"
                                                          >
                                                            <ForwardRef(Select)
                                                              className="sc-kjoXOD dDDlXm"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                }
                                                              }
                                                              id="lang-dd"
                                                              onChange={[Function]}
                                                              value="en-UK"
                                                            >
                                                              <WithStyles(ForwardRef(Input))
                                                                className="sc-kjoXOD dDDlXm"
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "required": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "displayName": "ArrowDropDownIcon",
                                                                      "muiName": "SvgIcon",
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": "lang-dd",
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                        value="en-UK"
                                                                      >
                                                                        <ForwardRef(styled.div)>
                                                                          <img
                                                                            alt="uk"
                                                                            src="uk.svg"
                                                                          />
                                                                          <ForwardRef(styled.div)>
                                                                            English (UK)
                                                                          </ForwardRef(styled.div)>
                                                                        </ForwardRef(styled.div)>
                                                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                      <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                        value="nb-NO"
                                                                      >
                                                                        <ForwardRef(styled.div)>
                                                                          <img
                                                                            alt="nb"
                                                                            src="norway.svg"
                                                                          />
                                                                          <ForwardRef(styled.div)>
                                                                            Norsk (Norge)
                                                                          </ForwardRef(styled.div)>
                                                                        </ForwardRef(styled.div)>
                                                                      </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                                onChange={[Function]}
                                                                value="en-UK"
                                                              >
                                                                <ForwardRef(Input)
                                                                  className="sc-kjoXOD dDDlXm"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root",
                                                                      "underline": "MuiInput-underline",
                                                                    }
                                                                  }
                                                                  inputComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "IconComponent": [Function],
                                                                        "MenuProps": [Function],
                                                                        "SelectDisplayProps": [Function],
                                                                        "autoFocus": [Function],
                                                                        "autoWidth": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "defaultValue": [Function],
                                                                        "disabled": [Function],
                                                                        "displayEmpty": [Function],
                                                                        "inputRef": [Function],
                                                                        "labelId": [Function],
                                                                        "multiple": [Function],
                                                                        "name": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onClose": [Function],
                                                                        "onFocus": [Function],
                                                                        "onOpen": [Function],
                                                                        "open": [Function],
                                                                        "readOnly": [Function],
                                                                        "renderValue": [Function],
                                                                        "required": [Function],
                                                                        "tabIndex": [Function],
                                                                        "type": [Function],
                                                                        "value": [Function],
                                                                        "variant": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  inputProps={
                                                                    Object {
                                                                      "IconComponent": Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "displayName": "ArrowDropDownIcon",
                                                                        "muiName": "SvgIcon",
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      },
                                                                      "MenuProps": undefined,
                                                                      "SelectDisplayProps": Object {
                                                                        "id": "lang-dd",
                                                                      },
                                                                      "autoWidth": false,
                                                                      "children": Array [
                                                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                          value="en-UK"
                                                                        >
                                                                          <ForwardRef(styled.div)>
                                                                            <img
                                                                              alt="uk"
                                                                              src="uk.svg"
                                                                            />
                                                                            <ForwardRef(styled.div)>
                                                                              English (UK)
                                                                            </ForwardRef(styled.div)>
                                                                          </ForwardRef(styled.div)>
                                                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                        <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                          value="nb-NO"
                                                                        >
                                                                          <ForwardRef(styled.div)>
                                                                            <img
                                                                              alt="nb"
                                                                              src="norway.svg"
                                                                            />
                                                                            <ForwardRef(styled.div)>
                                                                              Norsk (Norge)
                                                                            </ForwardRef(styled.div)>
                                                                          </ForwardRef(styled.div)>
                                                                        </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                      ],
                                                                      "classes": Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      },
                                                                      "displayEmpty": false,
                                                                      "labelId": undefined,
                                                                      "multiple": false,
                                                                      "onClose": undefined,
                                                                      "onOpen": undefined,
                                                                      "open": undefined,
                                                                      "renderValue": undefined,
                                                                      "type": undefined,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  onChange={[Function]}
                                                                  value="en-UK"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    className="sc-kjoXOD dDDlXm"
                                                                    classes={
                                                                      Object {
                                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "formControl": "MuiInput-formControl",
                                                                        "fullWidth": "MuiInput-fullWidth",
                                                                        "input": "MuiInput-input",
                                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInput-marginDense",
                                                                        "multiline": "MuiInput-multiline",
                                                                        "root": "MuiInput-root MuiInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    inputComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "propTypes": Object {
                                                                          "IconComponent": [Function],
                                                                          "MenuProps": [Function],
                                                                          "SelectDisplayProps": [Function],
                                                                          "autoFocus": [Function],
                                                                          "autoWidth": [Function],
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "classes": [Function],
                                                                          "defaultValue": [Function],
                                                                          "disabled": [Function],
                                                                          "displayEmpty": [Function],
                                                                          "inputRef": [Function],
                                                                          "labelId": [Function],
                                                                          "multiple": [Function],
                                                                          "name": [Function],
                                                                          "onBlur": [Function],
                                                                          "onChange": [Function],
                                                                          "onClose": [Function],
                                                                          "onFocus": [Function],
                                                                          "onOpen": [Function],
                                                                          "open": [Function],
                                                                          "readOnly": [Function],
                                                                          "renderValue": [Function],
                                                                          "required": [Function],
                                                                          "tabIndex": [Function],
                                                                          "type": [Function],
                                                                          "value": [Function],
                                                                          "variant": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    inputProps={
                                                                      Object {
                                                                        "IconComponent": Object {
                                                                          "$$typeof": Symbol(react.memo),
                                                                          "compare": null,
                                                                          "displayName": "ArrowDropDownIcon",
                                                                          "muiName": "SvgIcon",
                                                                          "type": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "render": [Function],
                                                                          },
                                                                        },
                                                                        "MenuProps": undefined,
                                                                        "SelectDisplayProps": Object {
                                                                          "id": "lang-dd",
                                                                        },
                                                                        "autoWidth": false,
                                                                        "children": Array [
                                                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                            value="en-UK"
                                                                          >
                                                                            <ForwardRef(styled.div)>
                                                                              <img
                                                                                alt="uk"
                                                                                src="uk.svg"
                                                                              />
                                                                              <ForwardRef(styled.div)>
                                                                                English (UK)
                                                                              </ForwardRef(styled.div)>
                                                                            </ForwardRef(styled.div)>
                                                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                          <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                            value="nb-NO"
                                                                          >
                                                                            <ForwardRef(styled.div)>
                                                                              <img
                                                                                alt="nb"
                                                                                src="norway.svg"
                                                                              />
                                                                              <ForwardRef(styled.div)>
                                                                                Norsk (Norge)
                                                                              </ForwardRef(styled.div)>
                                                                            </ForwardRef(styled.div)>
                                                                          </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                        ],
                                                                        "classes": Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        },
                                                                        "displayEmpty": false,
                                                                        "labelId": undefined,
                                                                        "multiple": false,
                                                                        "onClose": undefined,
                                                                        "onOpen": undefined,
                                                                        "open": undefined,
                                                                        "renderValue": undefined,
                                                                        "type": undefined,
                                                                        "variant": "standard",
                                                                      }
                                                                    }
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    type="text"
                                                                    value="en-UK"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      className="sc-kjoXOD dDDlXm"
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                          "input": "MuiInputBase-input MuiInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={false}
                                                                      inputComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "propTypes": Object {
                                                                            "IconComponent": [Function],
                                                                            "MenuProps": [Function],
                                                                            "SelectDisplayProps": [Function],
                                                                            "autoFocus": [Function],
                                                                            "autoWidth": [Function],
                                                                            "children": [Function],
                                                                            "className": [Function],
                                                                            "classes": [Function],
                                                                            "defaultValue": [Function],
                                                                            "disabled": [Function],
                                                                            "displayEmpty": [Function],
                                                                            "inputRef": [Function],
                                                                            "labelId": [Function],
                                                                            "multiple": [Function],
                                                                            "name": [Function],
                                                                            "onBlur": [Function],
                                                                            "onChange": [Function],
                                                                            "onClose": [Function],
                                                                            "onFocus": [Function],
                                                                            "onOpen": [Function],
                                                                            "open": [Function],
                                                                            "readOnly": [Function],
                                                                            "renderValue": [Function],
                                                                            "required": [Function],
                                                                            "tabIndex": [Function],
                                                                            "type": [Function],
                                                                            "value": [Function],
                                                                            "variant": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      inputProps={
                                                                        Object {
                                                                          "IconComponent": Object {
                                                                            "$$typeof": Symbol(react.memo),
                                                                            "compare": null,
                                                                            "displayName": "ArrowDropDownIcon",
                                                                            "muiName": "SvgIcon",
                                                                            "type": Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "render": [Function],
                                                                            },
                                                                          },
                                                                          "MenuProps": undefined,
                                                                          "SelectDisplayProps": Object {
                                                                            "id": "lang-dd",
                                                                          },
                                                                          "autoWidth": false,
                                                                          "children": Array [
                                                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                              value="en-UK"
                                                                            >
                                                                              <ForwardRef(styled.div)>
                                                                                <img
                                                                                  alt="uk"
                                                                                  src="uk.svg"
                                                                                />
                                                                                <ForwardRef(styled.div)>
                                                                                  English (UK)
                                                                                </ForwardRef(styled.div)>
                                                                              </ForwardRef(styled.div)>
                                                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                            <ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))
                                                                              value="nb-NO"
                                                                            >
                                                                              <ForwardRef(styled.div)>
                                                                                <img
                                                                                  alt="nb"
                                                                                  src="norway.svg"
                                                                                />
                                                                                <ForwardRef(styled.div)>
                                                                                  Norsk (Norge)
                                                                                </ForwardRef(styled.div)>
                                                                              </ForwardRef(styled.div)>
                                                                            </ForwardRef(Styled(WithStyles(ForwardRef(MenuItem))))>,
                                                                          ],
                                                                          "classes": Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "filled": "MuiSelect-filled",
                                                                            "icon": "MuiSelect-icon",
                                                                            "iconFilled": "MuiSelect-iconFilled",
                                                                            "iconOpen": "MuiSelect-iconOpen",
                                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                                            "outlined": "MuiSelect-outlined",
                                                                            "root": "MuiSelect-root",
                                                                            "select": "MuiSelect-select",
                                                                            "selectMenu": "MuiSelect-selectMenu",
                                                                          },
                                                                          "displayEmpty": false,
                                                                          "labelId": undefined,
                                                                          "multiple": false,
                                                                          "onClose": undefined,
                                                                          "onOpen": undefined,
                                                                          "open": undefined,
                                                                          "renderValue": undefined,
                                                                          "type": undefined,
                                                                          "variant": "standard",
                                                                        }
                                                                      }
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="en-UK"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiInput-root MuiInput-underline sc-kjoXOD dDDlXm"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <ForwardRef(SelectInput)
                                                                          IconComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.memo),
                                                                              "compare": null,
                                                                              "displayName": "ArrowDropDownIcon",
                                                                              "muiName": "SvgIcon",
                                                                              "type": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "render": [Function],
                                                                              },
                                                                            }
                                                                          }
                                                                          SelectDisplayProps={
                                                                            Object {
                                                                              "id": "lang-dd",
                                                                            }
                                                                          }
                                                                          autoWidth={false}
                                                                          className="MuiInputBase-input MuiInput-input"
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "filled": "MuiSelect-filled",
                                                                              "icon": "MuiSelect-icon",
                                                                              "iconFilled": "MuiSelect-iconFilled",
                                                                              "iconOpen": "MuiSelect-iconOpen",
                                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                                              "outlined": "MuiSelect-outlined",
                                                                              "root": "MuiSelect-root",
                                                                              "select": "MuiSelect-select",
                                                                              "selectMenu": "MuiSelect-selectMenu",
                                                                            }
                                                                          }
                                                                          displayEmpty={false}
                                                                          inputRef={[Function]}
                                                                          multiple={false}
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="en-UK"
                                                                          variant="standard"
                                                                        >
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby=" lang-dd"
                                                                            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                            id="lang-dd"
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <styled.div>
                                                                              <StyledComponent
                                                                                forwardedComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "sc-cJSrbW",
                                                                                      "isStatic": false,
                                                                                      "lastClassName": "kSIIvy",
                                                                                      "rules": Array [
                                                                                        "
  display: flex;
",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "styled.div",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "sc-cJSrbW",
                                                                                    "target": "div",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                                forwardedRef={null}
                                                                              >
                                                                                <div
                                                                                  className="sc-cJSrbW kSIIvy"
                                                                                >
                                                                                  <img
                                                                                    alt="uk"
                                                                                    src="uk.svg"
                                                                                  />
                                                                                  <styled.div>
                                                                                    <StyledComponent
                                                                                      forwardedComponent={
                                                                                        Object {
                                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                                          "attrs": Array [],
                                                                                          "componentStyle": ComponentStyle {
                                                                                            "componentId": "sc-ksYbfQ",
                                                                                            "isStatic": false,
                                                                                            "lastClassName": "eKJPBD",
                                                                                            "rules": Array [
                                                                                              "
  margin-left: 10px;
",
                                                                                            ],
                                                                                          },
                                                                                          "displayName": "styled.div",
                                                                                          "foldedComponentIds": Array [],
                                                                                          "render": [Function],
                                                                                          "styledComponentId": "sc-ksYbfQ",
                                                                                          "target": "div",
                                                                                          "toString": [Function],
                                                                                          "warnTooManyClasses": [Function],
                                                                                          "withComponent": [Function],
                                                                                        }
                                                                                      }
                                                                                      forwardedRef={null}
                                                                                    >
                                                                                      <div
                                                                                        className="sc-ksYbfQ eKJPBD"
                                                                                      >
                                                                                        English (UK)
                                                                                      </div>
                                                                                    </StyledComponent>
                                                                                  </styled.div>
                                                                                </div>
                                                                              </StyledComponent>
                                                                            </styled.div>
                                                                          </div>
                                                                          <input
                                                                            onAnimationStart={[Function]}
                                                                            type="hidden"
                                                                            value="en-UK"
                                                                          />
                                                                          <ForwardRef
                                                                            className="MuiSelect-icon"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiSelect-icon"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiSelect-icon"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  className="MuiSvgIcon-root MuiSelect-icon"
                                                                                  focusable="false"
                                                                                  role="presentation"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M7 10l5 5 5-5z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef>
                                                                          <WithStyles(ForwardRef(Menu))
                                                                            MenuListProps={
                                                                              Object {
                                                                                "aria-labelledby": undefined,
                                                                                "disableListWrap": true,
                                                                                "role": "listbox",
                                                                              }
                                                                            }
                                                                            PaperProps={
                                                                              Object {
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby=" lang-dd"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                id="lang-dd"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <div
                                                                                  class="sc-cJSrbW kSIIvy"
                                                                                >
                                                                                  <img
                                                                                    alt="uk"
                                                                                    src="uk.svg"
                                                                                  />
                                                                                  <div
                                                                                    class="sc-ksYbfQ eKJPBD"
                                                                                  >
                                                                                    English (UK)
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            }
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          >
                                                                            <ForwardRef(Menu)
                                                                              MenuListProps={
                                                                                Object {
                                                                                  "aria-labelledby": undefined,
                                                                                  "disableListWrap": true,
                                                                                  "role": "listbox",
                                                                                }
                                                                              }
                                                                              PaperProps={
                                                                                Object {
                                                                                  "style": Object {
                                                                                    "minWidth": undefined,
                                                                                  },
                                                                                }
                                                                              }
                                                                              anchorEl={
                                                                                <div
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby=" lang-dd"
                                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                  id="lang-dd"
                                                                                  role="button"
                                                                                  tabindex="0"
                                                                                >
                                                                                  <div
                                                                                    class="sc-cJSrbW kSIIvy"
                                                                                  >
                                                                                    <img
                                                                                      alt="uk"
                                                                                      src="uk.svg"
                                                                                    />
                                                                                    <div
                                                                                      class="sc-ksYbfQ eKJPBD"
                                                                                    >
                                                                                      English (UK)
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                              }
                                                                              classes={
                                                                                Object {
                                                                                  "list": "MuiMenu-list",
                                                                                  "paper": "MuiMenu-paper",
                                                                                }
                                                                              }
                                                                              id="menu-"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            >
                                                                              <WithStyles(ForwardRef(Popover))
                                                                                PaperProps={
                                                                                  Object {
                                                                                    "classes": Object {
                                                                                      "root": "MuiMenu-paper",
                                                                                    },
                                                                                    "style": Object {
                                                                                      "minWidth": undefined,
                                                                                    },
                                                                                  }
                                                                                }
                                                                                anchorEl={
                                                                                  <div
                                                                                    aria-haspopup="listbox"
                                                                                    aria-labelledby=" lang-dd"
                                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                    id="lang-dd"
                                                                                    role="button"
                                                                                    tabindex="0"
                                                                                  >
                                                                                    <div
                                                                                      class="sc-cJSrbW kSIIvy"
                                                                                    >
                                                                                      <img
                                                                                        alt="uk"
                                                                                        src="uk.svg"
                                                                                      />
                                                                                      <div
                                                                                        class="sc-ksYbfQ eKJPBD"
                                                                                      >
                                                                                        English (UK)
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                }
                                                                                anchorOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                getContentAnchorEl={[Function]}
                                                                                id="menu-"
                                                                                onClose={[Function]}
                                                                                onEntering={[Function]}
                                                                                open={false}
                                                                                transformOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                transitionDuration="auto"
                                                                              >
                                                                                <ForwardRef(Popover)
                                                                                  PaperProps={
                                                                                    Object {
                                                                                      "classes": Object {
                                                                                        "root": "MuiMenu-paper",
                                                                                      },
                                                                                      "style": Object {
                                                                                        "minWidth": undefined,
                                                                                      },
                                                                                    }
                                                                                  }
                                                                                  anchorEl={
                                                                                    <div
                                                                                      aria-haspopup="listbox"
                                                                                      aria-labelledby=" lang-dd"
                                                                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                      id="lang-dd"
                                                                                      role="button"
                                                                                      tabindex="0"
                                                                                    >
                                                                                      <div
                                                                                        class="sc-cJSrbW kSIIvy"
                                                                                      >
                                                                                        <img
                                                                                          alt="uk"
                                                                                          src="uk.svg"
                                                                                        />
                                                                                        <div
                                                                                          class="sc-ksYbfQ eKJPBD"
                                                                                        >
                                                                                          English (UK)
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>
                                                                                  }
                                                                                  anchorOrigin={
                                                                                    Object {
                                                                                      "horizontal": "left",
                                                                                      "vertical": "top",
                                                                                    }
                                                                                  }
                                                                                  classes={
                                                                                    Object {
                                                                                      "paper": "MuiPopover-paper",
                                                                                      "root": "MuiPopover-root",
                                                                                    }
                                                                                  }
                                                                                  getContentAnchorEl={[Function]}
                                                                                  id="menu-"
                                                                                  onClose={[Function]}
                                                                                  onEntering={[Function]}
                                                                                  open={false}
                                                                                  transformOrigin={
                                                                                    Object {
                                                                                      "horizontal": "left",
                                                                                      "vertical": "top",
                                                                                    }
                                                                                  }
                                                                                  transitionDuration="auto"
                                                                                >
                                                                                  <ForwardRef(Modal)
                                                                                    BackdropProps={
                                                                                      Object {
                                                                                        "invisible": true,
                                                                                      }
                                                                                    }
                                                                                    className="MuiPopover-root"
                                                                                    container={
                                                                                      <body
                                                                                        style="padding-right: 0px; overflow: hidden;"
                                                                                      >
                                                                                        <div
                                                                                          class="MuiDialog-root"
                                                                                          role="presentation"
                                                                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                                        >
                                                                                          <div
                                                                                            aria-hidden="true"
                                                                                            class="MuiBackdrop-root"
                                                                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                          />
                                                                                          <div
                                                                                            data-test="sentinelStart"
                                                                                            tabindex="0"
                                                                                          />
                                                                                          <div
                                                                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                            role="none presentation"
                                                                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                            tabindex="-1"
                                                                                          >
                                                                                            <div
                                                                                              class="MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-rounded"
                                                                                              role="dialog"
                                                                                            >
                                                                                              <div
                                                                                                class="MuiDialogTitle-root sc-iwsKbI jrVdvK"
                                                                                              >
                                                                                                <h2
                                                                                                  class="MuiTypography-root MuiTypography-h6"
                                                                                                >
                                                                                                  <img
                                                                                                    alt="cookie"
                                                                                                    src="cookie.svg"
                                                                                                  />
                                                                                                  COOKIE_TITLE
                                                                                                </h2>
                                                                                              </div>
                                                                                              <div
                                                                                                class="MuiDialogContent-root sc-htoDjs hOVInI"
                                                                                              >
                                                                                                <div
                                                                                                  class="sc-dnqmqq cTMciD"
                                                                                                />
                                                                                              </div>
                                                                                              <div
                                                                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                                              >
                                                                                                <div
                                                                                                  class="sc-gzVnrw dfuvhJ"
                                                                                                >
                                                                                                  <button
                                                                                                    class="sc-bwzfXH sc-gZMcBi fbqngS"
                                                                                                    color="primary"
                                                                                                    id="cookieDialogOK"
                                                                                                  >
                                                                                                    COOKIE_ACCEPT
                                                                                                  </button>
                                                                                                </div>
                                                                                              </div>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            data-test="sentinelEnd"
                                                                                            tabindex="0"
                                                                                          />
                                                                                        </div>
                                                                                      </body>
                                                                                    }
                                                                                    id="menu-"
                                                                                    onClose={[Function]}
                                                                                    open={false}
                                                                                  />
                                                                                </ForwardRef(Popover)>
                                                                              </WithStyles(ForwardRef(Popover))>
                                                                            </ForwardRef(Menu)>
                                                                          </WithStyles(ForwardRef(Menu))>
                                                                        </ForwardRef(SelectInput)>
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(Input)>
                                                              </WithStyles(ForwardRef(Input))>
                                                            </ForwardRef(Select)>
                                                          </WithStyles(ForwardRef(Select))>
                                                        </StyledComponent>
                                                      </Styled(WithStyles(ForwardRef(Select)))>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Dropdown>
                                            </StyledComponent>
                                          </Styled(Dropdown)>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </LangPicker>
                                  <ul>
                                    <li>
                                      <a
                                        href="https://www.facebook.com/myspacespot"
                                        rel="noopener noreferrer"
                                        target="_blank"
                                      >
                                        <img
                                          alt="FOOTER_FACEBOOK"
                                          height="30px"
                                          src="facebook.svg"
                                          width="17px"
                                        />
                                      </a>
                                    </li>
                                    <li>
                                      <a
                                        href="https://www.instagram.com/myspacespot"
                                        rel="noopener noreferrer"
                                        target="_blank"
                                      >
                                        <img
                                          alt="FOOTER_INSTAGRAM"
                                          height="30px"
                                          src="instagram.svg"
                                          width="30px"
                                        />
                                      </a>
                                    </li>
                                    <li>
                                      <a
                                        href="https://www.linkedin.com/company/Spacespot"
                                        rel="noopener noreferrer"
                                        target="_blank"
                                      >
                                        <img
                                          alt="FOOTER_LINKEDIN"
                                          height="30px"
                                          src="linkedin.svg"
                                          width="30px"
                                        />
                                      </a>
                                    </li>
                                  </ul>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-hqyNC",
                                            "isStatic": false,
                                            "lastClassName": "dBlZdt",
                                            "rules": Array [
                                              "
  color: #ffffff;
  font-size: 16px;
  font-weight: 400;
  padding-top: 10px;
  text-align: right;
  @media ",
                                              "(max-width: 1365px)",
                                              " {
    display: none;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-hqyNC",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-hqyNC dBlZdt"
                                      >
                                        FOOTER_RIGHTS_RESERVED
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <Styled(styled.div)>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jqCOkK",
                                "isStatic": false,
                                "lastClassName": "aoqy",
                                "rules": Array [
                                  "
  color: #ffffff;
  font-size: 16px;
  font-weight: 400;
  padding-top: 10px;
  text-align: right;
  @media ",
                                  "(max-width: 1365px)",
                                  " {
    display: none;
  }
",
                                  "
  display: none;
  text-align: left;
  padding: 15px 50px;
  @media ",
                                  "(max-width: 1365px)",
                                  " {
    display: block;
  }
",
                                ],
                              },
                              "displayName": "Styled(styled.div)",
                              "foldedComponentIds": Array [
                                "sc-hqyNC",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-jqCOkK",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-hqyNC sc-jqCOkK aoqy"
                          >
                            FOOTER_RIGHTS_RESERVED
                          </div>
                        </StyledComponent>
                      </Styled(styled.div)>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Footer>
            </div>
          </StyledComponent>
        </styled.div>
      </OnBoardingLayout>
    </Privacy>
  </Router>
</Provider>
`;
